// Generated by view binder compiler. Do not edit!
package com.android.launcher3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.launcher3.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DashViewBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final RecyclerView dashControlRecycler;

  @NonNull
  public final RecyclerView dashRecycler;

  @NonNull
  public final AppCompatImageView musicNext;

  @NonNull
  public final AppCompatImageView musicPlay;

  @NonNull
  public final AppCompatImageView musicPrev;

  @NonNull
  public final ConstraintLayout musicTab;

  private DashViewBinding(@NonNull CoordinatorLayout rootView,
      @NonNull RecyclerView dashControlRecycler, @NonNull RecyclerView dashRecycler,
      @NonNull AppCompatImageView musicNext, @NonNull AppCompatImageView musicPlay,
      @NonNull AppCompatImageView musicPrev, @NonNull ConstraintLayout musicTab) {
    this.rootView = rootView;
    this.dashControlRecycler = dashControlRecycler;
    this.dashRecycler = dashRecycler;
    this.musicNext = musicNext;
    this.musicPlay = musicPlay;
    this.musicPrev = musicPrev;
    this.musicTab = musicTab;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DashViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DashViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dash_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DashViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dash_control_recycler;
      RecyclerView dashControlRecycler = ViewBindings.findChildViewById(rootView, id);
      if (dashControlRecycler == null) {
        break missingId;
      }

      id = R.id.dash_recycler;
      RecyclerView dashRecycler = ViewBindings.findChildViewById(rootView, id);
      if (dashRecycler == null) {
        break missingId;
      }

      id = R.id.musicNext;
      AppCompatImageView musicNext = ViewBindings.findChildViewById(rootView, id);
      if (musicNext == null) {
        break missingId;
      }

      id = R.id.musicPlay;
      AppCompatImageView musicPlay = ViewBindings.findChildViewById(rootView, id);
      if (musicPlay == null) {
        break missingId;
      }

      id = R.id.musicPrev;
      AppCompatImageView musicPrev = ViewBindings.findChildViewById(rootView, id);
      if (musicPrev == null) {
        break missingId;
      }

      id = R.id.musicTab;
      ConstraintLayout musicTab = ViewBindings.findChildViewById(rootView, id);
      if (musicTab == null) {
        break missingId;
      }

      return new DashViewBinding((CoordinatorLayout) rootView, dashControlRecycler, dashRecycler,
          musicNext, musicPlay, musicPrev, musicTab);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
