// Generated by view binder compiler. Do not edit!
package com.android.launcher3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.Space;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.launcher3.R;
import com.android.quickstep.views.OverviewActionsView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class OverviewActionsContainerBinding implements ViewBinding {
  @NonNull
  private final OverviewActionsView rootView;

  @NonNull
  public final LinearLayout actionButtons;

  @NonNull
  public final Button actionScreenshot;

  @NonNull
  public final Button actionShare;

  @NonNull
  public final Space shareSpace;

  private OverviewActionsContainerBinding(@NonNull OverviewActionsView rootView,
      @NonNull LinearLayout actionButtons, @NonNull Button actionScreenshot,
      @NonNull Button actionShare, @NonNull Space shareSpace) {
    this.rootView = rootView;
    this.actionButtons = actionButtons;
    this.actionScreenshot = actionScreenshot;
    this.actionShare = actionShare;
    this.shareSpace = shareSpace;
  }

  @Override
  @NonNull
  public OverviewActionsView getRoot() {
    return rootView;
  }

  @NonNull
  public static OverviewActionsContainerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static OverviewActionsContainerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.overview_actions_container, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static OverviewActionsContainerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.action_buttons;
      LinearLayout actionButtons = ViewBindings.findChildViewById(rootView, id);
      if (actionButtons == null) {
        break missingId;
      }

      id = R.id.action_screenshot;
      Button actionScreenshot = ViewBindings.findChildViewById(rootView, id);
      if (actionScreenshot == null) {
        break missingId;
      }

      id = R.id.action_share;
      Button actionShare = ViewBindings.findChildViewById(rootView, id);
      if (actionShare == null) {
        break missingId;
      }

      id = R.id.share_space;
      Space shareSpace = ViewBindings.findChildViewById(rootView, id);
      if (shareSpace == null) {
        break missingId;
      }

      return new OverviewActionsContainerBinding((OverviewActionsView) rootView, actionButtons,
          actionScreenshot, actionShare, shareSpace);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
