// Generated by view binder compiler. Do not edit!
package com.android.launcher3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.launcher3.InsettableFrameLayout;
import com.android.launcher3.R;
import com.saggitt.omega.settings.search.SettingsSearchView;
import com.saggitt.omega.views.PreferenceRecyclerView;
import com.saggitt.omega.views.SettingsSearchLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingsSearchBinding implements ViewBinding {
  @NonNull
  private final SettingsSearchLayout rootView;

  @NonNull
  public final InsettableFrameLayout layoutResults;

  @NonNull
  public final PreferenceRecyclerView listResults;

  @NonNull
  public final LinearLayoutCompat noResultsLayout;

  @NonNull
  public final CardView searchBar;

  @NonNull
  public final FrameLayout searchBarContainer;

  @NonNull
  public final SettingsSearchLayout searchPanel;

  @NonNull
  public final Toolbar searchToolbar;

  @NonNull
  public final SettingsSearchView searchView;

  private ActivitySettingsSearchBinding(@NonNull SettingsSearchLayout rootView,
      @NonNull InsettableFrameLayout layoutResults, @NonNull PreferenceRecyclerView listResults,
      @NonNull LinearLayoutCompat noResultsLayout, @NonNull CardView searchBar,
      @NonNull FrameLayout searchBarContainer, @NonNull SettingsSearchLayout searchPanel,
      @NonNull Toolbar searchToolbar, @NonNull SettingsSearchView searchView) {
    this.rootView = rootView;
    this.layoutResults = layoutResults;
    this.listResults = listResults;
    this.noResultsLayout = noResultsLayout;
    this.searchBar = searchBar;
    this.searchBarContainer = searchBarContainer;
    this.searchPanel = searchPanel;
    this.searchToolbar = searchToolbar;
    this.searchView = searchView;
  }

  @Override
  @NonNull
  public SettingsSearchLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.layout_results;
      InsettableFrameLayout layoutResults = ViewBindings.findChildViewById(rootView, id);
      if (layoutResults == null) {
        break missingId;
      }

      id = R.id.list_results;
      PreferenceRecyclerView listResults = ViewBindings.findChildViewById(rootView, id);
      if (listResults == null) {
        break missingId;
      }

      id = R.id.no_results_layout;
      LinearLayoutCompat noResultsLayout = ViewBindings.findChildViewById(rootView, id);
      if (noResultsLayout == null) {
        break missingId;
      }

      id = R.id.search_bar;
      CardView searchBar = ViewBindings.findChildViewById(rootView, id);
      if (searchBar == null) {
        break missingId;
      }

      id = R.id.search_bar_container;
      FrameLayout searchBarContainer = ViewBindings.findChildViewById(rootView, id);
      if (searchBarContainer == null) {
        break missingId;
      }

      SettingsSearchLayout searchPanel = (SettingsSearchLayout) rootView;

      id = R.id.search_toolbar;
      Toolbar searchToolbar = ViewBindings.findChildViewById(rootView, id);
      if (searchToolbar == null) {
        break missingId;
      }

      id = R.id.search_view;
      SettingsSearchView searchView = ViewBindings.findChildViewById(rootView, id);
      if (searchView == null) {
        break missingId;
      }

      return new ActivitySettingsSearchBinding((SettingsSearchLayout) rootView, layoutResults,
          listResults, noResultsLayout, searchBar, searchBarContainer, searchPanel, searchToolbar,
          searchView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
