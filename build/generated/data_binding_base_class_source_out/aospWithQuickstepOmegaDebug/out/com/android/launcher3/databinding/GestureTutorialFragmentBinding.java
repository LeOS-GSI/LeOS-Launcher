// Generated by view binder compiler. Do not edit!
package com.android.launcher3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.launcher3.R;
import com.android.launcher3.views.ClipIconView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class GestureTutorialFragmentBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ClipIconView gestureTutorialFakeIconView;

  @NonNull
  public final View gestureTutorialFakeTaskView;

  @NonNull
  public final Button gestureTutorialFragmentActionButton;

  @NonNull
  public final Button gestureTutorialFragmentActionTextButton;

  @NonNull
  public final ImageButton gestureTutorialFragmentCloseButton;

  @NonNull
  public final TextView gestureTutorialFragmentFeedbackView;

  @NonNull
  public final ImageView gestureTutorialFragmentHandCoaching;

  @NonNull
  public final TextView gestureTutorialFragmentSubtitleView;

  @NonNull
  public final TextView gestureTutorialFragmentTitleView;

  @NonNull
  public final LinearLayout gestureTutorialFragmentTitlesContainer;

  @NonNull
  public final View gestureTutorialRippleView;

  private GestureTutorialFragmentBinding(@NonNull RelativeLayout rootView,
      @NonNull ClipIconView gestureTutorialFakeIconView, @NonNull View gestureTutorialFakeTaskView,
      @NonNull Button gestureTutorialFragmentActionButton,
      @NonNull Button gestureTutorialFragmentActionTextButton,
      @NonNull ImageButton gestureTutorialFragmentCloseButton,
      @NonNull TextView gestureTutorialFragmentFeedbackView,
      @NonNull ImageView gestureTutorialFragmentHandCoaching,
      @NonNull TextView gestureTutorialFragmentSubtitleView,
      @NonNull TextView gestureTutorialFragmentTitleView,
      @NonNull LinearLayout gestureTutorialFragmentTitlesContainer,
      @NonNull View gestureTutorialRippleView) {
    this.rootView = rootView;
    this.gestureTutorialFakeIconView = gestureTutorialFakeIconView;
    this.gestureTutorialFakeTaskView = gestureTutorialFakeTaskView;
    this.gestureTutorialFragmentActionButton = gestureTutorialFragmentActionButton;
    this.gestureTutorialFragmentActionTextButton = gestureTutorialFragmentActionTextButton;
    this.gestureTutorialFragmentCloseButton = gestureTutorialFragmentCloseButton;
    this.gestureTutorialFragmentFeedbackView = gestureTutorialFragmentFeedbackView;
    this.gestureTutorialFragmentHandCoaching = gestureTutorialFragmentHandCoaching;
    this.gestureTutorialFragmentSubtitleView = gestureTutorialFragmentSubtitleView;
    this.gestureTutorialFragmentTitleView = gestureTutorialFragmentTitleView;
    this.gestureTutorialFragmentTitlesContainer = gestureTutorialFragmentTitlesContainer;
    this.gestureTutorialRippleView = gestureTutorialRippleView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static GestureTutorialFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static GestureTutorialFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.gesture_tutorial_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static GestureTutorialFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.gesture_tutorial_fake_icon_view;
      ClipIconView gestureTutorialFakeIconView = ViewBindings.findChildViewById(rootView, id);
      if (gestureTutorialFakeIconView == null) {
        break missingId;
      }

      id = R.id.gesture_tutorial_fake_task_view;
      View gestureTutorialFakeTaskView = ViewBindings.findChildViewById(rootView, id);
      if (gestureTutorialFakeTaskView == null) {
        break missingId;
      }

      id = R.id.gesture_tutorial_fragment_action_button;
      Button gestureTutorialFragmentActionButton = ViewBindings.findChildViewById(rootView, id);
      if (gestureTutorialFragmentActionButton == null) {
        break missingId;
      }

      id = R.id.gesture_tutorial_fragment_action_text_button;
      Button gestureTutorialFragmentActionTextButton = ViewBindings.findChildViewById(rootView, id);
      if (gestureTutorialFragmentActionTextButton == null) {
        break missingId;
      }

      id = R.id.gesture_tutorial_fragment_close_button;
      ImageButton gestureTutorialFragmentCloseButton = ViewBindings.findChildViewById(rootView, id);
      if (gestureTutorialFragmentCloseButton == null) {
        break missingId;
      }

      id = R.id.gesture_tutorial_fragment_feedback_view;
      TextView gestureTutorialFragmentFeedbackView = ViewBindings.findChildViewById(rootView, id);
      if (gestureTutorialFragmentFeedbackView == null) {
        break missingId;
      }

      id = R.id.gesture_tutorial_fragment_hand_coaching;
      ImageView gestureTutorialFragmentHandCoaching = ViewBindings.findChildViewById(rootView, id);
      if (gestureTutorialFragmentHandCoaching == null) {
        break missingId;
      }

      id = R.id.gesture_tutorial_fragment_subtitle_view;
      TextView gestureTutorialFragmentSubtitleView = ViewBindings.findChildViewById(rootView, id);
      if (gestureTutorialFragmentSubtitleView == null) {
        break missingId;
      }

      id = R.id.gesture_tutorial_fragment_title_view;
      TextView gestureTutorialFragmentTitleView = ViewBindings.findChildViewById(rootView, id);
      if (gestureTutorialFragmentTitleView == null) {
        break missingId;
      }

      id = R.id.gesture_tutorial_fragment_titles_container;
      LinearLayout gestureTutorialFragmentTitlesContainer = ViewBindings.findChildViewById(rootView, id);
      if (gestureTutorialFragmentTitlesContainer == null) {
        break missingId;
      }

      id = R.id.gesture_tutorial_ripple_view;
      View gestureTutorialRippleView = ViewBindings.findChildViewById(rootView, id);
      if (gestureTutorialRippleView == null) {
        break missingId;
      }

      return new GestureTutorialFragmentBinding((RelativeLayout) rootView,
          gestureTutorialFakeIconView, gestureTutorialFakeTaskView,
          gestureTutorialFragmentActionButton, gestureTutorialFragmentActionTextButton,
          gestureTutorialFragmentCloseButton, gestureTutorialFragmentFeedbackView,
          gestureTutorialFragmentHandCoaching, gestureTutorialFragmentSubtitleView,
          gestureTutorialFragmentTitleView, gestureTutorialFragmentTitlesContainer,
          gestureTutorialRippleView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
