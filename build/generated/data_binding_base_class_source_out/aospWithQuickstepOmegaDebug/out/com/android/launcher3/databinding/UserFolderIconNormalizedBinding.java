// Generated by view binder compiler. Do not edit!
package com.android.launcher3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.launcher3.R;
import com.android.launcher3.folder.Folder;
import com.android.launcher3.folder.FolderNameEditText;
import com.android.launcher3.folder.FolderPagedView;
import com.android.launcher3.pageindicators.PageIndicatorDots;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UserFolderIconNormalizedBinding implements ViewBinding {
  @NonNull
  private final Folder rootView;

  @NonNull
  public final FolderPagedView folderContent;

  @NonNull
  public final LinearLayout folderFooter;

  @NonNull
  public final FolderNameEditText folderName;

  @NonNull
  public final PageIndicatorDots folderPageIndicator;

  @NonNull
  public final AppCompatImageButton settingsButton;

  private UserFolderIconNormalizedBinding(@NonNull Folder rootView,
      @NonNull FolderPagedView folderContent, @NonNull LinearLayout folderFooter,
      @NonNull FolderNameEditText folderName, @NonNull PageIndicatorDots folderPageIndicator,
      @NonNull AppCompatImageButton settingsButton) {
    this.rootView = rootView;
    this.folderContent = folderContent;
    this.folderFooter = folderFooter;
    this.folderName = folderName;
    this.folderPageIndicator = folderPageIndicator;
    this.settingsButton = settingsButton;
  }

  @Override
  @NonNull
  public Folder getRoot() {
    return rootView;
  }

  @NonNull
  public static UserFolderIconNormalizedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UserFolderIconNormalizedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.user_folder_icon_normalized, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UserFolderIconNormalizedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.folder_content;
      FolderPagedView folderContent = ViewBindings.findChildViewById(rootView, id);
      if (folderContent == null) {
        break missingId;
      }

      id = R.id.folder_footer;
      LinearLayout folderFooter = ViewBindings.findChildViewById(rootView, id);
      if (folderFooter == null) {
        break missingId;
      }

      id = R.id.folder_name;
      FolderNameEditText folderName = ViewBindings.findChildViewById(rootView, id);
      if (folderName == null) {
        break missingId;
      }

      id = R.id.folder_page_indicator;
      PageIndicatorDots folderPageIndicator = ViewBindings.findChildViewById(rootView, id);
      if (folderPageIndicator == null) {
        break missingId;
      }

      id = R.id.settings_button;
      AppCompatImageButton settingsButton = ViewBindings.findChildViewById(rootView, id);
      if (settingsButton == null) {
        break missingId;
      }

      return new UserFolderIconNormalizedBinding((Folder) rootView, folderContent, folderFooter,
          folderName, folderPageIndicator, settingsButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
