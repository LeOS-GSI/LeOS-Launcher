// Generated by view binder compiler. Do not edit!
package com.android.launcher3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.launcher3.R;
import com.android.launcher3.notification.NotificationFooterLayout;
import com.android.launcher3.notification.NotificationMainView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NotificationContentBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final View divider;

  @NonNull
  public final NotificationFooterLayout footer;

  @NonNull
  public final FrameLayout header;

  @NonNull
  public final LinearLayout iconRow;

  @NonNull
  public final NotificationMainView mainView;

  @NonNull
  public final TextView notificationCount;

  @NonNull
  public final TextView notificationText;

  @NonNull
  public final View overflow;

  @NonNull
  public final View popupItemIcon;

  @NonNull
  public final TextView text;

  @NonNull
  public final LinearLayout textAndBackground;

  @NonNull
  public final TextView title;

  private NotificationContentBinding(@NonNull View rootView, @NonNull View divider,
      @NonNull NotificationFooterLayout footer, @NonNull FrameLayout header,
      @NonNull LinearLayout iconRow, @NonNull NotificationMainView mainView,
      @NonNull TextView notificationCount, @NonNull TextView notificationText,
      @NonNull View overflow, @NonNull View popupItemIcon, @NonNull TextView text,
      @NonNull LinearLayout textAndBackground, @NonNull TextView title) {
    this.rootView = rootView;
    this.divider = divider;
    this.footer = footer;
    this.header = header;
    this.iconRow = iconRow;
    this.mainView = mainView;
    this.notificationCount = notificationCount;
    this.notificationText = notificationText;
    this.overflow = overflow;
    this.popupItemIcon = popupItemIcon;
    this.text = text;
    this.textAndBackground = textAndBackground;
    this.title = title;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static NotificationContentBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.notification_content, parent);
    return bind(parent);
  }

  @NonNull
  public static NotificationContentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.footer;
      NotificationFooterLayout footer = ViewBindings.findChildViewById(rootView, id);
      if (footer == null) {
        break missingId;
      }

      id = R.id.header;
      FrameLayout header = ViewBindings.findChildViewById(rootView, id);
      if (header == null) {
        break missingId;
      }

      id = R.id.icon_row;
      LinearLayout iconRow = ViewBindings.findChildViewById(rootView, id);
      if (iconRow == null) {
        break missingId;
      }

      id = R.id.main_view;
      NotificationMainView mainView = ViewBindings.findChildViewById(rootView, id);
      if (mainView == null) {
        break missingId;
      }

      id = R.id.notification_count;
      TextView notificationCount = ViewBindings.findChildViewById(rootView, id);
      if (notificationCount == null) {
        break missingId;
      }

      id = R.id.notification_text;
      TextView notificationText = ViewBindings.findChildViewById(rootView, id);
      if (notificationText == null) {
        break missingId;
      }

      id = R.id.overflow;
      View overflow = ViewBindings.findChildViewById(rootView, id);
      if (overflow == null) {
        break missingId;
      }

      id = R.id.popup_item_icon;
      View popupItemIcon = ViewBindings.findChildViewById(rootView, id);
      if (popupItemIcon == null) {
        break missingId;
      }

      id = R.id.text;
      TextView text = ViewBindings.findChildViewById(rootView, id);
      if (text == null) {
        break missingId;
      }

      id = R.id.text_and_background;
      LinearLayout textAndBackground = ViewBindings.findChildViewById(rootView, id);
      if (textAndBackground == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new NotificationContentBinding(rootView, divider, footer, header, iconRow, mainView,
          notificationCount, notificationText, overflow, popupItemIcon, text, textAndBackground,
          title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
