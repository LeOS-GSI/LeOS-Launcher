// Generated by view binder compiler. Do not edit!
package com.android.launcher3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatCheckBox;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.launcher3.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRestoreBackupBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppCompatTextView backupContentsLabel;

  @NonNull
  public final ConstraintLayout config;

  @NonNull
  public final CoordinatorLayout content;

  @NonNull
  public final AppCompatCheckBox contentHomescreen;

  @NonNull
  public final AppCompatCheckBox contentSettings;

  @NonNull
  public final AppCompatCheckBox contentWallpaper;

  @NonNull
  public final FloatingActionButton fab;

  @NonNull
  public final TextInputEditText name;

  @NonNull
  public final LinearLayoutCompat progress;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final AppCompatTextView progressText;

  @NonNull
  public final AppCompatImageView successIcon;

  @NonNull
  public final TextInputLayout textInputLayout;

  @NonNull
  public final TextInputLayout textInputLayout2;

  @NonNull
  public final TextInputEditText timestamp;

  private ActivityRestoreBackupBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppCompatTextView backupContentsLabel, @NonNull ConstraintLayout config,
      @NonNull CoordinatorLayout content, @NonNull AppCompatCheckBox contentHomescreen,
      @NonNull AppCompatCheckBox contentSettings, @NonNull AppCompatCheckBox contentWallpaper,
      @NonNull FloatingActionButton fab, @NonNull TextInputEditText name,
      @NonNull LinearLayoutCompat progress, @NonNull ProgressBar progressBar,
      @NonNull AppCompatTextView progressText, @NonNull AppCompatImageView successIcon,
      @NonNull TextInputLayout textInputLayout, @NonNull TextInputLayout textInputLayout2,
      @NonNull TextInputEditText timestamp) {
    this.rootView = rootView;
    this.backupContentsLabel = backupContentsLabel;
    this.config = config;
    this.content = content;
    this.contentHomescreen = contentHomescreen;
    this.contentSettings = contentSettings;
    this.contentWallpaper = contentWallpaper;
    this.fab = fab;
    this.name = name;
    this.progress = progress;
    this.progressBar = progressBar;
    this.progressText = progressText;
    this.successIcon = successIcon;
    this.textInputLayout = textInputLayout;
    this.textInputLayout2 = textInputLayout2;
    this.timestamp = timestamp;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRestoreBackupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRestoreBackupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_restore_backup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRestoreBackupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backup_contents_label;
      AppCompatTextView backupContentsLabel = ViewBindings.findChildViewById(rootView, id);
      if (backupContentsLabel == null) {
        break missingId;
      }

      id = R.id.config;
      ConstraintLayout config = ViewBindings.findChildViewById(rootView, id);
      if (config == null) {
        break missingId;
      }

      CoordinatorLayout content = (CoordinatorLayout) rootView;

      id = R.id.content_homescreen;
      AppCompatCheckBox contentHomescreen = ViewBindings.findChildViewById(rootView, id);
      if (contentHomescreen == null) {
        break missingId;
      }

      id = R.id.content_settings;
      AppCompatCheckBox contentSettings = ViewBindings.findChildViewById(rootView, id);
      if (contentSettings == null) {
        break missingId;
      }

      id = R.id.content_wallpaper;
      AppCompatCheckBox contentWallpaper = ViewBindings.findChildViewById(rootView, id);
      if (contentWallpaper == null) {
        break missingId;
      }

      id = R.id.fab;
      FloatingActionButton fab = ViewBindings.findChildViewById(rootView, id);
      if (fab == null) {
        break missingId;
      }

      id = R.id.name;
      TextInputEditText name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.progress;
      LinearLayoutCompat progress = ViewBindings.findChildViewById(rootView, id);
      if (progress == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.progress_text;
      AppCompatTextView progressText = ViewBindings.findChildViewById(rootView, id);
      if (progressText == null) {
        break missingId;
      }

      id = R.id.success_icon;
      AppCompatImageView successIcon = ViewBindings.findChildViewById(rootView, id);
      if (successIcon == null) {
        break missingId;
      }

      id = R.id.textInputLayout;
      TextInputLayout textInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout == null) {
        break missingId;
      }

      id = R.id.textInputLayout2;
      TextInputLayout textInputLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout2 == null) {
        break missingId;
      }

      id = R.id.timestamp;
      TextInputEditText timestamp = ViewBindings.findChildViewById(rootView, id);
      if (timestamp == null) {
        break missingId;
      }

      return new ActivityRestoreBackupBinding((CoordinatorLayout) rootView, backupContentsLabel,
          config, content, contentHomescreen, contentSettings, contentWallpaper, fab, name,
          progress, progressBar, progressText, successIcon, textInputLayout, textInputLayout2,
          timestamp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
