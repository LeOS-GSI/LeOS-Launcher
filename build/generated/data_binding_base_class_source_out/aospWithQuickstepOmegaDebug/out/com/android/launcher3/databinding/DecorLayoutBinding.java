// Generated by view binder compiler. Do not edit!
package com.android.launcher3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.launcher3.InsettableFrameLayout;
import com.android.launcher3.R;
import com.saggitt.omega.settings.DecorLayout;
import com.saggitt.omega.views.CenteredToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DecorLayoutBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final FrameLayout actionBarContainer;

  @NonNull
  public final InsettableFrameLayout content;

  @NonNull
  public final DecorLayout.ContentFrameLayout contentContainer;

  @NonNull
  public final TextView largeTitle;

  @NonNull
  public final CenteredToolbar toolbar;

  @NonNull
  public final View toolbarShadow;

  private DecorLayoutBinding(@NonNull View rootView, @NonNull FrameLayout actionBarContainer,
      @NonNull InsettableFrameLayout content,
      @NonNull DecorLayout.ContentFrameLayout contentContainer, @NonNull TextView largeTitle,
      @NonNull CenteredToolbar toolbar, @NonNull View toolbarShadow) {
    this.rootView = rootView;
    this.actionBarContainer = actionBarContainer;
    this.content = content;
    this.contentContainer = contentContainer;
    this.largeTitle = largeTitle;
    this.toolbar = toolbar;
    this.toolbarShadow = toolbarShadow;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static DecorLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.decor_layout, parent);
    return bind(parent);
  }

  @NonNull
  public static DecorLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.action_bar_container;
      FrameLayout actionBarContainer = ViewBindings.findChildViewById(rootView, id);
      if (actionBarContainer == null) {
        break missingId;
      }

      id = android.R.id.content;
      InsettableFrameLayout content = ViewBindings.findChildViewById(rootView, id);
      if (content == null) {
        break missingId;
      }

      id = R.id.content_container;
      DecorLayout.ContentFrameLayout contentContainer = ViewBindings.findChildViewById(rootView, id);
      if (contentContainer == null) {
        break missingId;
      }

      id = R.id.large_title;
      TextView largeTitle = ViewBindings.findChildViewById(rootView, id);
      if (largeTitle == null) {
        break missingId;
      }

      id = R.id.toolbar;
      CenteredToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.toolbar_shadow;
      View toolbarShadow = ViewBindings.findChildViewById(rootView, id);
      if (toolbarShadow == null) {
        break missingId;
      }

      return new DecorLayoutBinding(rootView, actionBarContainer, content, contentContainer,
          largeTitle, toolbar, toolbarShadow);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
