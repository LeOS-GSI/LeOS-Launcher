// Generated by view binder compiler. Do not edit!
package com.android.launcher3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.launcher3.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AppItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final FrameLayout caretContainer;

  @NonNull
  public final ImageView caretImageView;

  @NonNull
  public final CheckBox check;

  @NonNull
  public final ImageView icon;

  @NonNull
  public final LinearLayout iconContainer;

  @NonNull
  public final TextView label;

  @NonNull
  public final ImageView shortcutIcon;

  private AppItemBinding(@NonNull RelativeLayout rootView, @NonNull FrameLayout caretContainer,
      @NonNull ImageView caretImageView, @NonNull CheckBox check, @NonNull ImageView icon,
      @NonNull LinearLayout iconContainer, @NonNull TextView label,
      @NonNull ImageView shortcutIcon) {
    this.rootView = rootView;
    this.caretContainer = caretContainer;
    this.caretImageView = caretImageView;
    this.check = check;
    this.icon = icon;
    this.iconContainer = iconContainer;
    this.label = label;
    this.shortcutIcon = shortcutIcon;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AppItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AppItemBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.app_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AppItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.caretContainer;
      FrameLayout caretContainer = ViewBindings.findChildViewById(rootView, id);
      if (caretContainer == null) {
        break missingId;
      }

      id = R.id.caretImageView;
      ImageView caretImageView = ViewBindings.findChildViewById(rootView, id);
      if (caretImageView == null) {
        break missingId;
      }

      id = R.id.check;
      CheckBox check = ViewBindings.findChildViewById(rootView, id);
      if (check == null) {
        break missingId;
      }

      id = R.id.icon;
      ImageView icon = ViewBindings.findChildViewById(rootView, id);
      if (icon == null) {
        break missingId;
      }

      id = R.id.iconContainer;
      LinearLayout iconContainer = ViewBindings.findChildViewById(rootView, id);
      if (iconContainer == null) {
        break missingId;
      }

      id = R.id.label;
      TextView label = ViewBindings.findChildViewById(rootView, id);
      if (label == null) {
        break missingId;
      }

      id = R.id.shortcutIcon;
      ImageView shortcutIcon = ViewBindings.findChildViewById(rootView, id);
      if (shortcutIcon == null) {
        break missingId;
      }

      return new AppItemBinding((RelativeLayout) rootView, caretContainer, caretImageView, check,
          icon, iconContainer, label, shortcutIcon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
