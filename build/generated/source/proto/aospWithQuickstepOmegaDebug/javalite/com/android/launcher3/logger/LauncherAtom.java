// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: launcher_atom.proto

package com.android.launcher3.logger;

public final class LauncherAtom {
  private LauncherAtom() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code Attribute}
   */
  public enum Attribute
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0),
    /**
     * <pre>
     * icon automatically placed in workspace, folder, hotseat
     * </pre>
     *
     * <code>DEFAULT_LAYOUT = 1;</code>
     */
    DEFAULT_LAYOUT(1),
    /**
     * <pre>
     * icon layout restored from backup
     * </pre>
     *
     * <code>BACKUP_RESTORE = 2;</code>
     */
    BACKUP_RESTORE(2),
    /**
     * <pre>
     * from another app (e.g., Chrome's "Add to Home screen")
     * </pre>
     *
     * <code>PINITEM = 3;</code>
     */
    PINITEM(3),
    /**
     * <pre>
     * within launcher surface, all aps a-z
     * </pre>
     *
     * <code>ALLAPPS_ATOZ = 4;</code>
     */
    ALLAPPS_ATOZ(4),
    /**
     * <pre>
     * within launcher, widgets tray
     * </pre>
     *
     * <code>WIDGETS = 5;</code>
     */
    WIDGETS(5),
    /**
     * <pre>
     * play install + launcher home setting
     * </pre>
     *
     * <code>ADD_TO_HOMESCREEN = 6;</code>
     */
    ADD_TO_HOMESCREEN(6),
    /**
     * <pre>
     * from prediction bar in all apps container
     * </pre>
     *
     * <code>ALLAPPS_PREDICTION = 7;</code>
     */
    ALLAPPS_PREDICTION(7),
    /**
     * <pre>
     * from prediction bar in hotseat container
     * </pre>
     *
     * <code>HOTSEAT_PREDICTION = 8;</code>
     */
    HOTSEAT_PREDICTION(8),
    /**
     * <pre>
     * Folder's label is one of the non-empty suggested values.
     * </pre>
     *
     * <code>SUGGESTED_LABEL = 9;</code>
     */
    SUGGESTED_LABEL(9),
    /**
     * <pre>
     * Folder's label is non-empty, manually entered by the user
     * and different from any of suggested values.
     * </pre>
     *
     * <code>MANUAL_LABEL = 10;</code>
     */
    MANUAL_LABEL(10),
    /**
     * <pre>
     * Folder's label is not yet assigned( i.e., title == null).
     * Eligible for auto-labeling.
     * </pre>
     *
     * <code>UNLABELED = 11;</code>
     */
    UNLABELED(11),
    /**
     * <pre>
     * Folder's label is empty(i.e., title == "").
     * Not eligible for auto-labeling.
     * </pre>
     *
     * <code>EMPTY_LABEL = 12;</code>
     */
    EMPTY_LABEL(12),
    ;

    /**
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <pre>
     * icon automatically placed in workspace, folder, hotseat
     * </pre>
     *
     * <code>DEFAULT_LAYOUT = 1;</code>
     */
    public static final int DEFAULT_LAYOUT_VALUE = 1;
    /**
     * <pre>
     * icon layout restored from backup
     * </pre>
     *
     * <code>BACKUP_RESTORE = 2;</code>
     */
    public static final int BACKUP_RESTORE_VALUE = 2;
    /**
     * <pre>
     * from another app (e.g., Chrome's "Add to Home screen")
     * </pre>
     *
     * <code>PINITEM = 3;</code>
     */
    public static final int PINITEM_VALUE = 3;
    /**
     * <pre>
     * within launcher surface, all aps a-z
     * </pre>
     *
     * <code>ALLAPPS_ATOZ = 4;</code>
     */
    public static final int ALLAPPS_ATOZ_VALUE = 4;
    /**
     * <pre>
     * within launcher, widgets tray
     * </pre>
     *
     * <code>WIDGETS = 5;</code>
     */
    public static final int WIDGETS_VALUE = 5;
    /**
     * <pre>
     * play install + launcher home setting
     * </pre>
     *
     * <code>ADD_TO_HOMESCREEN = 6;</code>
     */
    public static final int ADD_TO_HOMESCREEN_VALUE = 6;
    /**
     * <pre>
     * from prediction bar in all apps container
     * </pre>
     *
     * <code>ALLAPPS_PREDICTION = 7;</code>
     */
    public static final int ALLAPPS_PREDICTION_VALUE = 7;
    /**
     * <pre>
     * from prediction bar in hotseat container
     * </pre>
     *
     * <code>HOTSEAT_PREDICTION = 8;</code>
     */
    public static final int HOTSEAT_PREDICTION_VALUE = 8;
    /**
     * <pre>
     * Folder's label is one of the non-empty suggested values.
     * </pre>
     *
     * <code>SUGGESTED_LABEL = 9;</code>
     */
    public static final int SUGGESTED_LABEL_VALUE = 9;
    /**
     * <pre>
     * Folder's label is non-empty, manually entered by the user
     * and different from any of suggested values.
     * </pre>
     *
     * <code>MANUAL_LABEL = 10;</code>
     */
    public static final int MANUAL_LABEL_VALUE = 10;
    /**
     * <pre>
     * Folder's label is not yet assigned( i.e., title == null).
     * Eligible for auto-labeling.
     * </pre>
     *
     * <code>UNLABELED = 11;</code>
     */
    public static final int UNLABELED_VALUE = 11;
    /**
     * <pre>
     * Folder's label is empty(i.e., title == "").
     * Not eligible for auto-labeling.
     * </pre>
     *
     * <code>EMPTY_LABEL = 12;</code>
     */
    public static final int EMPTY_LABEL_VALUE = 12;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Attribute valueOf(int value) {
      return forNumber(value);
    }

    public static Attribute forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return DEFAULT_LAYOUT;
        case 2: return BACKUP_RESTORE;
        case 3: return PINITEM;
        case 4: return ALLAPPS_ATOZ;
        case 5: return WIDGETS;
        case 6: return ADD_TO_HOMESCREEN;
        case 7: return ALLAPPS_PREDICTION;
        case 8: return HOTSEAT_PREDICTION;
        case 9: return SUGGESTED_LABEL;
        case 10: return MANUAL_LABEL;
        case 11: return UNLABELED;
        case 12: return EMPTY_LABEL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Attribute>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Attribute> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Attribute>() {
            public Attribute findValueByNumber(int number) {
              return Attribute.forNumber(number);
            }
          };

    private final int value;

    private Attribute(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Attribute)
  }

  /**
   * <pre>
   * Represents state of EditText field before update.
   * </pre>
   *
   * Protobuf enum {@code FromState}
   */
  public enum FromState
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * Default value.
     * Used when a FromState is not applicable, for example, during folder creation.
     * </pre>
     *
     * <code>FROM_STATE_UNSPECIFIED = 0;</code>
     */
    FROM_STATE_UNSPECIFIED(0),
    /**
     * <pre>
     * EditText was empty.
     * Eg: When a folder label is updated from empty string.
     * </pre>
     *
     * <code>FROM_EMPTY = 1;</code>
     */
    FROM_EMPTY(1),
    /**
     * <pre>
     * EditText was non-empty and manually entered by the user.
     * Eg: When a folder label is updated from a user-entered value.
     * </pre>
     *
     * <code>FROM_CUSTOM = 2;</code>
     */
    FROM_CUSTOM(2),
    /**
     * <pre>
     * EditText was non-empty and one of the suggestions.
     * Eg: When a folder label is updated from a suggested value.
     * </pre>
     *
     * <code>FROM_SUGGESTED = 3;</code>
     */
    FROM_SUGGESTED(3),
    ;

    /**
     * <pre>
     * Default value.
     * Used when a FromState is not applicable, for example, during folder creation.
     * </pre>
     *
     * <code>FROM_STATE_UNSPECIFIED = 0;</code>
     */
    public static final int FROM_STATE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * EditText was empty.
     * Eg: When a folder label is updated from empty string.
     * </pre>
     *
     * <code>FROM_EMPTY = 1;</code>
     */
    public static final int FROM_EMPTY_VALUE = 1;
    /**
     * <pre>
     * EditText was non-empty and manually entered by the user.
     * Eg: When a folder label is updated from a user-entered value.
     * </pre>
     *
     * <code>FROM_CUSTOM = 2;</code>
     */
    public static final int FROM_CUSTOM_VALUE = 2;
    /**
     * <pre>
     * EditText was non-empty and one of the suggestions.
     * Eg: When a folder label is updated from a suggested value.
     * </pre>
     *
     * <code>FROM_SUGGESTED = 3;</code>
     */
    public static final int FROM_SUGGESTED_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FromState valueOf(int value) {
      return forNumber(value);
    }

    public static FromState forNumber(int value) {
      switch (value) {
        case 0: return FROM_STATE_UNSPECIFIED;
        case 1: return FROM_EMPTY;
        case 2: return FROM_CUSTOM;
        case 3: return FROM_SUGGESTED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FromState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FromState> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FromState>() {
            public FromState findValueByNumber(int number) {
              return FromState.forNumber(number);
            }
          };

    private final int value;

    private FromState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:FromState)
  }

  /**
   * <pre>
   * Represents state of EditText field after update.
   * </pre>
   *
   * Protobuf enum {@code ToState}
   */
  public enum ToState
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * Default value.
     * Used when ToState is not applicable, for example, when folder label is updated to a different
     * value when folder label suggestion feature is disabled.
     * </pre>
     *
     * <code>TO_STATE_UNSPECIFIED = 0;</code>
     */
    TO_STATE_UNSPECIFIED(0),
    /**
     * <pre>
     * User attempted to change the EditText, but was not changed.
     * </pre>
     *
     * <code>UNCHANGED = 1;</code>
     */
    UNCHANGED(1),
    /**
     * <pre>
     * New label matches with primary(aka top) suggestion.
     * </pre>
     *
     * <code>TO_SUGGESTION0 = 2;</code>
     */
    TO_SUGGESTION0(2),
    /**
     * <pre>
     * New value matches with second top suggestion even though the top suggestion was non-empty.
     * </pre>
     *
     * <code>TO_SUGGESTION1_WITH_VALID_PRIMARY = 3;</code>
     */
    TO_SUGGESTION1_WITH_VALID_PRIMARY(3),
    /**
     * <pre>
     * New value matches with second top suggestion given that top suggestion was empty.
     * </pre>
     *
     * <code>TO_SUGGESTION1_WITH_EMPTY_PRIMARY = 4;</code>
     */
    TO_SUGGESTION1_WITH_EMPTY_PRIMARY(4),
    /**
     * <pre>
     * New value matches with third top suggestion even though the top suggestion was non-empty.
     * </pre>
     *
     * <code>TO_SUGGESTION2_WITH_VALID_PRIMARY = 5;</code>
     */
    TO_SUGGESTION2_WITH_VALID_PRIMARY(5),
    /**
     * <pre>
     * New value matches with third top suggestion given that top suggestion was empty.
     * </pre>
     *
     * <code>TO_SUGGESTION2_WITH_EMPTY_PRIMARY = 6;</code>
     */
    TO_SUGGESTION2_WITH_EMPTY_PRIMARY(6),
    /**
     * <pre>
     * New value matches with 4th top suggestion even though the top suggestion was non-empty.
     * </pre>
     *
     * <code>TO_SUGGESTION3_WITH_VALID_PRIMARY = 7;</code>
     */
    TO_SUGGESTION3_WITH_VALID_PRIMARY(7),
    /**
     * <pre>
     * New value matches with 4th top suggestion given that top suggestion was empty.
     * </pre>
     *
     * <code>TO_SUGGESTION3_WITH_EMPTY_PRIMARY = 8;</code>
     */
    TO_SUGGESTION3_WITH_EMPTY_PRIMARY(8),
    /**
     * <pre>
     * New value is empty even though the top suggestion was non-empty.
     * </pre>
     *
     * <code>TO_EMPTY_WITH_VALID_PRIMARY = 9;</code>
     */
    TO_EMPTY_WITH_VALID_PRIMARY(9),
    /**
     * <pre>
     * New value is empty given that top suggestion was empty.
     * </pre>
     *
     * <code>TO_EMPTY_WITH_VALID_SUGGESTIONS_AND_EMPTY_PRIMARY = 10;</code>
     */
    TO_EMPTY_WITH_VALID_SUGGESTIONS_AND_EMPTY_PRIMARY(10),
    /**
     * <pre>
     * New value is empty given that no suggestions were provided.
     * </pre>
     *
     * <code>TO_EMPTY_WITH_EMPTY_SUGGESTIONS = 11;</code>
     */
    TO_EMPTY_WITH_EMPTY_SUGGESTIONS(11),
    /**
     * <pre>
     * New value is empty given that suggestions feature was disabled.
     * </pre>
     *
     * <code>TO_EMPTY_WITH_SUGGESTIONS_DISABLED = 12;</code>
     */
    TO_EMPTY_WITH_SUGGESTIONS_DISABLED(12),
    /**
     * <pre>
     * New value is non-empty and does not match with any of the suggestions even though the top suggestion was non-empty.
     * </pre>
     *
     * <code>TO_CUSTOM_WITH_VALID_PRIMARY = 13;</code>
     */
    TO_CUSTOM_WITH_VALID_PRIMARY(13),
    /**
     * <pre>
     * New value is non-empty and not match with any suggestions given that top suggestion was empty.
     * </pre>
     *
     * <code>TO_CUSTOM_WITH_VALID_SUGGESTIONS_AND_EMPTY_PRIMARY = 14;</code>
     */
    TO_CUSTOM_WITH_VALID_SUGGESTIONS_AND_EMPTY_PRIMARY(14),
    /**
     * <pre>
     * New value is non-empty and also no suggestions were provided.
     * </pre>
     *
     * <code>TO_CUSTOM_WITH_EMPTY_SUGGESTIONS = 15;</code>
     */
    TO_CUSTOM_WITH_EMPTY_SUGGESTIONS(15),
    /**
     * <pre>
     * New value is non-empty and also suggestions feature was disable.
     * </pre>
     *
     * <code>TO_CUSTOM_WITH_SUGGESTIONS_DISABLED = 16;</code>
     */
    TO_CUSTOM_WITH_SUGGESTIONS_DISABLED(16),
    ;

    /**
     * <pre>
     * Default value.
     * Used when ToState is not applicable, for example, when folder label is updated to a different
     * value when folder label suggestion feature is disabled.
     * </pre>
     *
     * <code>TO_STATE_UNSPECIFIED = 0;</code>
     */
    public static final int TO_STATE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * User attempted to change the EditText, but was not changed.
     * </pre>
     *
     * <code>UNCHANGED = 1;</code>
     */
    public static final int UNCHANGED_VALUE = 1;
    /**
     * <pre>
     * New label matches with primary(aka top) suggestion.
     * </pre>
     *
     * <code>TO_SUGGESTION0 = 2;</code>
     */
    public static final int TO_SUGGESTION0_VALUE = 2;
    /**
     * <pre>
     * New value matches with second top suggestion even though the top suggestion was non-empty.
     * </pre>
     *
     * <code>TO_SUGGESTION1_WITH_VALID_PRIMARY = 3;</code>
     */
    public static final int TO_SUGGESTION1_WITH_VALID_PRIMARY_VALUE = 3;
    /**
     * <pre>
     * New value matches with second top suggestion given that top suggestion was empty.
     * </pre>
     *
     * <code>TO_SUGGESTION1_WITH_EMPTY_PRIMARY = 4;</code>
     */
    public static final int TO_SUGGESTION1_WITH_EMPTY_PRIMARY_VALUE = 4;
    /**
     * <pre>
     * New value matches with third top suggestion even though the top suggestion was non-empty.
     * </pre>
     *
     * <code>TO_SUGGESTION2_WITH_VALID_PRIMARY = 5;</code>
     */
    public static final int TO_SUGGESTION2_WITH_VALID_PRIMARY_VALUE = 5;
    /**
     * <pre>
     * New value matches with third top suggestion given that top suggestion was empty.
     * </pre>
     *
     * <code>TO_SUGGESTION2_WITH_EMPTY_PRIMARY = 6;</code>
     */
    public static final int TO_SUGGESTION2_WITH_EMPTY_PRIMARY_VALUE = 6;
    /**
     * <pre>
     * New value matches with 4th top suggestion even though the top suggestion was non-empty.
     * </pre>
     *
     * <code>TO_SUGGESTION3_WITH_VALID_PRIMARY = 7;</code>
     */
    public static final int TO_SUGGESTION3_WITH_VALID_PRIMARY_VALUE = 7;
    /**
     * <pre>
     * New value matches with 4th top suggestion given that top suggestion was empty.
     * </pre>
     *
     * <code>TO_SUGGESTION3_WITH_EMPTY_PRIMARY = 8;</code>
     */
    public static final int TO_SUGGESTION3_WITH_EMPTY_PRIMARY_VALUE = 8;
    /**
     * <pre>
     * New value is empty even though the top suggestion was non-empty.
     * </pre>
     *
     * <code>TO_EMPTY_WITH_VALID_PRIMARY = 9;</code>
     */
    public static final int TO_EMPTY_WITH_VALID_PRIMARY_VALUE = 9;
    /**
     * <pre>
     * New value is empty given that top suggestion was empty.
     * </pre>
     *
     * <code>TO_EMPTY_WITH_VALID_SUGGESTIONS_AND_EMPTY_PRIMARY = 10;</code>
     */
    public static final int TO_EMPTY_WITH_VALID_SUGGESTIONS_AND_EMPTY_PRIMARY_VALUE = 10;
    /**
     * <pre>
     * New value is empty given that no suggestions were provided.
     * </pre>
     *
     * <code>TO_EMPTY_WITH_EMPTY_SUGGESTIONS = 11;</code>
     */
    public static final int TO_EMPTY_WITH_EMPTY_SUGGESTIONS_VALUE = 11;
    /**
     * <pre>
     * New value is empty given that suggestions feature was disabled.
     * </pre>
     *
     * <code>TO_EMPTY_WITH_SUGGESTIONS_DISABLED = 12;</code>
     */
    public static final int TO_EMPTY_WITH_SUGGESTIONS_DISABLED_VALUE = 12;
    /**
     * <pre>
     * New value is non-empty and does not match with any of the suggestions even though the top suggestion was non-empty.
     * </pre>
     *
     * <code>TO_CUSTOM_WITH_VALID_PRIMARY = 13;</code>
     */
    public static final int TO_CUSTOM_WITH_VALID_PRIMARY_VALUE = 13;
    /**
     * <pre>
     * New value is non-empty and not match with any suggestions given that top suggestion was empty.
     * </pre>
     *
     * <code>TO_CUSTOM_WITH_VALID_SUGGESTIONS_AND_EMPTY_PRIMARY = 14;</code>
     */
    public static final int TO_CUSTOM_WITH_VALID_SUGGESTIONS_AND_EMPTY_PRIMARY_VALUE = 14;
    /**
     * <pre>
     * New value is non-empty and also no suggestions were provided.
     * </pre>
     *
     * <code>TO_CUSTOM_WITH_EMPTY_SUGGESTIONS = 15;</code>
     */
    public static final int TO_CUSTOM_WITH_EMPTY_SUGGESTIONS_VALUE = 15;
    /**
     * <pre>
     * New value is non-empty and also suggestions feature was disable.
     * </pre>
     *
     * <code>TO_CUSTOM_WITH_SUGGESTIONS_DISABLED = 16;</code>
     */
    public static final int TO_CUSTOM_WITH_SUGGESTIONS_DISABLED_VALUE = 16;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ToState valueOf(int value) {
      return forNumber(value);
    }

    public static ToState forNumber(int value) {
      switch (value) {
        case 0: return TO_STATE_UNSPECIFIED;
        case 1: return UNCHANGED;
        case 2: return TO_SUGGESTION0;
        case 3: return TO_SUGGESTION1_WITH_VALID_PRIMARY;
        case 4: return TO_SUGGESTION1_WITH_EMPTY_PRIMARY;
        case 5: return TO_SUGGESTION2_WITH_VALID_PRIMARY;
        case 6: return TO_SUGGESTION2_WITH_EMPTY_PRIMARY;
        case 7: return TO_SUGGESTION3_WITH_VALID_PRIMARY;
        case 8: return TO_SUGGESTION3_WITH_EMPTY_PRIMARY;
        case 9: return TO_EMPTY_WITH_VALID_PRIMARY;
        case 10: return TO_EMPTY_WITH_VALID_SUGGESTIONS_AND_EMPTY_PRIMARY;
        case 11: return TO_EMPTY_WITH_EMPTY_SUGGESTIONS;
        case 12: return TO_EMPTY_WITH_SUGGESTIONS_DISABLED;
        case 13: return TO_CUSTOM_WITH_VALID_PRIMARY;
        case 14: return TO_CUSTOM_WITH_VALID_SUGGESTIONS_AND_EMPTY_PRIMARY;
        case 15: return TO_CUSTOM_WITH_EMPTY_SUGGESTIONS;
        case 16: return TO_CUSTOM_WITH_SUGGESTIONS_DISABLED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ToState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ToState> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ToState>() {
            public ToState findValueByNumber(int number) {
              return ToState.forNumber(number);
            }
          };

    private final int value;

    private ToState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ToState)
  }

  public interface ItemInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ItemInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .Application application = 1;</code>
     */
    boolean hasApplication();
    /**
     * <code>optional .Application application = 1;</code>
     */
    com.android.launcher3.logger.LauncherAtom.Application getApplication();

    /**
     * <code>optional .Task task = 2;</code>
     */
    boolean hasTask();
    /**
     * <code>optional .Task task = 2;</code>
     */
    com.android.launcher3.logger.LauncherAtom.Task getTask();

    /**
     * <code>optional .Shortcut shortcut = 3;</code>
     */
    boolean hasShortcut();
    /**
     * <code>optional .Shortcut shortcut = 3;</code>
     */
    com.android.launcher3.logger.LauncherAtom.Shortcut getShortcut();

    /**
     * <code>optional .Widget widget = 4;</code>
     */
    boolean hasWidget();
    /**
     * <code>optional .Widget widget = 4;</code>
     */
    com.android.launcher3.logger.LauncherAtom.Widget getWidget();

    /**
     * <code>optional .FolderIcon folder_icon = 9;</code>
     */
    boolean hasFolderIcon();
    /**
     * <code>optional .FolderIcon folder_icon = 9;</code>
     */
    com.android.launcher3.logger.LauncherAtom.FolderIcon getFolderIcon();

    /**
     * <pre>
     * When used for launch event, stores the global predictive rank
     * </pre>
     *
     * <code>optional int32 rank = 5;</code>
     */
    boolean hasRank();
    /**
     * <pre>
     * When used for launch event, stores the global predictive rank
     * </pre>
     *
     * <code>optional int32 rank = 5;</code>
     */
    int getRank();

    /**
     * <pre>
     * Stores whether the Item belows to non primary user
     * </pre>
     *
     * <code>optional bool is_work = 6;</code>
     */
    boolean hasIsWork();
    /**
     * <pre>
     * Stores whether the Item belows to non primary user
     * </pre>
     *
     * <code>optional bool is_work = 6;</code>
     */
    boolean getIsWork();

    /**
     * <pre>
     * Item can be child node to parent container or parent containers (nested)
     * </pre>
     *
     * <code>optional .ContainerInfo container_info = 7;</code>
     */
    boolean hasContainerInfo();
    /**
     * <pre>
     * Item can be child node to parent container or parent containers (nested)
     * </pre>
     *
     * <code>optional .ContainerInfo container_info = 7;</code>
     */
    com.android.launcher3.logger.LauncherAtom.ContainerInfo getContainerInfo();

    /**
     * <pre>
     * Stores the origin of the Item
     * </pre>
     *
     * <code>optional .Attribute attribute = 8;</code>
     */
    boolean hasAttribute();
    /**
     * <pre>
     * Stores the origin of the Item
     * </pre>
     *
     * <code>optional .Attribute attribute = 8;</code>
     */
    com.android.launcher3.logger.LauncherAtom.Attribute getAttribute();

    public com.android.launcher3.logger.LauncherAtom.ItemInfo.ItemCase getItemCase();
  }
  /**
   * <pre>
   * ItemInfos
   * </pre>
   *
   * Protobuf type {@code ItemInfo}
   */
  public  static final class ItemInfo extends
      com.google.protobuf.GeneratedMessageLite<
          ItemInfo, ItemInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:ItemInfo)
      ItemInfoOrBuilder {
    private ItemInfo() {
    }
    private int bitField0_;
    private int itemCase_ = 0;
    private java.lang.Object item_;
    public enum ItemCase
        implements com.google.protobuf.Internal.EnumLite {
      APPLICATION(1),
      TASK(2),
      SHORTCUT(3),
      WIDGET(4),
      FOLDER_ICON(9),
      ITEM_NOT_SET(0);
      private final int value;
      private ItemCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ItemCase valueOf(int value) {
        return forNumber(value);
      }

      public static ItemCase forNumber(int value) {
        switch (value) {
          case 1: return APPLICATION;
          case 2: return TASK;
          case 3: return SHORTCUT;
          case 4: return WIDGET;
          case 9: return FOLDER_ICON;
          case 0: return ITEM_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ItemCase
    getItemCase() {
      return ItemCase.forNumber(
          itemCase_);
    }

    private void clearItem() {
      itemCase_ = 0;
      item_ = null;
    }

    public static final int APPLICATION_FIELD_NUMBER = 1;
    /**
     * <code>optional .Application application = 1;</code>
     */
    public boolean hasApplication() {
      return itemCase_ == 1;
    }
    /**
     * <code>optional .Application application = 1;</code>
     */
    public com.android.launcher3.logger.LauncherAtom.Application getApplication() {
      if (itemCase_ == 1) {
         return (com.android.launcher3.logger.LauncherAtom.Application) item_;
      }
      return com.android.launcher3.logger.LauncherAtom.Application.getDefaultInstance();
    }
    /**
     * <code>optional .Application application = 1;</code>
     */
    private void setApplication(com.android.launcher3.logger.LauncherAtom.Application value) {
      if (value == null) {
        throw new NullPointerException();
      }
      item_ = value;
      itemCase_ = 1;
    }
    /**
     * <code>optional .Application application = 1;</code>
     */
    private void setApplication(
        com.android.launcher3.logger.LauncherAtom.Application.Builder builderForValue) {
      item_ = builderForValue.build();
      itemCase_ = 1;
    }
    /**
     * <code>optional .Application application = 1;</code>
     */
    private void mergeApplication(com.android.launcher3.logger.LauncherAtom.Application value) {
      if (itemCase_ == 1 &&
          item_ != com.android.launcher3.logger.LauncherAtom.Application.getDefaultInstance()) {
        item_ = com.android.launcher3.logger.LauncherAtom.Application.newBuilder((com.android.launcher3.logger.LauncherAtom.Application) item_)
            .mergeFrom(value).buildPartial();
      } else {
        item_ = value;
      }
      itemCase_ = 1;
    }
    /**
     * <code>optional .Application application = 1;</code>
     */
    private void clearApplication() {
      if (itemCase_ == 1) {
        itemCase_ = 0;
        item_ = null;
      }
    }

    public static final int TASK_FIELD_NUMBER = 2;
    /**
     * <code>optional .Task task = 2;</code>
     */
    public boolean hasTask() {
      return itemCase_ == 2;
    }
    /**
     * <code>optional .Task task = 2;</code>
     */
    public com.android.launcher3.logger.LauncherAtom.Task getTask() {
      if (itemCase_ == 2) {
         return (com.android.launcher3.logger.LauncherAtom.Task) item_;
      }
      return com.android.launcher3.logger.LauncherAtom.Task.getDefaultInstance();
    }
    /**
     * <code>optional .Task task = 2;</code>
     */
    private void setTask(com.android.launcher3.logger.LauncherAtom.Task value) {
      if (value == null) {
        throw new NullPointerException();
      }
      item_ = value;
      itemCase_ = 2;
    }
    /**
     * <code>optional .Task task = 2;</code>
     */
    private void setTask(
        com.android.launcher3.logger.LauncherAtom.Task.Builder builderForValue) {
      item_ = builderForValue.build();
      itemCase_ = 2;
    }
    /**
     * <code>optional .Task task = 2;</code>
     */
    private void mergeTask(com.android.launcher3.logger.LauncherAtom.Task value) {
      if (itemCase_ == 2 &&
          item_ != com.android.launcher3.logger.LauncherAtom.Task.getDefaultInstance()) {
        item_ = com.android.launcher3.logger.LauncherAtom.Task.newBuilder((com.android.launcher3.logger.LauncherAtom.Task) item_)
            .mergeFrom(value).buildPartial();
      } else {
        item_ = value;
      }
      itemCase_ = 2;
    }
    /**
     * <code>optional .Task task = 2;</code>
     */
    private void clearTask() {
      if (itemCase_ == 2) {
        itemCase_ = 0;
        item_ = null;
      }
    }

    public static final int SHORTCUT_FIELD_NUMBER = 3;
    /**
     * <code>optional .Shortcut shortcut = 3;</code>
     */
    public boolean hasShortcut() {
      return itemCase_ == 3;
    }
    /**
     * <code>optional .Shortcut shortcut = 3;</code>
     */
    public com.android.launcher3.logger.LauncherAtom.Shortcut getShortcut() {
      if (itemCase_ == 3) {
         return (com.android.launcher3.logger.LauncherAtom.Shortcut) item_;
      }
      return com.android.launcher3.logger.LauncherAtom.Shortcut.getDefaultInstance();
    }
    /**
     * <code>optional .Shortcut shortcut = 3;</code>
     */
    private void setShortcut(com.android.launcher3.logger.LauncherAtom.Shortcut value) {
      if (value == null) {
        throw new NullPointerException();
      }
      item_ = value;
      itemCase_ = 3;
    }
    /**
     * <code>optional .Shortcut shortcut = 3;</code>
     */
    private void setShortcut(
        com.android.launcher3.logger.LauncherAtom.Shortcut.Builder builderForValue) {
      item_ = builderForValue.build();
      itemCase_ = 3;
    }
    /**
     * <code>optional .Shortcut shortcut = 3;</code>
     */
    private void mergeShortcut(com.android.launcher3.logger.LauncherAtom.Shortcut value) {
      if (itemCase_ == 3 &&
          item_ != com.android.launcher3.logger.LauncherAtom.Shortcut.getDefaultInstance()) {
        item_ = com.android.launcher3.logger.LauncherAtom.Shortcut.newBuilder((com.android.launcher3.logger.LauncherAtom.Shortcut) item_)
            .mergeFrom(value).buildPartial();
      } else {
        item_ = value;
      }
      itemCase_ = 3;
    }
    /**
     * <code>optional .Shortcut shortcut = 3;</code>
     */
    private void clearShortcut() {
      if (itemCase_ == 3) {
        itemCase_ = 0;
        item_ = null;
      }
    }

    public static final int WIDGET_FIELD_NUMBER = 4;
    /**
     * <code>optional .Widget widget = 4;</code>
     */
    public boolean hasWidget() {
      return itemCase_ == 4;
    }
    /**
     * <code>optional .Widget widget = 4;</code>
     */
    public com.android.launcher3.logger.LauncherAtom.Widget getWidget() {
      if (itemCase_ == 4) {
         return (com.android.launcher3.logger.LauncherAtom.Widget) item_;
      }
      return com.android.launcher3.logger.LauncherAtom.Widget.getDefaultInstance();
    }
    /**
     * <code>optional .Widget widget = 4;</code>
     */
    private void setWidget(com.android.launcher3.logger.LauncherAtom.Widget value) {
      if (value == null) {
        throw new NullPointerException();
      }
      item_ = value;
      itemCase_ = 4;
    }
    /**
     * <code>optional .Widget widget = 4;</code>
     */
    private void setWidget(
        com.android.launcher3.logger.LauncherAtom.Widget.Builder builderForValue) {
      item_ = builderForValue.build();
      itemCase_ = 4;
    }
    /**
     * <code>optional .Widget widget = 4;</code>
     */
    private void mergeWidget(com.android.launcher3.logger.LauncherAtom.Widget value) {
      if (itemCase_ == 4 &&
          item_ != com.android.launcher3.logger.LauncherAtom.Widget.getDefaultInstance()) {
        item_ = com.android.launcher3.logger.LauncherAtom.Widget.newBuilder((com.android.launcher3.logger.LauncherAtom.Widget) item_)
            .mergeFrom(value).buildPartial();
      } else {
        item_ = value;
      }
      itemCase_ = 4;
    }
    /**
     * <code>optional .Widget widget = 4;</code>
     */
    private void clearWidget() {
      if (itemCase_ == 4) {
        itemCase_ = 0;
        item_ = null;
      }
    }

    public static final int FOLDER_ICON_FIELD_NUMBER = 9;
    /**
     * <code>optional .FolderIcon folder_icon = 9;</code>
     */
    public boolean hasFolderIcon() {
      return itemCase_ == 9;
    }
    /**
     * <code>optional .FolderIcon folder_icon = 9;</code>
     */
    public com.android.launcher3.logger.LauncherAtom.FolderIcon getFolderIcon() {
      if (itemCase_ == 9) {
         return (com.android.launcher3.logger.LauncherAtom.FolderIcon) item_;
      }
      return com.android.launcher3.logger.LauncherAtom.FolderIcon.getDefaultInstance();
    }
    /**
     * <code>optional .FolderIcon folder_icon = 9;</code>
     */
    private void setFolderIcon(com.android.launcher3.logger.LauncherAtom.FolderIcon value) {
      if (value == null) {
        throw new NullPointerException();
      }
      item_ = value;
      itemCase_ = 9;
    }
    /**
     * <code>optional .FolderIcon folder_icon = 9;</code>
     */
    private void setFolderIcon(
        com.android.launcher3.logger.LauncherAtom.FolderIcon.Builder builderForValue) {
      item_ = builderForValue.build();
      itemCase_ = 9;
    }
    /**
     * <code>optional .FolderIcon folder_icon = 9;</code>
     */
    private void mergeFolderIcon(com.android.launcher3.logger.LauncherAtom.FolderIcon value) {
      if (itemCase_ == 9 &&
          item_ != com.android.launcher3.logger.LauncherAtom.FolderIcon.getDefaultInstance()) {
        item_ = com.android.launcher3.logger.LauncherAtom.FolderIcon.newBuilder((com.android.launcher3.logger.LauncherAtom.FolderIcon) item_)
            .mergeFrom(value).buildPartial();
      } else {
        item_ = value;
      }
      itemCase_ = 9;
    }
    /**
     * <code>optional .FolderIcon folder_icon = 9;</code>
     */
    private void clearFolderIcon() {
      if (itemCase_ == 9) {
        itemCase_ = 0;
        item_ = null;
      }
    }

    public static final int RANK_FIELD_NUMBER = 5;
    private int rank_;
    /**
     * <pre>
     * When used for launch event, stores the global predictive rank
     * </pre>
     *
     * <code>optional int32 rank = 5;</code>
     */
    public boolean hasRank() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * When used for launch event, stores the global predictive rank
     * </pre>
     *
     * <code>optional int32 rank = 5;</code>
     */
    public int getRank() {
      return rank_;
    }
    /**
     * <pre>
     * When used for launch event, stores the global predictive rank
     * </pre>
     *
     * <code>optional int32 rank = 5;</code>
     */
    private void setRank(int value) {
      bitField0_ |= 0x00000020;
      rank_ = value;
    }
    /**
     * <pre>
     * When used for launch event, stores the global predictive rank
     * </pre>
     *
     * <code>optional int32 rank = 5;</code>
     */
    private void clearRank() {
      bitField0_ = (bitField0_ & ~0x00000020);
      rank_ = 0;
    }

    public static final int IS_WORK_FIELD_NUMBER = 6;
    private boolean isWork_;
    /**
     * <pre>
     * Stores whether the Item belows to non primary user
     * </pre>
     *
     * <code>optional bool is_work = 6;</code>
     */
    public boolean hasIsWork() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * Stores whether the Item belows to non primary user
     * </pre>
     *
     * <code>optional bool is_work = 6;</code>
     */
    public boolean getIsWork() {
      return isWork_;
    }
    /**
     * <pre>
     * Stores whether the Item belows to non primary user
     * </pre>
     *
     * <code>optional bool is_work = 6;</code>
     */
    private void setIsWork(boolean value) {
      bitField0_ |= 0x00000040;
      isWork_ = value;
    }
    /**
     * <pre>
     * Stores whether the Item belows to non primary user
     * </pre>
     *
     * <code>optional bool is_work = 6;</code>
     */
    private void clearIsWork() {
      bitField0_ = (bitField0_ & ~0x00000040);
      isWork_ = false;
    }

    public static final int CONTAINER_INFO_FIELD_NUMBER = 7;
    private com.android.launcher3.logger.LauncherAtom.ContainerInfo containerInfo_;
    /**
     * <pre>
     * Item can be child node to parent container or parent containers (nested)
     * </pre>
     *
     * <code>optional .ContainerInfo container_info = 7;</code>
     */
    public boolean hasContainerInfo() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     * Item can be child node to parent container or parent containers (nested)
     * </pre>
     *
     * <code>optional .ContainerInfo container_info = 7;</code>
     */
    public com.android.launcher3.logger.LauncherAtom.ContainerInfo getContainerInfo() {
      return containerInfo_ == null ? com.android.launcher3.logger.LauncherAtom.ContainerInfo.getDefaultInstance() : containerInfo_;
    }
    /**
     * <pre>
     * Item can be child node to parent container or parent containers (nested)
     * </pre>
     *
     * <code>optional .ContainerInfo container_info = 7;</code>
     */
    private void setContainerInfo(com.android.launcher3.logger.LauncherAtom.ContainerInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      containerInfo_ = value;
      bitField0_ |= 0x00000080;
      }
    /**
     * <pre>
     * Item can be child node to parent container or parent containers (nested)
     * </pre>
     *
     * <code>optional .ContainerInfo container_info = 7;</code>
     */
    private void setContainerInfo(
        com.android.launcher3.logger.LauncherAtom.ContainerInfo.Builder builderForValue) {
      containerInfo_ = builderForValue.build();
      bitField0_ |= 0x00000080;
    }
    /**
     * <pre>
     * Item can be child node to parent container or parent containers (nested)
     * </pre>
     *
     * <code>optional .ContainerInfo container_info = 7;</code>
     */
    private void mergeContainerInfo(com.android.launcher3.logger.LauncherAtom.ContainerInfo value) {
      if (containerInfo_ != null &&
          containerInfo_ != com.android.launcher3.logger.LauncherAtom.ContainerInfo.getDefaultInstance()) {
        containerInfo_ =
          com.android.launcher3.logger.LauncherAtom.ContainerInfo.newBuilder(containerInfo_).mergeFrom(value).buildPartial();
      } else {
        containerInfo_ = value;
      }
      bitField0_ |= 0x00000080;
    }
    /**
     * <pre>
     * Item can be child node to parent container or parent containers (nested)
     * </pre>
     *
     * <code>optional .ContainerInfo container_info = 7;</code>
     */
    private void clearContainerInfo() {  containerInfo_ = null;
      bitField0_ = (bitField0_ & ~0x00000080);
    }

    public static final int ATTRIBUTE_FIELD_NUMBER = 8;
    private int attribute_;
    /**
     * <pre>
     * Stores the origin of the Item
     * </pre>
     *
     * <code>optional .Attribute attribute = 8;</code>
     */
    public boolean hasAttribute() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     * Stores the origin of the Item
     * </pre>
     *
     * <code>optional .Attribute attribute = 8;</code>
     */
    public com.android.launcher3.logger.LauncherAtom.Attribute getAttribute() {
      com.android.launcher3.logger.LauncherAtom.Attribute result = com.android.launcher3.logger.LauncherAtom.Attribute.forNumber(attribute_);
      return result == null ? com.android.launcher3.logger.LauncherAtom.Attribute.UNKNOWN : result;
    }
    /**
     * <pre>
     * Stores the origin of the Item
     * </pre>
     *
     * <code>optional .Attribute attribute = 8;</code>
     */
    private void setAttribute(com.android.launcher3.logger.LauncherAtom.Attribute value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000100;
      attribute_ = value.getNumber();
    }
    /**
     * <pre>
     * Stores the origin of the Item
     * </pre>
     *
     * <code>optional .Attribute attribute = 8;</code>
     */
    private void clearAttribute() {
      bitField0_ = (bitField0_ & ~0x00000100);
      attribute_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (itemCase_ == 1) {
        output.writeMessage(1, (com.android.launcher3.logger.LauncherAtom.Application) item_);
      }
      if (itemCase_ == 2) {
        output.writeMessage(2, (com.android.launcher3.logger.LauncherAtom.Task) item_);
      }
      if (itemCase_ == 3) {
        output.writeMessage(3, (com.android.launcher3.logger.LauncherAtom.Shortcut) item_);
      }
      if (itemCase_ == 4) {
        output.writeMessage(4, (com.android.launcher3.logger.LauncherAtom.Widget) item_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(5, rank_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(6, isWork_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(7, getContainerInfo());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeEnum(8, attribute_);
      }
      if (itemCase_ == 9) {
        output.writeMessage(9, (com.android.launcher3.logger.LauncherAtom.FolderIcon) item_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (itemCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.android.launcher3.logger.LauncherAtom.Application) item_);
      }
      if (itemCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.android.launcher3.logger.LauncherAtom.Task) item_);
      }
      if (itemCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.android.launcher3.logger.LauncherAtom.Shortcut) item_);
      }
      if (itemCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (com.android.launcher3.logger.LauncherAtom.Widget) item_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, rank_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, isWork_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getContainerInfo());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, attribute_);
      }
      if (itemCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (com.android.launcher3.logger.LauncherAtom.FolderIcon) item_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.android.launcher3.logger.LauncherAtom.ItemInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.ItemInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.ItemInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.ItemInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.ItemInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.ItemInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.ItemInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.ItemInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.ItemInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.ItemInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.launcher3.logger.LauncherAtom.ItemInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * ItemInfos
     * </pre>
     *
     * Protobuf type {@code ItemInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.android.launcher3.logger.LauncherAtom.ItemInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:ItemInfo)
        com.android.launcher3.logger.LauncherAtom.ItemInfoOrBuilder {
      // Construct using com.android.launcher3.logger.LauncherAtom.ItemInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      public ItemCase
          getItemCase() {
        return instance.getItemCase();
      }

      public Builder clearItem() {
        copyOnWrite();
        instance.clearItem();
        return this;
      }


      /**
       * <code>optional .Application application = 1;</code>
       */
      public boolean hasApplication() {
        return instance.hasApplication();
      }
      /**
       * <code>optional .Application application = 1;</code>
       */
      public com.android.launcher3.logger.LauncherAtom.Application getApplication() {
        return instance.getApplication();
      }
      /**
       * <code>optional .Application application = 1;</code>
       */
      public Builder setApplication(com.android.launcher3.logger.LauncherAtom.Application value) {
        copyOnWrite();
        instance.setApplication(value);
        return this;
      }
      /**
       * <code>optional .Application application = 1;</code>
       */
      public Builder setApplication(
          com.android.launcher3.logger.LauncherAtom.Application.Builder builderForValue) {
        copyOnWrite();
        instance.setApplication(builderForValue);
        return this;
      }
      /**
       * <code>optional .Application application = 1;</code>
       */
      public Builder mergeApplication(com.android.launcher3.logger.LauncherAtom.Application value) {
        copyOnWrite();
        instance.mergeApplication(value);
        return this;
      }
      /**
       * <code>optional .Application application = 1;</code>
       */
      public Builder clearApplication() {
        copyOnWrite();
        instance.clearApplication();
        return this;
      }

      /**
       * <code>optional .Task task = 2;</code>
       */
      public boolean hasTask() {
        return instance.hasTask();
      }
      /**
       * <code>optional .Task task = 2;</code>
       */
      public com.android.launcher3.logger.LauncherAtom.Task getTask() {
        return instance.getTask();
      }
      /**
       * <code>optional .Task task = 2;</code>
       */
      public Builder setTask(com.android.launcher3.logger.LauncherAtom.Task value) {
        copyOnWrite();
        instance.setTask(value);
        return this;
      }
      /**
       * <code>optional .Task task = 2;</code>
       */
      public Builder setTask(
          com.android.launcher3.logger.LauncherAtom.Task.Builder builderForValue) {
        copyOnWrite();
        instance.setTask(builderForValue);
        return this;
      }
      /**
       * <code>optional .Task task = 2;</code>
       */
      public Builder mergeTask(com.android.launcher3.logger.LauncherAtom.Task value) {
        copyOnWrite();
        instance.mergeTask(value);
        return this;
      }
      /**
       * <code>optional .Task task = 2;</code>
       */
      public Builder clearTask() {
        copyOnWrite();
        instance.clearTask();
        return this;
      }

      /**
       * <code>optional .Shortcut shortcut = 3;</code>
       */
      public boolean hasShortcut() {
        return instance.hasShortcut();
      }
      /**
       * <code>optional .Shortcut shortcut = 3;</code>
       */
      public com.android.launcher3.logger.LauncherAtom.Shortcut getShortcut() {
        return instance.getShortcut();
      }
      /**
       * <code>optional .Shortcut shortcut = 3;</code>
       */
      public Builder setShortcut(com.android.launcher3.logger.LauncherAtom.Shortcut value) {
        copyOnWrite();
        instance.setShortcut(value);
        return this;
      }
      /**
       * <code>optional .Shortcut shortcut = 3;</code>
       */
      public Builder setShortcut(
          com.android.launcher3.logger.LauncherAtom.Shortcut.Builder builderForValue) {
        copyOnWrite();
        instance.setShortcut(builderForValue);
        return this;
      }
      /**
       * <code>optional .Shortcut shortcut = 3;</code>
       */
      public Builder mergeShortcut(com.android.launcher3.logger.LauncherAtom.Shortcut value) {
        copyOnWrite();
        instance.mergeShortcut(value);
        return this;
      }
      /**
       * <code>optional .Shortcut shortcut = 3;</code>
       */
      public Builder clearShortcut() {
        copyOnWrite();
        instance.clearShortcut();
        return this;
      }

      /**
       * <code>optional .Widget widget = 4;</code>
       */
      public boolean hasWidget() {
        return instance.hasWidget();
      }
      /**
       * <code>optional .Widget widget = 4;</code>
       */
      public com.android.launcher3.logger.LauncherAtom.Widget getWidget() {
        return instance.getWidget();
      }
      /**
       * <code>optional .Widget widget = 4;</code>
       */
      public Builder setWidget(com.android.launcher3.logger.LauncherAtom.Widget value) {
        copyOnWrite();
        instance.setWidget(value);
        return this;
      }
      /**
       * <code>optional .Widget widget = 4;</code>
       */
      public Builder setWidget(
          com.android.launcher3.logger.LauncherAtom.Widget.Builder builderForValue) {
        copyOnWrite();
        instance.setWidget(builderForValue);
        return this;
      }
      /**
       * <code>optional .Widget widget = 4;</code>
       */
      public Builder mergeWidget(com.android.launcher3.logger.LauncherAtom.Widget value) {
        copyOnWrite();
        instance.mergeWidget(value);
        return this;
      }
      /**
       * <code>optional .Widget widget = 4;</code>
       */
      public Builder clearWidget() {
        copyOnWrite();
        instance.clearWidget();
        return this;
      }

      /**
       * <code>optional .FolderIcon folder_icon = 9;</code>
       */
      public boolean hasFolderIcon() {
        return instance.hasFolderIcon();
      }
      /**
       * <code>optional .FolderIcon folder_icon = 9;</code>
       */
      public com.android.launcher3.logger.LauncherAtom.FolderIcon getFolderIcon() {
        return instance.getFolderIcon();
      }
      /**
       * <code>optional .FolderIcon folder_icon = 9;</code>
       */
      public Builder setFolderIcon(com.android.launcher3.logger.LauncherAtom.FolderIcon value) {
        copyOnWrite();
        instance.setFolderIcon(value);
        return this;
      }
      /**
       * <code>optional .FolderIcon folder_icon = 9;</code>
       */
      public Builder setFolderIcon(
          com.android.launcher3.logger.LauncherAtom.FolderIcon.Builder builderForValue) {
        copyOnWrite();
        instance.setFolderIcon(builderForValue);
        return this;
      }
      /**
       * <code>optional .FolderIcon folder_icon = 9;</code>
       */
      public Builder mergeFolderIcon(com.android.launcher3.logger.LauncherAtom.FolderIcon value) {
        copyOnWrite();
        instance.mergeFolderIcon(value);
        return this;
      }
      /**
       * <code>optional .FolderIcon folder_icon = 9;</code>
       */
      public Builder clearFolderIcon() {
        copyOnWrite();
        instance.clearFolderIcon();
        return this;
      }

      /**
       * <pre>
       * When used for launch event, stores the global predictive rank
       * </pre>
       *
       * <code>optional int32 rank = 5;</code>
       */
      public boolean hasRank() {
        return instance.hasRank();
      }
      /**
       * <pre>
       * When used for launch event, stores the global predictive rank
       * </pre>
       *
       * <code>optional int32 rank = 5;</code>
       */
      public int getRank() {
        return instance.getRank();
      }
      /**
       * <pre>
       * When used for launch event, stores the global predictive rank
       * </pre>
       *
       * <code>optional int32 rank = 5;</code>
       */
      public Builder setRank(int value) {
        copyOnWrite();
        instance.setRank(value);
        return this;
      }
      /**
       * <pre>
       * When used for launch event, stores the global predictive rank
       * </pre>
       *
       * <code>optional int32 rank = 5;</code>
       */
      public Builder clearRank() {
        copyOnWrite();
        instance.clearRank();
        return this;
      }

      /**
       * <pre>
       * Stores whether the Item belows to non primary user
       * </pre>
       *
       * <code>optional bool is_work = 6;</code>
       */
      public boolean hasIsWork() {
        return instance.hasIsWork();
      }
      /**
       * <pre>
       * Stores whether the Item belows to non primary user
       * </pre>
       *
       * <code>optional bool is_work = 6;</code>
       */
      public boolean getIsWork() {
        return instance.getIsWork();
      }
      /**
       * <pre>
       * Stores whether the Item belows to non primary user
       * </pre>
       *
       * <code>optional bool is_work = 6;</code>
       */
      public Builder setIsWork(boolean value) {
        copyOnWrite();
        instance.setIsWork(value);
        return this;
      }
      /**
       * <pre>
       * Stores whether the Item belows to non primary user
       * </pre>
       *
       * <code>optional bool is_work = 6;</code>
       */
      public Builder clearIsWork() {
        copyOnWrite();
        instance.clearIsWork();
        return this;
      }

      /**
       * <pre>
       * Item can be child node to parent container or parent containers (nested)
       * </pre>
       *
       * <code>optional .ContainerInfo container_info = 7;</code>
       */
      public boolean hasContainerInfo() {
        return instance.hasContainerInfo();
      }
      /**
       * <pre>
       * Item can be child node to parent container or parent containers (nested)
       * </pre>
       *
       * <code>optional .ContainerInfo container_info = 7;</code>
       */
      public com.android.launcher3.logger.LauncherAtom.ContainerInfo getContainerInfo() {
        return instance.getContainerInfo();
      }
      /**
       * <pre>
       * Item can be child node to parent container or parent containers (nested)
       * </pre>
       *
       * <code>optional .ContainerInfo container_info = 7;</code>
       */
      public Builder setContainerInfo(com.android.launcher3.logger.LauncherAtom.ContainerInfo value) {
        copyOnWrite();
        instance.setContainerInfo(value);
        return this;
        }
      /**
       * <pre>
       * Item can be child node to parent container or parent containers (nested)
       * </pre>
       *
       * <code>optional .ContainerInfo container_info = 7;</code>
       */
      public Builder setContainerInfo(
          com.android.launcher3.logger.LauncherAtom.ContainerInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setContainerInfo(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Item can be child node to parent container or parent containers (nested)
       * </pre>
       *
       * <code>optional .ContainerInfo container_info = 7;</code>
       */
      public Builder mergeContainerInfo(com.android.launcher3.logger.LauncherAtom.ContainerInfo value) {
        copyOnWrite();
        instance.mergeContainerInfo(value);
        return this;
      }
      /**
       * <pre>
       * Item can be child node to parent container or parent containers (nested)
       * </pre>
       *
       * <code>optional .ContainerInfo container_info = 7;</code>
       */
      public Builder clearContainerInfo() {  copyOnWrite();
        instance.clearContainerInfo();
        return this;
      }

      /**
       * <pre>
       * Stores the origin of the Item
       * </pre>
       *
       * <code>optional .Attribute attribute = 8;</code>
       */
      public boolean hasAttribute() {
        return instance.hasAttribute();
      }
      /**
       * <pre>
       * Stores the origin of the Item
       * </pre>
       *
       * <code>optional .Attribute attribute = 8;</code>
       */
      public com.android.launcher3.logger.LauncherAtom.Attribute getAttribute() {
        return instance.getAttribute();
      }
      /**
       * <pre>
       * Stores the origin of the Item
       * </pre>
       *
       * <code>optional .Attribute attribute = 8;</code>
       */
      public Builder setAttribute(com.android.launcher3.logger.LauncherAtom.Attribute value) {
        copyOnWrite();
        instance.setAttribute(value);
        return this;
      }
      /**
       * <pre>
       * Stores the origin of the Item
       * </pre>
       *
       * <code>optional .Attribute attribute = 8;</code>
       */
      public Builder clearAttribute() {
        copyOnWrite();
        instance.clearAttribute();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ItemInfo)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.android.launcher3.logger.LauncherAtom.ItemInfo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.android.launcher3.logger.LauncherAtom.ItemInfo other = (com.android.launcher3.logger.LauncherAtom.ItemInfo) arg1;
          rank_ = visitor.visitInt(
              hasRank(), rank_,
              other.hasRank(), other.rank_);
          isWork_ = visitor.visitBoolean(
              hasIsWork(), isWork_,
              other.hasIsWork(), other.isWork_);
          containerInfo_ = visitor.visitMessage(containerInfo_, other.containerInfo_);
          attribute_ = visitor.visitInt(hasAttribute(), attribute_,
              other.hasAttribute(), other.attribute_);
          switch (other.getItemCase()) {
            case APPLICATION: {
              item_ = visitor.visitOneofMessage(
                  itemCase_ == 1,
                  item_,
                  other.item_);
              break;
            }
            case TASK: {
              item_ = visitor.visitOneofMessage(
                  itemCase_ == 2,
                  item_,
                  other.item_);
              break;
            }
            case SHORTCUT: {
              item_ = visitor.visitOneofMessage(
                  itemCase_ == 3,
                  item_,
                  other.item_);
              break;
            }
            case WIDGET: {
              item_ = visitor.visitOneofMessage(
                  itemCase_ == 4,
                  item_,
                  other.item_);
              break;
            }
            case FOLDER_ICON: {
              item_ = visitor.visitOneofMessage(
                  itemCase_ == 9,
                  item_,
                  other.item_);
              break;
            }
            case ITEM_NOT_SET: {
              visitor.visitOneofNotSet(itemCase_ != 0);
              break;
            }
          }
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            if (other.itemCase_ != 0) {
              itemCase_ = other.itemCase_;
            }
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.android.launcher3.logger.LauncherAtom.Application.Builder subBuilder = null;
                  if (itemCase_ == 1) {
                    subBuilder = ((com.android.launcher3.logger.LauncherAtom.Application) item_).toBuilder();
                  }
                  item_ =
                       input.readMessage(com.android.launcher3.logger.LauncherAtom.Application.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.android.launcher3.logger.LauncherAtom.Application) item_);
                    item_ = subBuilder.buildPartial();
                  }
                  itemCase_ = 1;
                  break;
                }
                case 18: {
                  com.android.launcher3.logger.LauncherAtom.Task.Builder subBuilder = null;
                  if (itemCase_ == 2) {
                    subBuilder = ((com.android.launcher3.logger.LauncherAtom.Task) item_).toBuilder();
                  }
                  item_ =
                       input.readMessage(com.android.launcher3.logger.LauncherAtom.Task.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.android.launcher3.logger.LauncherAtom.Task) item_);
                    item_ = subBuilder.buildPartial();
                  }
                  itemCase_ = 2;
                  break;
                }
                case 26: {
                  com.android.launcher3.logger.LauncherAtom.Shortcut.Builder subBuilder = null;
                  if (itemCase_ == 3) {
                    subBuilder = ((com.android.launcher3.logger.LauncherAtom.Shortcut) item_).toBuilder();
                  }
                  item_ =
                       input.readMessage(com.android.launcher3.logger.LauncherAtom.Shortcut.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.android.launcher3.logger.LauncherAtom.Shortcut) item_);
                    item_ = subBuilder.buildPartial();
                  }
                  itemCase_ = 3;
                  break;
                }
                case 34: {
                  com.android.launcher3.logger.LauncherAtom.Widget.Builder subBuilder = null;
                  if (itemCase_ == 4) {
                    subBuilder = ((com.android.launcher3.logger.LauncherAtom.Widget) item_).toBuilder();
                  }
                  item_ =
                       input.readMessage(com.android.launcher3.logger.LauncherAtom.Widget.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.android.launcher3.logger.LauncherAtom.Widget) item_);
                    item_ = subBuilder.buildPartial();
                  }
                  itemCase_ = 4;
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000020;
                  rank_ = input.readInt32();
                  break;
                }
                case 48: {
                  bitField0_ |= 0x00000040;
                  isWork_ = input.readBool();
                  break;
                }
                case 58: {
                  com.android.launcher3.logger.LauncherAtom.ContainerInfo.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000080) == 0x00000080)) {
                    subBuilder = containerInfo_.toBuilder();
                  }
                  containerInfo_ = input.readMessage(com.android.launcher3.logger.LauncherAtom.ContainerInfo.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(containerInfo_);
                    containerInfo_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000080;
                  break;
                }
                case 64: {
                  int rawValue = input.readEnum();
                  com.android.launcher3.logger.LauncherAtom.Attribute value = com.android.launcher3.logger.LauncherAtom.Attribute.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(8, rawValue);
                  } else {
                    bitField0_ |= 0x00000100;
                    attribute_ = rawValue;
                  }
                  break;
                }
                case 74: {
                  com.android.launcher3.logger.LauncherAtom.FolderIcon.Builder subBuilder = null;
                  if (itemCase_ == 9) {
                    subBuilder = ((com.android.launcher3.logger.LauncherAtom.FolderIcon) item_).toBuilder();
                  }
                  item_ =
                       input.readMessage(com.android.launcher3.logger.LauncherAtom.FolderIcon.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.android.launcher3.logger.LauncherAtom.FolderIcon) item_);
                    item_ = subBuilder.buildPartial();
                  }
                  itemCase_ = 9;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.android.launcher3.logger.LauncherAtom.ItemInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:ItemInfo)
    private static final com.android.launcher3.logger.LauncherAtom.ItemInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ItemInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.android.launcher3.logger.LauncherAtom.ItemInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ItemInfo> PARSER;

    public static com.google.protobuf.Parser<ItemInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ContainerInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ContainerInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .WorkspaceContainer workspace = 1;</code>
     */
    boolean hasWorkspace();
    /**
     * <code>optional .WorkspaceContainer workspace = 1;</code>
     */
    com.android.launcher3.logger.LauncherAtom.WorkspaceContainer getWorkspace();

    /**
     * <code>optional .HotseatContainer hotseat = 2;</code>
     */
    boolean hasHotseat();
    /**
     * <code>optional .HotseatContainer hotseat = 2;</code>
     */
    com.android.launcher3.logger.LauncherAtom.HotseatContainer getHotseat();

    /**
     * <code>optional .FolderContainer folder = 3;</code>
     */
    boolean hasFolder();
    /**
     * <code>optional .FolderContainer folder = 3;</code>
     */
    com.android.launcher3.logger.LauncherAtom.FolderContainer getFolder();

    /**
     * <code>optional .AllAppsContainer all_apps_container = 4;</code>
     */
    boolean hasAllAppsContainer();
    /**
     * <code>optional .AllAppsContainer all_apps_container = 4;</code>
     */
    com.android.launcher3.logger.LauncherAtom.AllAppsContainer getAllAppsContainer();

    /**
     * <code>optional .WidgetsContainer widgets_container = 5;</code>
     */
    boolean hasWidgetsContainer();
    /**
     * <code>optional .WidgetsContainer widgets_container = 5;</code>
     */
    com.android.launcher3.logger.LauncherAtom.WidgetsContainer getWidgetsContainer();

    /**
     * <code>optional .PredictionContainer prediction_container = 6;</code>
     */
    boolean hasPredictionContainer();
    /**
     * <code>optional .PredictionContainer prediction_container = 6;</code>
     */
    com.android.launcher3.logger.LauncherAtom.PredictionContainer getPredictionContainer();

    /**
     * <code>optional .SearchResultContainer search_result_container = 7;</code>
     */
    boolean hasSearchResultContainer();
    /**
     * <code>optional .SearchResultContainer search_result_container = 7;</code>
     */
    com.android.launcher3.logger.LauncherAtom.SearchResultContainer getSearchResultContainer();

    /**
     * <code>optional .ShortcutsContainer shortcuts_container = 8;</code>
     */
    boolean hasShortcutsContainer();
    /**
     * <code>optional .ShortcutsContainer shortcuts_container = 8;</code>
     */
    com.android.launcher3.logger.LauncherAtom.ShortcutsContainer getShortcutsContainer();

    /**
     * <code>optional .SettingsContainer settings_container = 9;</code>
     */
    boolean hasSettingsContainer();
    /**
     * <code>optional .SettingsContainer settings_container = 9;</code>
     */
    com.android.launcher3.logger.LauncherAtom.SettingsContainer getSettingsContainer();

    /**
     * <code>optional .PredictedHotseatContainer predicted_hotseat_container = 10;</code>
     */
    boolean hasPredictedHotseatContainer();
    /**
     * <code>optional .PredictedHotseatContainer predicted_hotseat_container = 10;</code>
     */
    com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer getPredictedHotseatContainer();

    /**
     * <code>optional .TaskSwitcherContainer task_switcher_container = 11;</code>
     */
    boolean hasTaskSwitcherContainer();
    /**
     * <code>optional .TaskSwitcherContainer task_switcher_container = 11;</code>
     */
    com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer getTaskSwitcherContainer();

    /**
     * <code>optional .TaskForegroundContainer task_foreground_container = 12;</code>
     */
    boolean hasTaskForegroundContainer();
    /**
     * <code>optional .TaskForegroundContainer task_foreground_container = 12;</code>
     */
    com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer getTaskForegroundContainer();

    public com.android.launcher3.logger.LauncherAtom.ContainerInfo.ContainerCase getContainerCase();
  }
  /**
   * <pre>
   * Represents various launcher surface where items are placed.
   * </pre>
   *
   * Protobuf type {@code ContainerInfo}
   */
  public  static final class ContainerInfo extends
      com.google.protobuf.GeneratedMessageLite<
          ContainerInfo, ContainerInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:ContainerInfo)
      ContainerInfoOrBuilder {
    private ContainerInfo() {
    }
    private int bitField0_;
    private int containerCase_ = 0;
    private java.lang.Object container_;
    public enum ContainerCase
        implements com.google.protobuf.Internal.EnumLite {
      WORKSPACE(1),
      HOTSEAT(2),
      FOLDER(3),
      ALL_APPS_CONTAINER(4),
      WIDGETS_CONTAINER(5),
      PREDICTION_CONTAINER(6),
      SEARCH_RESULT_CONTAINER(7),
      SHORTCUTS_CONTAINER(8),
      SETTINGS_CONTAINER(9),
      PREDICTED_HOTSEAT_CONTAINER(10),
      TASK_SWITCHER_CONTAINER(11),
      TASK_FOREGROUND_CONTAINER(12),
      CONTAINER_NOT_SET(0);
      private final int value;
      private ContainerCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ContainerCase valueOf(int value) {
        return forNumber(value);
      }

      public static ContainerCase forNumber(int value) {
        switch (value) {
          case 1: return WORKSPACE;
          case 2: return HOTSEAT;
          case 3: return FOLDER;
          case 4: return ALL_APPS_CONTAINER;
          case 5: return WIDGETS_CONTAINER;
          case 6: return PREDICTION_CONTAINER;
          case 7: return SEARCH_RESULT_CONTAINER;
          case 8: return SHORTCUTS_CONTAINER;
          case 9: return SETTINGS_CONTAINER;
          case 10: return PREDICTED_HOTSEAT_CONTAINER;
          case 11: return TASK_SWITCHER_CONTAINER;
          case 12: return TASK_FOREGROUND_CONTAINER;
          case 0: return CONTAINER_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ContainerCase
    getContainerCase() {
      return ContainerCase.forNumber(
          containerCase_);
    }

    private void clearContainer() {
      containerCase_ = 0;
      container_ = null;
    }

    public static final int WORKSPACE_FIELD_NUMBER = 1;
    /**
     * <code>optional .WorkspaceContainer workspace = 1;</code>
     */
    public boolean hasWorkspace() {
      return containerCase_ == 1;
    }
    /**
     * <code>optional .WorkspaceContainer workspace = 1;</code>
     */
    public com.android.launcher3.logger.LauncherAtom.WorkspaceContainer getWorkspace() {
      if (containerCase_ == 1) {
         return (com.android.launcher3.logger.LauncherAtom.WorkspaceContainer) container_;
      }
      return com.android.launcher3.logger.LauncherAtom.WorkspaceContainer.getDefaultInstance();
    }
    /**
     * <code>optional .WorkspaceContainer workspace = 1;</code>
     */
    private void setWorkspace(com.android.launcher3.logger.LauncherAtom.WorkspaceContainer value) {
      if (value == null) {
        throw new NullPointerException();
      }
      container_ = value;
      containerCase_ = 1;
    }
    /**
     * <code>optional .WorkspaceContainer workspace = 1;</code>
     */
    private void setWorkspace(
        com.android.launcher3.logger.LauncherAtom.WorkspaceContainer.Builder builderForValue) {
      container_ = builderForValue.build();
      containerCase_ = 1;
    }
    /**
     * <code>optional .WorkspaceContainer workspace = 1;</code>
     */
    private void mergeWorkspace(com.android.launcher3.logger.LauncherAtom.WorkspaceContainer value) {
      if (containerCase_ == 1 &&
          container_ != com.android.launcher3.logger.LauncherAtom.WorkspaceContainer.getDefaultInstance()) {
        container_ = com.android.launcher3.logger.LauncherAtom.WorkspaceContainer.newBuilder((com.android.launcher3.logger.LauncherAtom.WorkspaceContainer) container_)
            .mergeFrom(value).buildPartial();
      } else {
        container_ = value;
      }
      containerCase_ = 1;
    }
    /**
     * <code>optional .WorkspaceContainer workspace = 1;</code>
     */
    private void clearWorkspace() {
      if (containerCase_ == 1) {
        containerCase_ = 0;
        container_ = null;
      }
    }

    public static final int HOTSEAT_FIELD_NUMBER = 2;
    /**
     * <code>optional .HotseatContainer hotseat = 2;</code>
     */
    public boolean hasHotseat() {
      return containerCase_ == 2;
    }
    /**
     * <code>optional .HotseatContainer hotseat = 2;</code>
     */
    public com.android.launcher3.logger.LauncherAtom.HotseatContainer getHotseat() {
      if (containerCase_ == 2) {
         return (com.android.launcher3.logger.LauncherAtom.HotseatContainer) container_;
      }
      return com.android.launcher3.logger.LauncherAtom.HotseatContainer.getDefaultInstance();
    }
    /**
     * <code>optional .HotseatContainer hotseat = 2;</code>
     */
    private void setHotseat(com.android.launcher3.logger.LauncherAtom.HotseatContainer value) {
      if (value == null) {
        throw new NullPointerException();
      }
      container_ = value;
      containerCase_ = 2;
    }
    /**
     * <code>optional .HotseatContainer hotseat = 2;</code>
     */
    private void setHotseat(
        com.android.launcher3.logger.LauncherAtom.HotseatContainer.Builder builderForValue) {
      container_ = builderForValue.build();
      containerCase_ = 2;
    }
    /**
     * <code>optional .HotseatContainer hotseat = 2;</code>
     */
    private void mergeHotseat(com.android.launcher3.logger.LauncherAtom.HotseatContainer value) {
      if (containerCase_ == 2 &&
          container_ != com.android.launcher3.logger.LauncherAtom.HotseatContainer.getDefaultInstance()) {
        container_ = com.android.launcher3.logger.LauncherAtom.HotseatContainer.newBuilder((com.android.launcher3.logger.LauncherAtom.HotseatContainer) container_)
            .mergeFrom(value).buildPartial();
      } else {
        container_ = value;
      }
      containerCase_ = 2;
    }
    /**
     * <code>optional .HotseatContainer hotseat = 2;</code>
     */
    private void clearHotseat() {
      if (containerCase_ == 2) {
        containerCase_ = 0;
        container_ = null;
      }
    }

    public static final int FOLDER_FIELD_NUMBER = 3;
    /**
     * <code>optional .FolderContainer folder = 3;</code>
     */
    public boolean hasFolder() {
      return containerCase_ == 3;
    }
    /**
     * <code>optional .FolderContainer folder = 3;</code>
     */
    public com.android.launcher3.logger.LauncherAtom.FolderContainer getFolder() {
      if (containerCase_ == 3) {
         return (com.android.launcher3.logger.LauncherAtom.FolderContainer) container_;
      }
      return com.android.launcher3.logger.LauncherAtom.FolderContainer.getDefaultInstance();
    }
    /**
     * <code>optional .FolderContainer folder = 3;</code>
     */
    private void setFolder(com.android.launcher3.logger.LauncherAtom.FolderContainer value) {
      if (value == null) {
        throw new NullPointerException();
      }
      container_ = value;
      containerCase_ = 3;
    }
    /**
     * <code>optional .FolderContainer folder = 3;</code>
     */
    private void setFolder(
        com.android.launcher3.logger.LauncherAtom.FolderContainer.Builder builderForValue) {
      container_ = builderForValue.build();
      containerCase_ = 3;
    }
    /**
     * <code>optional .FolderContainer folder = 3;</code>
     */
    private void mergeFolder(com.android.launcher3.logger.LauncherAtom.FolderContainer value) {
      if (containerCase_ == 3 &&
          container_ != com.android.launcher3.logger.LauncherAtom.FolderContainer.getDefaultInstance()) {
        container_ = com.android.launcher3.logger.LauncherAtom.FolderContainer.newBuilder((com.android.launcher3.logger.LauncherAtom.FolderContainer) container_)
            .mergeFrom(value).buildPartial();
      } else {
        container_ = value;
      }
      containerCase_ = 3;
    }
    /**
     * <code>optional .FolderContainer folder = 3;</code>
     */
    private void clearFolder() {
      if (containerCase_ == 3) {
        containerCase_ = 0;
        container_ = null;
      }
    }

    public static final int ALL_APPS_CONTAINER_FIELD_NUMBER = 4;
    /**
     * <code>optional .AllAppsContainer all_apps_container = 4;</code>
     */
    public boolean hasAllAppsContainer() {
      return containerCase_ == 4;
    }
    /**
     * <code>optional .AllAppsContainer all_apps_container = 4;</code>
     */
    public com.android.launcher3.logger.LauncherAtom.AllAppsContainer getAllAppsContainer() {
      if (containerCase_ == 4) {
         return (com.android.launcher3.logger.LauncherAtom.AllAppsContainer) container_;
      }
      return com.android.launcher3.logger.LauncherAtom.AllAppsContainer.getDefaultInstance();
    }
    /**
     * <code>optional .AllAppsContainer all_apps_container = 4;</code>
     */
    private void setAllAppsContainer(com.android.launcher3.logger.LauncherAtom.AllAppsContainer value) {
      if (value == null) {
        throw new NullPointerException();
      }
      container_ = value;
      containerCase_ = 4;
    }
    /**
     * <code>optional .AllAppsContainer all_apps_container = 4;</code>
     */
    private void setAllAppsContainer(
        com.android.launcher3.logger.LauncherAtom.AllAppsContainer.Builder builderForValue) {
      container_ = builderForValue.build();
      containerCase_ = 4;
    }
    /**
     * <code>optional .AllAppsContainer all_apps_container = 4;</code>
     */
    private void mergeAllAppsContainer(com.android.launcher3.logger.LauncherAtom.AllAppsContainer value) {
      if (containerCase_ == 4 &&
          container_ != com.android.launcher3.logger.LauncherAtom.AllAppsContainer.getDefaultInstance()) {
        container_ = com.android.launcher3.logger.LauncherAtom.AllAppsContainer.newBuilder((com.android.launcher3.logger.LauncherAtom.AllAppsContainer) container_)
            .mergeFrom(value).buildPartial();
      } else {
        container_ = value;
      }
      containerCase_ = 4;
    }
    /**
     * <code>optional .AllAppsContainer all_apps_container = 4;</code>
     */
    private void clearAllAppsContainer() {
      if (containerCase_ == 4) {
        containerCase_ = 0;
        container_ = null;
      }
    }

    public static final int WIDGETS_CONTAINER_FIELD_NUMBER = 5;
    /**
     * <code>optional .WidgetsContainer widgets_container = 5;</code>
     */
    public boolean hasWidgetsContainer() {
      return containerCase_ == 5;
    }
    /**
     * <code>optional .WidgetsContainer widgets_container = 5;</code>
     */
    public com.android.launcher3.logger.LauncherAtom.WidgetsContainer getWidgetsContainer() {
      if (containerCase_ == 5) {
         return (com.android.launcher3.logger.LauncherAtom.WidgetsContainer) container_;
      }
      return com.android.launcher3.logger.LauncherAtom.WidgetsContainer.getDefaultInstance();
    }
    /**
     * <code>optional .WidgetsContainer widgets_container = 5;</code>
     */
    private void setWidgetsContainer(com.android.launcher3.logger.LauncherAtom.WidgetsContainer value) {
      if (value == null) {
        throw new NullPointerException();
      }
      container_ = value;
      containerCase_ = 5;
    }
    /**
     * <code>optional .WidgetsContainer widgets_container = 5;</code>
     */
    private void setWidgetsContainer(
        com.android.launcher3.logger.LauncherAtom.WidgetsContainer.Builder builderForValue) {
      container_ = builderForValue.build();
      containerCase_ = 5;
    }
    /**
     * <code>optional .WidgetsContainer widgets_container = 5;</code>
     */
    private void mergeWidgetsContainer(com.android.launcher3.logger.LauncherAtom.WidgetsContainer value) {
      if (containerCase_ == 5 &&
          container_ != com.android.launcher3.logger.LauncherAtom.WidgetsContainer.getDefaultInstance()) {
        container_ = com.android.launcher3.logger.LauncherAtom.WidgetsContainer.newBuilder((com.android.launcher3.logger.LauncherAtom.WidgetsContainer) container_)
            .mergeFrom(value).buildPartial();
      } else {
        container_ = value;
      }
      containerCase_ = 5;
    }
    /**
     * <code>optional .WidgetsContainer widgets_container = 5;</code>
     */
    private void clearWidgetsContainer() {
      if (containerCase_ == 5) {
        containerCase_ = 0;
        container_ = null;
      }
    }

    public static final int PREDICTION_CONTAINER_FIELD_NUMBER = 6;
    /**
     * <code>optional .PredictionContainer prediction_container = 6;</code>
     */
    public boolean hasPredictionContainer() {
      return containerCase_ == 6;
    }
    /**
     * <code>optional .PredictionContainer prediction_container = 6;</code>
     */
    public com.android.launcher3.logger.LauncherAtom.PredictionContainer getPredictionContainer() {
      if (containerCase_ == 6) {
         return (com.android.launcher3.logger.LauncherAtom.PredictionContainer) container_;
      }
      return com.android.launcher3.logger.LauncherAtom.PredictionContainer.getDefaultInstance();
    }
    /**
     * <code>optional .PredictionContainer prediction_container = 6;</code>
     */
    private void setPredictionContainer(com.android.launcher3.logger.LauncherAtom.PredictionContainer value) {
      if (value == null) {
        throw new NullPointerException();
      }
      container_ = value;
      containerCase_ = 6;
    }
    /**
     * <code>optional .PredictionContainer prediction_container = 6;</code>
     */
    private void setPredictionContainer(
        com.android.launcher3.logger.LauncherAtom.PredictionContainer.Builder builderForValue) {
      container_ = builderForValue.build();
      containerCase_ = 6;
    }
    /**
     * <code>optional .PredictionContainer prediction_container = 6;</code>
     */
    private void mergePredictionContainer(com.android.launcher3.logger.LauncherAtom.PredictionContainer value) {
      if (containerCase_ == 6 &&
          container_ != com.android.launcher3.logger.LauncherAtom.PredictionContainer.getDefaultInstance()) {
        container_ = com.android.launcher3.logger.LauncherAtom.PredictionContainer.newBuilder((com.android.launcher3.logger.LauncherAtom.PredictionContainer) container_)
            .mergeFrom(value).buildPartial();
      } else {
        container_ = value;
      }
      containerCase_ = 6;
    }
    /**
     * <code>optional .PredictionContainer prediction_container = 6;</code>
     */
    private void clearPredictionContainer() {
      if (containerCase_ == 6) {
        containerCase_ = 0;
        container_ = null;
      }
    }

    public static final int SEARCH_RESULT_CONTAINER_FIELD_NUMBER = 7;
    /**
     * <code>optional .SearchResultContainer search_result_container = 7;</code>
     */
    public boolean hasSearchResultContainer() {
      return containerCase_ == 7;
    }
    /**
     * <code>optional .SearchResultContainer search_result_container = 7;</code>
     */
    public com.android.launcher3.logger.LauncherAtom.SearchResultContainer getSearchResultContainer() {
      if (containerCase_ == 7) {
         return (com.android.launcher3.logger.LauncherAtom.SearchResultContainer) container_;
      }
      return com.android.launcher3.logger.LauncherAtom.SearchResultContainer.getDefaultInstance();
    }
    /**
     * <code>optional .SearchResultContainer search_result_container = 7;</code>
     */
    private void setSearchResultContainer(com.android.launcher3.logger.LauncherAtom.SearchResultContainer value) {
      if (value == null) {
        throw new NullPointerException();
      }
      container_ = value;
      containerCase_ = 7;
    }
    /**
     * <code>optional .SearchResultContainer search_result_container = 7;</code>
     */
    private void setSearchResultContainer(
        com.android.launcher3.logger.LauncherAtom.SearchResultContainer.Builder builderForValue) {
      container_ = builderForValue.build();
      containerCase_ = 7;
    }
    /**
     * <code>optional .SearchResultContainer search_result_container = 7;</code>
     */
    private void mergeSearchResultContainer(com.android.launcher3.logger.LauncherAtom.SearchResultContainer value) {
      if (containerCase_ == 7 &&
          container_ != com.android.launcher3.logger.LauncherAtom.SearchResultContainer.getDefaultInstance()) {
        container_ = com.android.launcher3.logger.LauncherAtom.SearchResultContainer.newBuilder((com.android.launcher3.logger.LauncherAtom.SearchResultContainer) container_)
            .mergeFrom(value).buildPartial();
      } else {
        container_ = value;
      }
      containerCase_ = 7;
    }
    /**
     * <code>optional .SearchResultContainer search_result_container = 7;</code>
     */
    private void clearSearchResultContainer() {
      if (containerCase_ == 7) {
        containerCase_ = 0;
        container_ = null;
      }
    }

    public static final int SHORTCUTS_CONTAINER_FIELD_NUMBER = 8;
    /**
     * <code>optional .ShortcutsContainer shortcuts_container = 8;</code>
     */
    public boolean hasShortcutsContainer() {
      return containerCase_ == 8;
    }
    /**
     * <code>optional .ShortcutsContainer shortcuts_container = 8;</code>
     */
    public com.android.launcher3.logger.LauncherAtom.ShortcutsContainer getShortcutsContainer() {
      if (containerCase_ == 8) {
         return (com.android.launcher3.logger.LauncherAtom.ShortcutsContainer) container_;
      }
      return com.android.launcher3.logger.LauncherAtom.ShortcutsContainer.getDefaultInstance();
    }
    /**
     * <code>optional .ShortcutsContainer shortcuts_container = 8;</code>
     */
    private void setShortcutsContainer(com.android.launcher3.logger.LauncherAtom.ShortcutsContainer value) {
      if (value == null) {
        throw new NullPointerException();
      }
      container_ = value;
      containerCase_ = 8;
    }
    /**
     * <code>optional .ShortcutsContainer shortcuts_container = 8;</code>
     */
    private void setShortcutsContainer(
        com.android.launcher3.logger.LauncherAtom.ShortcutsContainer.Builder builderForValue) {
      container_ = builderForValue.build();
      containerCase_ = 8;
    }
    /**
     * <code>optional .ShortcutsContainer shortcuts_container = 8;</code>
     */
    private void mergeShortcutsContainer(com.android.launcher3.logger.LauncherAtom.ShortcutsContainer value) {
      if (containerCase_ == 8 &&
          container_ != com.android.launcher3.logger.LauncherAtom.ShortcutsContainer.getDefaultInstance()) {
        container_ = com.android.launcher3.logger.LauncherAtom.ShortcutsContainer.newBuilder((com.android.launcher3.logger.LauncherAtom.ShortcutsContainer) container_)
            .mergeFrom(value).buildPartial();
      } else {
        container_ = value;
      }
      containerCase_ = 8;
    }
    /**
     * <code>optional .ShortcutsContainer shortcuts_container = 8;</code>
     */
    private void clearShortcutsContainer() {
      if (containerCase_ == 8) {
        containerCase_ = 0;
        container_ = null;
      }
    }

    public static final int SETTINGS_CONTAINER_FIELD_NUMBER = 9;
    /**
     * <code>optional .SettingsContainer settings_container = 9;</code>
     */
    public boolean hasSettingsContainer() {
      return containerCase_ == 9;
    }
    /**
     * <code>optional .SettingsContainer settings_container = 9;</code>
     */
    public com.android.launcher3.logger.LauncherAtom.SettingsContainer getSettingsContainer() {
      if (containerCase_ == 9) {
         return (com.android.launcher3.logger.LauncherAtom.SettingsContainer) container_;
      }
      return com.android.launcher3.logger.LauncherAtom.SettingsContainer.getDefaultInstance();
    }
    /**
     * <code>optional .SettingsContainer settings_container = 9;</code>
     */
    private void setSettingsContainer(com.android.launcher3.logger.LauncherAtom.SettingsContainer value) {
      if (value == null) {
        throw new NullPointerException();
      }
      container_ = value;
      containerCase_ = 9;
    }
    /**
     * <code>optional .SettingsContainer settings_container = 9;</code>
     */
    private void setSettingsContainer(
        com.android.launcher3.logger.LauncherAtom.SettingsContainer.Builder builderForValue) {
      container_ = builderForValue.build();
      containerCase_ = 9;
    }
    /**
     * <code>optional .SettingsContainer settings_container = 9;</code>
     */
    private void mergeSettingsContainer(com.android.launcher3.logger.LauncherAtom.SettingsContainer value) {
      if (containerCase_ == 9 &&
          container_ != com.android.launcher3.logger.LauncherAtom.SettingsContainer.getDefaultInstance()) {
        container_ = com.android.launcher3.logger.LauncherAtom.SettingsContainer.newBuilder((com.android.launcher3.logger.LauncherAtom.SettingsContainer) container_)
            .mergeFrom(value).buildPartial();
      } else {
        container_ = value;
      }
      containerCase_ = 9;
    }
    /**
     * <code>optional .SettingsContainer settings_container = 9;</code>
     */
    private void clearSettingsContainer() {
      if (containerCase_ == 9) {
        containerCase_ = 0;
        container_ = null;
      }
    }

    public static final int PREDICTED_HOTSEAT_CONTAINER_FIELD_NUMBER = 10;
    /**
     * <code>optional .PredictedHotseatContainer predicted_hotseat_container = 10;</code>
     */
    public boolean hasPredictedHotseatContainer() {
      return containerCase_ == 10;
    }
    /**
     * <code>optional .PredictedHotseatContainer predicted_hotseat_container = 10;</code>
     */
    public com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer getPredictedHotseatContainer() {
      if (containerCase_ == 10) {
         return (com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer) container_;
      }
      return com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer.getDefaultInstance();
    }
    /**
     * <code>optional .PredictedHotseatContainer predicted_hotseat_container = 10;</code>
     */
    private void setPredictedHotseatContainer(com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer value) {
      if (value == null) {
        throw new NullPointerException();
      }
      container_ = value;
      containerCase_ = 10;
    }
    /**
     * <code>optional .PredictedHotseatContainer predicted_hotseat_container = 10;</code>
     */
    private void setPredictedHotseatContainer(
        com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer.Builder builderForValue) {
      container_ = builderForValue.build();
      containerCase_ = 10;
    }
    /**
     * <code>optional .PredictedHotseatContainer predicted_hotseat_container = 10;</code>
     */
    private void mergePredictedHotseatContainer(com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer value) {
      if (containerCase_ == 10 &&
          container_ != com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer.getDefaultInstance()) {
        container_ = com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer.newBuilder((com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer) container_)
            .mergeFrom(value).buildPartial();
      } else {
        container_ = value;
      }
      containerCase_ = 10;
    }
    /**
     * <code>optional .PredictedHotseatContainer predicted_hotseat_container = 10;</code>
     */
    private void clearPredictedHotseatContainer() {
      if (containerCase_ == 10) {
        containerCase_ = 0;
        container_ = null;
      }
    }

    public static final int TASK_SWITCHER_CONTAINER_FIELD_NUMBER = 11;
    /**
     * <code>optional .TaskSwitcherContainer task_switcher_container = 11;</code>
     */
    public boolean hasTaskSwitcherContainer() {
      return containerCase_ == 11;
    }
    /**
     * <code>optional .TaskSwitcherContainer task_switcher_container = 11;</code>
     */
    public com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer getTaskSwitcherContainer() {
      if (containerCase_ == 11) {
         return (com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer) container_;
      }
      return com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer.getDefaultInstance();
    }
    /**
     * <code>optional .TaskSwitcherContainer task_switcher_container = 11;</code>
     */
    private void setTaskSwitcherContainer(com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer value) {
      if (value == null) {
        throw new NullPointerException();
      }
      container_ = value;
      containerCase_ = 11;
    }
    /**
     * <code>optional .TaskSwitcherContainer task_switcher_container = 11;</code>
     */
    private void setTaskSwitcherContainer(
        com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer.Builder builderForValue) {
      container_ = builderForValue.build();
      containerCase_ = 11;
    }
    /**
     * <code>optional .TaskSwitcherContainer task_switcher_container = 11;</code>
     */
    private void mergeTaskSwitcherContainer(com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer value) {
      if (containerCase_ == 11 &&
          container_ != com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer.getDefaultInstance()) {
        container_ = com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer.newBuilder((com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer) container_)
            .mergeFrom(value).buildPartial();
      } else {
        container_ = value;
      }
      containerCase_ = 11;
    }
    /**
     * <code>optional .TaskSwitcherContainer task_switcher_container = 11;</code>
     */
    private void clearTaskSwitcherContainer() {
      if (containerCase_ == 11) {
        containerCase_ = 0;
        container_ = null;
      }
    }

    public static final int TASK_FOREGROUND_CONTAINER_FIELD_NUMBER = 12;
    /**
     * <code>optional .TaskForegroundContainer task_foreground_container = 12;</code>
     */
    public boolean hasTaskForegroundContainer() {
      return containerCase_ == 12;
    }
    /**
     * <code>optional .TaskForegroundContainer task_foreground_container = 12;</code>
     */
    public com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer getTaskForegroundContainer() {
      if (containerCase_ == 12) {
         return (com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer) container_;
      }
      return com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer.getDefaultInstance();
    }
    /**
     * <code>optional .TaskForegroundContainer task_foreground_container = 12;</code>
     */
    private void setTaskForegroundContainer(com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer value) {
      if (value == null) {
        throw new NullPointerException();
      }
      container_ = value;
      containerCase_ = 12;
    }
    /**
     * <code>optional .TaskForegroundContainer task_foreground_container = 12;</code>
     */
    private void setTaskForegroundContainer(
        com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer.Builder builderForValue) {
      container_ = builderForValue.build();
      containerCase_ = 12;
    }
    /**
     * <code>optional .TaskForegroundContainer task_foreground_container = 12;</code>
     */
    private void mergeTaskForegroundContainer(com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer value) {
      if (containerCase_ == 12 &&
          container_ != com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer.getDefaultInstance()) {
        container_ = com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer.newBuilder((com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer) container_)
            .mergeFrom(value).buildPartial();
      } else {
        container_ = value;
      }
      containerCase_ = 12;
    }
    /**
     * <code>optional .TaskForegroundContainer task_foreground_container = 12;</code>
     */
    private void clearTaskForegroundContainer() {
      if (containerCase_ == 12) {
        containerCase_ = 0;
        container_ = null;
      }
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (containerCase_ == 1) {
        output.writeMessage(1, (com.android.launcher3.logger.LauncherAtom.WorkspaceContainer) container_);
      }
      if (containerCase_ == 2) {
        output.writeMessage(2, (com.android.launcher3.logger.LauncherAtom.HotseatContainer) container_);
      }
      if (containerCase_ == 3) {
        output.writeMessage(3, (com.android.launcher3.logger.LauncherAtom.FolderContainer) container_);
      }
      if (containerCase_ == 4) {
        output.writeMessage(4, (com.android.launcher3.logger.LauncherAtom.AllAppsContainer) container_);
      }
      if (containerCase_ == 5) {
        output.writeMessage(5, (com.android.launcher3.logger.LauncherAtom.WidgetsContainer) container_);
      }
      if (containerCase_ == 6) {
        output.writeMessage(6, (com.android.launcher3.logger.LauncherAtom.PredictionContainer) container_);
      }
      if (containerCase_ == 7) {
        output.writeMessage(7, (com.android.launcher3.logger.LauncherAtom.SearchResultContainer) container_);
      }
      if (containerCase_ == 8) {
        output.writeMessage(8, (com.android.launcher3.logger.LauncherAtom.ShortcutsContainer) container_);
      }
      if (containerCase_ == 9) {
        output.writeMessage(9, (com.android.launcher3.logger.LauncherAtom.SettingsContainer) container_);
      }
      if (containerCase_ == 10) {
        output.writeMessage(10, (com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer) container_);
      }
      if (containerCase_ == 11) {
        output.writeMessage(11, (com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer) container_);
      }
      if (containerCase_ == 12) {
        output.writeMessage(12, (com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer) container_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (containerCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.android.launcher3.logger.LauncherAtom.WorkspaceContainer) container_);
      }
      if (containerCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.android.launcher3.logger.LauncherAtom.HotseatContainer) container_);
      }
      if (containerCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.android.launcher3.logger.LauncherAtom.FolderContainer) container_);
      }
      if (containerCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (com.android.launcher3.logger.LauncherAtom.AllAppsContainer) container_);
      }
      if (containerCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (com.android.launcher3.logger.LauncherAtom.WidgetsContainer) container_);
      }
      if (containerCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (com.android.launcher3.logger.LauncherAtom.PredictionContainer) container_);
      }
      if (containerCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (com.android.launcher3.logger.LauncherAtom.SearchResultContainer) container_);
      }
      if (containerCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (com.android.launcher3.logger.LauncherAtom.ShortcutsContainer) container_);
      }
      if (containerCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (com.android.launcher3.logger.LauncherAtom.SettingsContainer) container_);
      }
      if (containerCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer) container_);
      }
      if (containerCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer) container_);
      }
      if (containerCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, (com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer) container_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.android.launcher3.logger.LauncherAtom.ContainerInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.ContainerInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.ContainerInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.ContainerInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.ContainerInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.ContainerInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.ContainerInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.ContainerInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.ContainerInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.ContainerInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.launcher3.logger.LauncherAtom.ContainerInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Represents various launcher surface where items are placed.
     * </pre>
     *
     * Protobuf type {@code ContainerInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.android.launcher3.logger.LauncherAtom.ContainerInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:ContainerInfo)
        com.android.launcher3.logger.LauncherAtom.ContainerInfoOrBuilder {
      // Construct using com.android.launcher3.logger.LauncherAtom.ContainerInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      public ContainerCase
          getContainerCase() {
        return instance.getContainerCase();
      }

      public Builder clearContainer() {
        copyOnWrite();
        instance.clearContainer();
        return this;
      }


      /**
       * <code>optional .WorkspaceContainer workspace = 1;</code>
       */
      public boolean hasWorkspace() {
        return instance.hasWorkspace();
      }
      /**
       * <code>optional .WorkspaceContainer workspace = 1;</code>
       */
      public com.android.launcher3.logger.LauncherAtom.WorkspaceContainer getWorkspace() {
        return instance.getWorkspace();
      }
      /**
       * <code>optional .WorkspaceContainer workspace = 1;</code>
       */
      public Builder setWorkspace(com.android.launcher3.logger.LauncherAtom.WorkspaceContainer value) {
        copyOnWrite();
        instance.setWorkspace(value);
        return this;
      }
      /**
       * <code>optional .WorkspaceContainer workspace = 1;</code>
       */
      public Builder setWorkspace(
          com.android.launcher3.logger.LauncherAtom.WorkspaceContainer.Builder builderForValue) {
        copyOnWrite();
        instance.setWorkspace(builderForValue);
        return this;
      }
      /**
       * <code>optional .WorkspaceContainer workspace = 1;</code>
       */
      public Builder mergeWorkspace(com.android.launcher3.logger.LauncherAtom.WorkspaceContainer value) {
        copyOnWrite();
        instance.mergeWorkspace(value);
        return this;
      }
      /**
       * <code>optional .WorkspaceContainer workspace = 1;</code>
       */
      public Builder clearWorkspace() {
        copyOnWrite();
        instance.clearWorkspace();
        return this;
      }

      /**
       * <code>optional .HotseatContainer hotseat = 2;</code>
       */
      public boolean hasHotseat() {
        return instance.hasHotseat();
      }
      /**
       * <code>optional .HotseatContainer hotseat = 2;</code>
       */
      public com.android.launcher3.logger.LauncherAtom.HotseatContainer getHotseat() {
        return instance.getHotseat();
      }
      /**
       * <code>optional .HotseatContainer hotseat = 2;</code>
       */
      public Builder setHotseat(com.android.launcher3.logger.LauncherAtom.HotseatContainer value) {
        copyOnWrite();
        instance.setHotseat(value);
        return this;
      }
      /**
       * <code>optional .HotseatContainer hotseat = 2;</code>
       */
      public Builder setHotseat(
          com.android.launcher3.logger.LauncherAtom.HotseatContainer.Builder builderForValue) {
        copyOnWrite();
        instance.setHotseat(builderForValue);
        return this;
      }
      /**
       * <code>optional .HotseatContainer hotseat = 2;</code>
       */
      public Builder mergeHotseat(com.android.launcher3.logger.LauncherAtom.HotseatContainer value) {
        copyOnWrite();
        instance.mergeHotseat(value);
        return this;
      }
      /**
       * <code>optional .HotseatContainer hotseat = 2;</code>
       */
      public Builder clearHotseat() {
        copyOnWrite();
        instance.clearHotseat();
        return this;
      }

      /**
       * <code>optional .FolderContainer folder = 3;</code>
       */
      public boolean hasFolder() {
        return instance.hasFolder();
      }
      /**
       * <code>optional .FolderContainer folder = 3;</code>
       */
      public com.android.launcher3.logger.LauncherAtom.FolderContainer getFolder() {
        return instance.getFolder();
      }
      /**
       * <code>optional .FolderContainer folder = 3;</code>
       */
      public Builder setFolder(com.android.launcher3.logger.LauncherAtom.FolderContainer value) {
        copyOnWrite();
        instance.setFolder(value);
        return this;
      }
      /**
       * <code>optional .FolderContainer folder = 3;</code>
       */
      public Builder setFolder(
          com.android.launcher3.logger.LauncherAtom.FolderContainer.Builder builderForValue) {
        copyOnWrite();
        instance.setFolder(builderForValue);
        return this;
      }
      /**
       * <code>optional .FolderContainer folder = 3;</code>
       */
      public Builder mergeFolder(com.android.launcher3.logger.LauncherAtom.FolderContainer value) {
        copyOnWrite();
        instance.mergeFolder(value);
        return this;
      }
      /**
       * <code>optional .FolderContainer folder = 3;</code>
       */
      public Builder clearFolder() {
        copyOnWrite();
        instance.clearFolder();
        return this;
      }

      /**
       * <code>optional .AllAppsContainer all_apps_container = 4;</code>
       */
      public boolean hasAllAppsContainer() {
        return instance.hasAllAppsContainer();
      }
      /**
       * <code>optional .AllAppsContainer all_apps_container = 4;</code>
       */
      public com.android.launcher3.logger.LauncherAtom.AllAppsContainer getAllAppsContainer() {
        return instance.getAllAppsContainer();
      }
      /**
       * <code>optional .AllAppsContainer all_apps_container = 4;</code>
       */
      public Builder setAllAppsContainer(com.android.launcher3.logger.LauncherAtom.AllAppsContainer value) {
        copyOnWrite();
        instance.setAllAppsContainer(value);
        return this;
      }
      /**
       * <code>optional .AllAppsContainer all_apps_container = 4;</code>
       */
      public Builder setAllAppsContainer(
          com.android.launcher3.logger.LauncherAtom.AllAppsContainer.Builder builderForValue) {
        copyOnWrite();
        instance.setAllAppsContainer(builderForValue);
        return this;
      }
      /**
       * <code>optional .AllAppsContainer all_apps_container = 4;</code>
       */
      public Builder mergeAllAppsContainer(com.android.launcher3.logger.LauncherAtom.AllAppsContainer value) {
        copyOnWrite();
        instance.mergeAllAppsContainer(value);
        return this;
      }
      /**
       * <code>optional .AllAppsContainer all_apps_container = 4;</code>
       */
      public Builder clearAllAppsContainer() {
        copyOnWrite();
        instance.clearAllAppsContainer();
        return this;
      }

      /**
       * <code>optional .WidgetsContainer widgets_container = 5;</code>
       */
      public boolean hasWidgetsContainer() {
        return instance.hasWidgetsContainer();
      }
      /**
       * <code>optional .WidgetsContainer widgets_container = 5;</code>
       */
      public com.android.launcher3.logger.LauncherAtom.WidgetsContainer getWidgetsContainer() {
        return instance.getWidgetsContainer();
      }
      /**
       * <code>optional .WidgetsContainer widgets_container = 5;</code>
       */
      public Builder setWidgetsContainer(com.android.launcher3.logger.LauncherAtom.WidgetsContainer value) {
        copyOnWrite();
        instance.setWidgetsContainer(value);
        return this;
      }
      /**
       * <code>optional .WidgetsContainer widgets_container = 5;</code>
       */
      public Builder setWidgetsContainer(
          com.android.launcher3.logger.LauncherAtom.WidgetsContainer.Builder builderForValue) {
        copyOnWrite();
        instance.setWidgetsContainer(builderForValue);
        return this;
      }
      /**
       * <code>optional .WidgetsContainer widgets_container = 5;</code>
       */
      public Builder mergeWidgetsContainer(com.android.launcher3.logger.LauncherAtom.WidgetsContainer value) {
        copyOnWrite();
        instance.mergeWidgetsContainer(value);
        return this;
      }
      /**
       * <code>optional .WidgetsContainer widgets_container = 5;</code>
       */
      public Builder clearWidgetsContainer() {
        copyOnWrite();
        instance.clearWidgetsContainer();
        return this;
      }

      /**
       * <code>optional .PredictionContainer prediction_container = 6;</code>
       */
      public boolean hasPredictionContainer() {
        return instance.hasPredictionContainer();
      }
      /**
       * <code>optional .PredictionContainer prediction_container = 6;</code>
       */
      public com.android.launcher3.logger.LauncherAtom.PredictionContainer getPredictionContainer() {
        return instance.getPredictionContainer();
      }
      /**
       * <code>optional .PredictionContainer prediction_container = 6;</code>
       */
      public Builder setPredictionContainer(com.android.launcher3.logger.LauncherAtom.PredictionContainer value) {
        copyOnWrite();
        instance.setPredictionContainer(value);
        return this;
      }
      /**
       * <code>optional .PredictionContainer prediction_container = 6;</code>
       */
      public Builder setPredictionContainer(
          com.android.launcher3.logger.LauncherAtom.PredictionContainer.Builder builderForValue) {
        copyOnWrite();
        instance.setPredictionContainer(builderForValue);
        return this;
      }
      /**
       * <code>optional .PredictionContainer prediction_container = 6;</code>
       */
      public Builder mergePredictionContainer(com.android.launcher3.logger.LauncherAtom.PredictionContainer value) {
        copyOnWrite();
        instance.mergePredictionContainer(value);
        return this;
      }
      /**
       * <code>optional .PredictionContainer prediction_container = 6;</code>
       */
      public Builder clearPredictionContainer() {
        copyOnWrite();
        instance.clearPredictionContainer();
        return this;
      }

      /**
       * <code>optional .SearchResultContainer search_result_container = 7;</code>
       */
      public boolean hasSearchResultContainer() {
        return instance.hasSearchResultContainer();
      }
      /**
       * <code>optional .SearchResultContainer search_result_container = 7;</code>
       */
      public com.android.launcher3.logger.LauncherAtom.SearchResultContainer getSearchResultContainer() {
        return instance.getSearchResultContainer();
      }
      /**
       * <code>optional .SearchResultContainer search_result_container = 7;</code>
       */
      public Builder setSearchResultContainer(com.android.launcher3.logger.LauncherAtom.SearchResultContainer value) {
        copyOnWrite();
        instance.setSearchResultContainer(value);
        return this;
      }
      /**
       * <code>optional .SearchResultContainer search_result_container = 7;</code>
       */
      public Builder setSearchResultContainer(
          com.android.launcher3.logger.LauncherAtom.SearchResultContainer.Builder builderForValue) {
        copyOnWrite();
        instance.setSearchResultContainer(builderForValue);
        return this;
      }
      /**
       * <code>optional .SearchResultContainer search_result_container = 7;</code>
       */
      public Builder mergeSearchResultContainer(com.android.launcher3.logger.LauncherAtom.SearchResultContainer value) {
        copyOnWrite();
        instance.mergeSearchResultContainer(value);
        return this;
      }
      /**
       * <code>optional .SearchResultContainer search_result_container = 7;</code>
       */
      public Builder clearSearchResultContainer() {
        copyOnWrite();
        instance.clearSearchResultContainer();
        return this;
      }

      /**
       * <code>optional .ShortcutsContainer shortcuts_container = 8;</code>
       */
      public boolean hasShortcutsContainer() {
        return instance.hasShortcutsContainer();
      }
      /**
       * <code>optional .ShortcutsContainer shortcuts_container = 8;</code>
       */
      public com.android.launcher3.logger.LauncherAtom.ShortcutsContainer getShortcutsContainer() {
        return instance.getShortcutsContainer();
      }
      /**
       * <code>optional .ShortcutsContainer shortcuts_container = 8;</code>
       */
      public Builder setShortcutsContainer(com.android.launcher3.logger.LauncherAtom.ShortcutsContainer value) {
        copyOnWrite();
        instance.setShortcutsContainer(value);
        return this;
      }
      /**
       * <code>optional .ShortcutsContainer shortcuts_container = 8;</code>
       */
      public Builder setShortcutsContainer(
          com.android.launcher3.logger.LauncherAtom.ShortcutsContainer.Builder builderForValue) {
        copyOnWrite();
        instance.setShortcutsContainer(builderForValue);
        return this;
      }
      /**
       * <code>optional .ShortcutsContainer shortcuts_container = 8;</code>
       */
      public Builder mergeShortcutsContainer(com.android.launcher3.logger.LauncherAtom.ShortcutsContainer value) {
        copyOnWrite();
        instance.mergeShortcutsContainer(value);
        return this;
      }
      /**
       * <code>optional .ShortcutsContainer shortcuts_container = 8;</code>
       */
      public Builder clearShortcutsContainer() {
        copyOnWrite();
        instance.clearShortcutsContainer();
        return this;
      }

      /**
       * <code>optional .SettingsContainer settings_container = 9;</code>
       */
      public boolean hasSettingsContainer() {
        return instance.hasSettingsContainer();
      }
      /**
       * <code>optional .SettingsContainer settings_container = 9;</code>
       */
      public com.android.launcher3.logger.LauncherAtom.SettingsContainer getSettingsContainer() {
        return instance.getSettingsContainer();
      }
      /**
       * <code>optional .SettingsContainer settings_container = 9;</code>
       */
      public Builder setSettingsContainer(com.android.launcher3.logger.LauncherAtom.SettingsContainer value) {
        copyOnWrite();
        instance.setSettingsContainer(value);
        return this;
      }
      /**
       * <code>optional .SettingsContainer settings_container = 9;</code>
       */
      public Builder setSettingsContainer(
          com.android.launcher3.logger.LauncherAtom.SettingsContainer.Builder builderForValue) {
        copyOnWrite();
        instance.setSettingsContainer(builderForValue);
        return this;
      }
      /**
       * <code>optional .SettingsContainer settings_container = 9;</code>
       */
      public Builder mergeSettingsContainer(com.android.launcher3.logger.LauncherAtom.SettingsContainer value) {
        copyOnWrite();
        instance.mergeSettingsContainer(value);
        return this;
      }
      /**
       * <code>optional .SettingsContainer settings_container = 9;</code>
       */
      public Builder clearSettingsContainer() {
        copyOnWrite();
        instance.clearSettingsContainer();
        return this;
      }

      /**
       * <code>optional .PredictedHotseatContainer predicted_hotseat_container = 10;</code>
       */
      public boolean hasPredictedHotseatContainer() {
        return instance.hasPredictedHotseatContainer();
      }
      /**
       * <code>optional .PredictedHotseatContainer predicted_hotseat_container = 10;</code>
       */
      public com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer getPredictedHotseatContainer() {
        return instance.getPredictedHotseatContainer();
      }
      /**
       * <code>optional .PredictedHotseatContainer predicted_hotseat_container = 10;</code>
       */
      public Builder setPredictedHotseatContainer(com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer value) {
        copyOnWrite();
        instance.setPredictedHotseatContainer(value);
        return this;
      }
      /**
       * <code>optional .PredictedHotseatContainer predicted_hotseat_container = 10;</code>
       */
      public Builder setPredictedHotseatContainer(
          com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer.Builder builderForValue) {
        copyOnWrite();
        instance.setPredictedHotseatContainer(builderForValue);
        return this;
      }
      /**
       * <code>optional .PredictedHotseatContainer predicted_hotseat_container = 10;</code>
       */
      public Builder mergePredictedHotseatContainer(com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer value) {
        copyOnWrite();
        instance.mergePredictedHotseatContainer(value);
        return this;
      }
      /**
       * <code>optional .PredictedHotseatContainer predicted_hotseat_container = 10;</code>
       */
      public Builder clearPredictedHotseatContainer() {
        copyOnWrite();
        instance.clearPredictedHotseatContainer();
        return this;
      }

      /**
       * <code>optional .TaskSwitcherContainer task_switcher_container = 11;</code>
       */
      public boolean hasTaskSwitcherContainer() {
        return instance.hasTaskSwitcherContainer();
      }
      /**
       * <code>optional .TaskSwitcherContainer task_switcher_container = 11;</code>
       */
      public com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer getTaskSwitcherContainer() {
        return instance.getTaskSwitcherContainer();
      }
      /**
       * <code>optional .TaskSwitcherContainer task_switcher_container = 11;</code>
       */
      public Builder setTaskSwitcherContainer(com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer value) {
        copyOnWrite();
        instance.setTaskSwitcherContainer(value);
        return this;
      }
      /**
       * <code>optional .TaskSwitcherContainer task_switcher_container = 11;</code>
       */
      public Builder setTaskSwitcherContainer(
          com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer.Builder builderForValue) {
        copyOnWrite();
        instance.setTaskSwitcherContainer(builderForValue);
        return this;
      }
      /**
       * <code>optional .TaskSwitcherContainer task_switcher_container = 11;</code>
       */
      public Builder mergeTaskSwitcherContainer(com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer value) {
        copyOnWrite();
        instance.mergeTaskSwitcherContainer(value);
        return this;
      }
      /**
       * <code>optional .TaskSwitcherContainer task_switcher_container = 11;</code>
       */
      public Builder clearTaskSwitcherContainer() {
        copyOnWrite();
        instance.clearTaskSwitcherContainer();
        return this;
      }

      /**
       * <code>optional .TaskForegroundContainer task_foreground_container = 12;</code>
       */
      public boolean hasTaskForegroundContainer() {
        return instance.hasTaskForegroundContainer();
      }
      /**
       * <code>optional .TaskForegroundContainer task_foreground_container = 12;</code>
       */
      public com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer getTaskForegroundContainer() {
        return instance.getTaskForegroundContainer();
      }
      /**
       * <code>optional .TaskForegroundContainer task_foreground_container = 12;</code>
       */
      public Builder setTaskForegroundContainer(com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer value) {
        copyOnWrite();
        instance.setTaskForegroundContainer(value);
        return this;
      }
      /**
       * <code>optional .TaskForegroundContainer task_foreground_container = 12;</code>
       */
      public Builder setTaskForegroundContainer(
          com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer.Builder builderForValue) {
        copyOnWrite();
        instance.setTaskForegroundContainer(builderForValue);
        return this;
      }
      /**
       * <code>optional .TaskForegroundContainer task_foreground_container = 12;</code>
       */
      public Builder mergeTaskForegroundContainer(com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer value) {
        copyOnWrite();
        instance.mergeTaskForegroundContainer(value);
        return this;
      }
      /**
       * <code>optional .TaskForegroundContainer task_foreground_container = 12;</code>
       */
      public Builder clearTaskForegroundContainer() {
        copyOnWrite();
        instance.clearTaskForegroundContainer();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ContainerInfo)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.android.launcher3.logger.LauncherAtom.ContainerInfo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.android.launcher3.logger.LauncherAtom.ContainerInfo other = (com.android.launcher3.logger.LauncherAtom.ContainerInfo) arg1;
          switch (other.getContainerCase()) {
            case WORKSPACE: {
              container_ = visitor.visitOneofMessage(
                  containerCase_ == 1,
                  container_,
                  other.container_);
              break;
            }
            case HOTSEAT: {
              container_ = visitor.visitOneofMessage(
                  containerCase_ == 2,
                  container_,
                  other.container_);
              break;
            }
            case FOLDER: {
              container_ = visitor.visitOneofMessage(
                  containerCase_ == 3,
                  container_,
                  other.container_);
              break;
            }
            case ALL_APPS_CONTAINER: {
              container_ = visitor.visitOneofMessage(
                  containerCase_ == 4,
                  container_,
                  other.container_);
              break;
            }
            case WIDGETS_CONTAINER: {
              container_ = visitor.visitOneofMessage(
                  containerCase_ == 5,
                  container_,
                  other.container_);
              break;
            }
            case PREDICTION_CONTAINER: {
              container_ = visitor.visitOneofMessage(
                  containerCase_ == 6,
                  container_,
                  other.container_);
              break;
            }
            case SEARCH_RESULT_CONTAINER: {
              container_ = visitor.visitOneofMessage(
                  containerCase_ == 7,
                  container_,
                  other.container_);
              break;
            }
            case SHORTCUTS_CONTAINER: {
              container_ = visitor.visitOneofMessage(
                  containerCase_ == 8,
                  container_,
                  other.container_);
              break;
            }
            case SETTINGS_CONTAINER: {
              container_ = visitor.visitOneofMessage(
                  containerCase_ == 9,
                  container_,
                  other.container_);
              break;
            }
            case PREDICTED_HOTSEAT_CONTAINER: {
              container_ = visitor.visitOneofMessage(
                  containerCase_ == 10,
                  container_,
                  other.container_);
              break;
            }
            case TASK_SWITCHER_CONTAINER: {
              container_ = visitor.visitOneofMessage(
                  containerCase_ == 11,
                  container_,
                  other.container_);
              break;
            }
            case TASK_FOREGROUND_CONTAINER: {
              container_ = visitor.visitOneofMessage(
                  containerCase_ == 12,
                  container_,
                  other.container_);
              break;
            }
            case CONTAINER_NOT_SET: {
              visitor.visitOneofNotSet(containerCase_ != 0);
              break;
            }
          }
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            if (other.containerCase_ != 0) {
              containerCase_ = other.containerCase_;
            }
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.android.launcher3.logger.LauncherAtom.WorkspaceContainer.Builder subBuilder = null;
                  if (containerCase_ == 1) {
                    subBuilder = ((com.android.launcher3.logger.LauncherAtom.WorkspaceContainer) container_).toBuilder();
                  }
                  container_ =
                       input.readMessage(com.android.launcher3.logger.LauncherAtom.WorkspaceContainer.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.android.launcher3.logger.LauncherAtom.WorkspaceContainer) container_);
                    container_ = subBuilder.buildPartial();
                  }
                  containerCase_ = 1;
                  break;
                }
                case 18: {
                  com.android.launcher3.logger.LauncherAtom.HotseatContainer.Builder subBuilder = null;
                  if (containerCase_ == 2) {
                    subBuilder = ((com.android.launcher3.logger.LauncherAtom.HotseatContainer) container_).toBuilder();
                  }
                  container_ =
                       input.readMessage(com.android.launcher3.logger.LauncherAtom.HotseatContainer.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.android.launcher3.logger.LauncherAtom.HotseatContainer) container_);
                    container_ = subBuilder.buildPartial();
                  }
                  containerCase_ = 2;
                  break;
                }
                case 26: {
                  com.android.launcher3.logger.LauncherAtom.FolderContainer.Builder subBuilder = null;
                  if (containerCase_ == 3) {
                    subBuilder = ((com.android.launcher3.logger.LauncherAtom.FolderContainer) container_).toBuilder();
                  }
                  container_ =
                       input.readMessage(com.android.launcher3.logger.LauncherAtom.FolderContainer.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.android.launcher3.logger.LauncherAtom.FolderContainer) container_);
                    container_ = subBuilder.buildPartial();
                  }
                  containerCase_ = 3;
                  break;
                }
                case 34: {
                  com.android.launcher3.logger.LauncherAtom.AllAppsContainer.Builder subBuilder = null;
                  if (containerCase_ == 4) {
                    subBuilder = ((com.android.launcher3.logger.LauncherAtom.AllAppsContainer) container_).toBuilder();
                  }
                  container_ =
                       input.readMessage(com.android.launcher3.logger.LauncherAtom.AllAppsContainer.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.android.launcher3.logger.LauncherAtom.AllAppsContainer) container_);
                    container_ = subBuilder.buildPartial();
                  }
                  containerCase_ = 4;
                  break;
                }
                case 42: {
                  com.android.launcher3.logger.LauncherAtom.WidgetsContainer.Builder subBuilder = null;
                  if (containerCase_ == 5) {
                    subBuilder = ((com.android.launcher3.logger.LauncherAtom.WidgetsContainer) container_).toBuilder();
                  }
                  container_ =
                       input.readMessage(com.android.launcher3.logger.LauncherAtom.WidgetsContainer.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.android.launcher3.logger.LauncherAtom.WidgetsContainer) container_);
                    container_ = subBuilder.buildPartial();
                  }
                  containerCase_ = 5;
                  break;
                }
                case 50: {
                  com.android.launcher3.logger.LauncherAtom.PredictionContainer.Builder subBuilder = null;
                  if (containerCase_ == 6) {
                    subBuilder = ((com.android.launcher3.logger.LauncherAtom.PredictionContainer) container_).toBuilder();
                  }
                  container_ =
                       input.readMessage(com.android.launcher3.logger.LauncherAtom.PredictionContainer.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.android.launcher3.logger.LauncherAtom.PredictionContainer) container_);
                    container_ = subBuilder.buildPartial();
                  }
                  containerCase_ = 6;
                  break;
                }
                case 58: {
                  com.android.launcher3.logger.LauncherAtom.SearchResultContainer.Builder subBuilder = null;
                  if (containerCase_ == 7) {
                    subBuilder = ((com.android.launcher3.logger.LauncherAtom.SearchResultContainer) container_).toBuilder();
                  }
                  container_ =
                       input.readMessage(com.android.launcher3.logger.LauncherAtom.SearchResultContainer.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.android.launcher3.logger.LauncherAtom.SearchResultContainer) container_);
                    container_ = subBuilder.buildPartial();
                  }
                  containerCase_ = 7;
                  break;
                }
                case 66: {
                  com.android.launcher3.logger.LauncherAtom.ShortcutsContainer.Builder subBuilder = null;
                  if (containerCase_ == 8) {
                    subBuilder = ((com.android.launcher3.logger.LauncherAtom.ShortcutsContainer) container_).toBuilder();
                  }
                  container_ =
                       input.readMessage(com.android.launcher3.logger.LauncherAtom.ShortcutsContainer.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.android.launcher3.logger.LauncherAtom.ShortcutsContainer) container_);
                    container_ = subBuilder.buildPartial();
                  }
                  containerCase_ = 8;
                  break;
                }
                case 74: {
                  com.android.launcher3.logger.LauncherAtom.SettingsContainer.Builder subBuilder = null;
                  if (containerCase_ == 9) {
                    subBuilder = ((com.android.launcher3.logger.LauncherAtom.SettingsContainer) container_).toBuilder();
                  }
                  container_ =
                       input.readMessage(com.android.launcher3.logger.LauncherAtom.SettingsContainer.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.android.launcher3.logger.LauncherAtom.SettingsContainer) container_);
                    container_ = subBuilder.buildPartial();
                  }
                  containerCase_ = 9;
                  break;
                }
                case 82: {
                  com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer.Builder subBuilder = null;
                  if (containerCase_ == 10) {
                    subBuilder = ((com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer) container_).toBuilder();
                  }
                  container_ =
                       input.readMessage(com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer) container_);
                    container_ = subBuilder.buildPartial();
                  }
                  containerCase_ = 10;
                  break;
                }
                case 90: {
                  com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer.Builder subBuilder = null;
                  if (containerCase_ == 11) {
                    subBuilder = ((com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer) container_).toBuilder();
                  }
                  container_ =
                       input.readMessage(com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer) container_);
                    container_ = subBuilder.buildPartial();
                  }
                  containerCase_ = 11;
                  break;
                }
                case 98: {
                  com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer.Builder subBuilder = null;
                  if (containerCase_ == 12) {
                    subBuilder = ((com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer) container_).toBuilder();
                  }
                  container_ =
                       input.readMessage(com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer) container_);
                    container_ = subBuilder.buildPartial();
                  }
                  containerCase_ = 12;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.android.launcher3.logger.LauncherAtom.ContainerInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:ContainerInfo)
    private static final com.android.launcher3.logger.LauncherAtom.ContainerInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ContainerInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.android.launcher3.logger.LauncherAtom.ContainerInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ContainerInfo> PARSER;

    public static com.google.protobuf.Parser<ContainerInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AllAppsContainerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AllAppsContainer)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * <pre>
   * Represents the apps list sorted alphabetically inside the all-apps view.
   * </pre>
   *
   * Protobuf type {@code AllAppsContainer}
   */
  public  static final class AllAppsContainer extends
      com.google.protobuf.GeneratedMessageLite<
          AllAppsContainer, AllAppsContainer.Builder> implements
      // @@protoc_insertion_point(message_implements:AllAppsContainer)
      AllAppsContainerOrBuilder {
    private AllAppsContainer() {
    }
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.android.launcher3.logger.LauncherAtom.AllAppsContainer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.AllAppsContainer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.AllAppsContainer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.AllAppsContainer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.AllAppsContainer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.AllAppsContainer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.AllAppsContainer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.AllAppsContainer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.AllAppsContainer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.AllAppsContainer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.launcher3.logger.LauncherAtom.AllAppsContainer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Represents the apps list sorted alphabetically inside the all-apps view.
     * </pre>
     *
     * Protobuf type {@code AllAppsContainer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.android.launcher3.logger.LauncherAtom.AllAppsContainer, Builder> implements
        // @@protoc_insertion_point(builder_implements:AllAppsContainer)
        com.android.launcher3.logger.LauncherAtom.AllAppsContainerOrBuilder {
      // Construct using com.android.launcher3.logger.LauncherAtom.AllAppsContainer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:AllAppsContainer)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.android.launcher3.logger.LauncherAtom.AllAppsContainer();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.android.launcher3.logger.LauncherAtom.AllAppsContainer other = (com.android.launcher3.logger.LauncherAtom.AllAppsContainer) arg1;
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.android.launcher3.logger.LauncherAtom.AllAppsContainer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:AllAppsContainer)
    private static final com.android.launcher3.logger.LauncherAtom.AllAppsContainer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AllAppsContainer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.android.launcher3.logger.LauncherAtom.AllAppsContainer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AllAppsContainer> PARSER;

    public static com.google.protobuf.Parser<AllAppsContainer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface WidgetsContainerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:WidgetsContainer)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * Protobuf type {@code WidgetsContainer}
   */
  public  static final class WidgetsContainer extends
      com.google.protobuf.GeneratedMessageLite<
          WidgetsContainer, WidgetsContainer.Builder> implements
      // @@protoc_insertion_point(message_implements:WidgetsContainer)
      WidgetsContainerOrBuilder {
    private WidgetsContainer() {
    }
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.android.launcher3.logger.LauncherAtom.WidgetsContainer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.WidgetsContainer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.WidgetsContainer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.WidgetsContainer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.WidgetsContainer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.WidgetsContainer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.WidgetsContainer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.WidgetsContainer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.WidgetsContainer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.WidgetsContainer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.launcher3.logger.LauncherAtom.WidgetsContainer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code WidgetsContainer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.android.launcher3.logger.LauncherAtom.WidgetsContainer, Builder> implements
        // @@protoc_insertion_point(builder_implements:WidgetsContainer)
        com.android.launcher3.logger.LauncherAtom.WidgetsContainerOrBuilder {
      // Construct using com.android.launcher3.logger.LauncherAtom.WidgetsContainer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:WidgetsContainer)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.android.launcher3.logger.LauncherAtom.WidgetsContainer();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.android.launcher3.logger.LauncherAtom.WidgetsContainer other = (com.android.launcher3.logger.LauncherAtom.WidgetsContainer) arg1;
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.android.launcher3.logger.LauncherAtom.WidgetsContainer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:WidgetsContainer)
    private static final com.android.launcher3.logger.LauncherAtom.WidgetsContainer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new WidgetsContainer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.android.launcher3.logger.LauncherAtom.WidgetsContainer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<WidgetsContainer> PARSER;

    public static com.google.protobuf.Parser<WidgetsContainer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PredictionContainerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PredictionContainer)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * <pre>
   * Represents the predicted apps row(top row) in the all-apps view.
   * </pre>
   *
   * Protobuf type {@code PredictionContainer}
   */
  public  static final class PredictionContainer extends
      com.google.protobuf.GeneratedMessageLite<
          PredictionContainer, PredictionContainer.Builder> implements
      // @@protoc_insertion_point(message_implements:PredictionContainer)
      PredictionContainerOrBuilder {
    private PredictionContainer() {
    }
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.android.launcher3.logger.LauncherAtom.PredictionContainer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.PredictionContainer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.PredictionContainer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.PredictionContainer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.PredictionContainer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.PredictionContainer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.PredictionContainer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.PredictionContainer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.PredictionContainer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.PredictionContainer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.launcher3.logger.LauncherAtom.PredictionContainer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Represents the predicted apps row(top row) in the all-apps view.
     * </pre>
     *
     * Protobuf type {@code PredictionContainer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.android.launcher3.logger.LauncherAtom.PredictionContainer, Builder> implements
        // @@protoc_insertion_point(builder_implements:PredictionContainer)
        com.android.launcher3.logger.LauncherAtom.PredictionContainerOrBuilder {
      // Construct using com.android.launcher3.logger.LauncherAtom.PredictionContainer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:PredictionContainer)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.android.launcher3.logger.LauncherAtom.PredictionContainer();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.android.launcher3.logger.LauncherAtom.PredictionContainer other = (com.android.launcher3.logger.LauncherAtom.PredictionContainer) arg1;
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.android.launcher3.logger.LauncherAtom.PredictionContainer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:PredictionContainer)
    private static final com.android.launcher3.logger.LauncherAtom.PredictionContainer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PredictionContainer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.android.launcher3.logger.LauncherAtom.PredictionContainer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PredictionContainer> PARSER;

    public static com.google.protobuf.Parser<PredictionContainer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SearchResultContainerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SearchResultContainer)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Length of search term.
     * </pre>
     *
     * <code>optional int32 query_length = 1;</code>
     */
    boolean hasQueryLength();
    /**
     * <pre>
     * Length of search term.
     * </pre>
     *
     * <code>optional int32 query_length = 1;</code>
     */
    int getQueryLength();

    /**
     * <code>optional .WorkspaceContainer workspace = 2;</code>
     */
    boolean hasWorkspace();
    /**
     * <code>optional .WorkspaceContainer workspace = 2;</code>
     */
    com.android.launcher3.logger.LauncherAtom.WorkspaceContainer getWorkspace();

    /**
     * <code>optional .AllAppsContainer all_apps_container = 3;</code>
     */
    boolean hasAllAppsContainer();
    /**
     * <code>optional .AllAppsContainer all_apps_container = 3;</code>
     */
    com.android.launcher3.logger.LauncherAtom.AllAppsContainer getAllAppsContainer();

    public com.android.launcher3.logger.LauncherAtom.SearchResultContainer.ParentContainerCase getParentContainerCase();
  }
  /**
   * <pre>
   * Represents the apps container within search results.
   * </pre>
   *
   * Protobuf type {@code SearchResultContainer}
   */
  public  static final class SearchResultContainer extends
      com.google.protobuf.GeneratedMessageLite<
          SearchResultContainer, SearchResultContainer.Builder> implements
      // @@protoc_insertion_point(message_implements:SearchResultContainer)
      SearchResultContainerOrBuilder {
    private SearchResultContainer() {
    }
    private int bitField0_;
    private int parentContainerCase_ = 0;
    private java.lang.Object parentContainer_;
    public enum ParentContainerCase
        implements com.google.protobuf.Internal.EnumLite {
      WORKSPACE(2),
      ALL_APPS_CONTAINER(3),
      PARENTCONTAINER_NOT_SET(0);
      private final int value;
      private ParentContainerCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ParentContainerCase valueOf(int value) {
        return forNumber(value);
      }

      public static ParentContainerCase forNumber(int value) {
        switch (value) {
          case 2: return WORKSPACE;
          case 3: return ALL_APPS_CONTAINER;
          case 0: return PARENTCONTAINER_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ParentContainerCase
    getParentContainerCase() {
      return ParentContainerCase.forNumber(
          parentContainerCase_);
    }

    private void clearParentContainer() {
      parentContainerCase_ = 0;
      parentContainer_ = null;
    }

    public static final int QUERY_LENGTH_FIELD_NUMBER = 1;
    private int queryLength_;
    /**
     * <pre>
     * Length of search term.
     * </pre>
     *
     * <code>optional int32 query_length = 1;</code>
     */
    public boolean hasQueryLength() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Length of search term.
     * </pre>
     *
     * <code>optional int32 query_length = 1;</code>
     */
    public int getQueryLength() {
      return queryLength_;
    }
    /**
     * <pre>
     * Length of search term.
     * </pre>
     *
     * <code>optional int32 query_length = 1;</code>
     */
    private void setQueryLength(int value) {
      bitField0_ |= 0x00000001;
      queryLength_ = value;
    }
    /**
     * <pre>
     * Length of search term.
     * </pre>
     *
     * <code>optional int32 query_length = 1;</code>
     */
    private void clearQueryLength() {
      bitField0_ = (bitField0_ & ~0x00000001);
      queryLength_ = 0;
    }

    public static final int WORKSPACE_FIELD_NUMBER = 2;
    /**
     * <code>optional .WorkspaceContainer workspace = 2;</code>
     */
    public boolean hasWorkspace() {
      return parentContainerCase_ == 2;
    }
    /**
     * <code>optional .WorkspaceContainer workspace = 2;</code>
     */
    public com.android.launcher3.logger.LauncherAtom.WorkspaceContainer getWorkspace() {
      if (parentContainerCase_ == 2) {
         return (com.android.launcher3.logger.LauncherAtom.WorkspaceContainer) parentContainer_;
      }
      return com.android.launcher3.logger.LauncherAtom.WorkspaceContainer.getDefaultInstance();
    }
    /**
     * <code>optional .WorkspaceContainer workspace = 2;</code>
     */
    private void setWorkspace(com.android.launcher3.logger.LauncherAtom.WorkspaceContainer value) {
      if (value == null) {
        throw new NullPointerException();
      }
      parentContainer_ = value;
      parentContainerCase_ = 2;
    }
    /**
     * <code>optional .WorkspaceContainer workspace = 2;</code>
     */
    private void setWorkspace(
        com.android.launcher3.logger.LauncherAtom.WorkspaceContainer.Builder builderForValue) {
      parentContainer_ = builderForValue.build();
      parentContainerCase_ = 2;
    }
    /**
     * <code>optional .WorkspaceContainer workspace = 2;</code>
     */
    private void mergeWorkspace(com.android.launcher3.logger.LauncherAtom.WorkspaceContainer value) {
      if (parentContainerCase_ == 2 &&
          parentContainer_ != com.android.launcher3.logger.LauncherAtom.WorkspaceContainer.getDefaultInstance()) {
        parentContainer_ = com.android.launcher3.logger.LauncherAtom.WorkspaceContainer.newBuilder((com.android.launcher3.logger.LauncherAtom.WorkspaceContainer) parentContainer_)
            .mergeFrom(value).buildPartial();
      } else {
        parentContainer_ = value;
      }
      parentContainerCase_ = 2;
    }
    /**
     * <code>optional .WorkspaceContainer workspace = 2;</code>
     */
    private void clearWorkspace() {
      if (parentContainerCase_ == 2) {
        parentContainerCase_ = 0;
        parentContainer_ = null;
      }
    }

    public static final int ALL_APPS_CONTAINER_FIELD_NUMBER = 3;
    /**
     * <code>optional .AllAppsContainer all_apps_container = 3;</code>
     */
    public boolean hasAllAppsContainer() {
      return parentContainerCase_ == 3;
    }
    /**
     * <code>optional .AllAppsContainer all_apps_container = 3;</code>
     */
    public com.android.launcher3.logger.LauncherAtom.AllAppsContainer getAllAppsContainer() {
      if (parentContainerCase_ == 3) {
         return (com.android.launcher3.logger.LauncherAtom.AllAppsContainer) parentContainer_;
      }
      return com.android.launcher3.logger.LauncherAtom.AllAppsContainer.getDefaultInstance();
    }
    /**
     * <code>optional .AllAppsContainer all_apps_container = 3;</code>
     */
    private void setAllAppsContainer(com.android.launcher3.logger.LauncherAtom.AllAppsContainer value) {
      if (value == null) {
        throw new NullPointerException();
      }
      parentContainer_ = value;
      parentContainerCase_ = 3;
    }
    /**
     * <code>optional .AllAppsContainer all_apps_container = 3;</code>
     */
    private void setAllAppsContainer(
        com.android.launcher3.logger.LauncherAtom.AllAppsContainer.Builder builderForValue) {
      parentContainer_ = builderForValue.build();
      parentContainerCase_ = 3;
    }
    /**
     * <code>optional .AllAppsContainer all_apps_container = 3;</code>
     */
    private void mergeAllAppsContainer(com.android.launcher3.logger.LauncherAtom.AllAppsContainer value) {
      if (parentContainerCase_ == 3 &&
          parentContainer_ != com.android.launcher3.logger.LauncherAtom.AllAppsContainer.getDefaultInstance()) {
        parentContainer_ = com.android.launcher3.logger.LauncherAtom.AllAppsContainer.newBuilder((com.android.launcher3.logger.LauncherAtom.AllAppsContainer) parentContainer_)
            .mergeFrom(value).buildPartial();
      } else {
        parentContainer_ = value;
      }
      parentContainerCase_ = 3;
    }
    /**
     * <code>optional .AllAppsContainer all_apps_container = 3;</code>
     */
    private void clearAllAppsContainer() {
      if (parentContainerCase_ == 3) {
        parentContainerCase_ = 0;
        parentContainer_ = null;
      }
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, queryLength_);
      }
      if (parentContainerCase_ == 2) {
        output.writeMessage(2, (com.android.launcher3.logger.LauncherAtom.WorkspaceContainer) parentContainer_);
      }
      if (parentContainerCase_ == 3) {
        output.writeMessage(3, (com.android.launcher3.logger.LauncherAtom.AllAppsContainer) parentContainer_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, queryLength_);
      }
      if (parentContainerCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.android.launcher3.logger.LauncherAtom.WorkspaceContainer) parentContainer_);
      }
      if (parentContainerCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.android.launcher3.logger.LauncherAtom.AllAppsContainer) parentContainer_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.android.launcher3.logger.LauncherAtom.SearchResultContainer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.SearchResultContainer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.SearchResultContainer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.SearchResultContainer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.SearchResultContainer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.SearchResultContainer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.SearchResultContainer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.SearchResultContainer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.SearchResultContainer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.SearchResultContainer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.launcher3.logger.LauncherAtom.SearchResultContainer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Represents the apps container within search results.
     * </pre>
     *
     * Protobuf type {@code SearchResultContainer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.android.launcher3.logger.LauncherAtom.SearchResultContainer, Builder> implements
        // @@protoc_insertion_point(builder_implements:SearchResultContainer)
        com.android.launcher3.logger.LauncherAtom.SearchResultContainerOrBuilder {
      // Construct using com.android.launcher3.logger.LauncherAtom.SearchResultContainer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      public ParentContainerCase
          getParentContainerCase() {
        return instance.getParentContainerCase();
      }

      public Builder clearParentContainer() {
        copyOnWrite();
        instance.clearParentContainer();
        return this;
      }


      /**
       * <pre>
       * Length of search term.
       * </pre>
       *
       * <code>optional int32 query_length = 1;</code>
       */
      public boolean hasQueryLength() {
        return instance.hasQueryLength();
      }
      /**
       * <pre>
       * Length of search term.
       * </pre>
       *
       * <code>optional int32 query_length = 1;</code>
       */
      public int getQueryLength() {
        return instance.getQueryLength();
      }
      /**
       * <pre>
       * Length of search term.
       * </pre>
       *
       * <code>optional int32 query_length = 1;</code>
       */
      public Builder setQueryLength(int value) {
        copyOnWrite();
        instance.setQueryLength(value);
        return this;
      }
      /**
       * <pre>
       * Length of search term.
       * </pre>
       *
       * <code>optional int32 query_length = 1;</code>
       */
      public Builder clearQueryLength() {
        copyOnWrite();
        instance.clearQueryLength();
        return this;
      }

      /**
       * <code>optional .WorkspaceContainer workspace = 2;</code>
       */
      public boolean hasWorkspace() {
        return instance.hasWorkspace();
      }
      /**
       * <code>optional .WorkspaceContainer workspace = 2;</code>
       */
      public com.android.launcher3.logger.LauncherAtom.WorkspaceContainer getWorkspace() {
        return instance.getWorkspace();
      }
      /**
       * <code>optional .WorkspaceContainer workspace = 2;</code>
       */
      public Builder setWorkspace(com.android.launcher3.logger.LauncherAtom.WorkspaceContainer value) {
        copyOnWrite();
        instance.setWorkspace(value);
        return this;
      }
      /**
       * <code>optional .WorkspaceContainer workspace = 2;</code>
       */
      public Builder setWorkspace(
          com.android.launcher3.logger.LauncherAtom.WorkspaceContainer.Builder builderForValue) {
        copyOnWrite();
        instance.setWorkspace(builderForValue);
        return this;
      }
      /**
       * <code>optional .WorkspaceContainer workspace = 2;</code>
       */
      public Builder mergeWorkspace(com.android.launcher3.logger.LauncherAtom.WorkspaceContainer value) {
        copyOnWrite();
        instance.mergeWorkspace(value);
        return this;
      }
      /**
       * <code>optional .WorkspaceContainer workspace = 2;</code>
       */
      public Builder clearWorkspace() {
        copyOnWrite();
        instance.clearWorkspace();
        return this;
      }

      /**
       * <code>optional .AllAppsContainer all_apps_container = 3;</code>
       */
      public boolean hasAllAppsContainer() {
        return instance.hasAllAppsContainer();
      }
      /**
       * <code>optional .AllAppsContainer all_apps_container = 3;</code>
       */
      public com.android.launcher3.logger.LauncherAtom.AllAppsContainer getAllAppsContainer() {
        return instance.getAllAppsContainer();
      }
      /**
       * <code>optional .AllAppsContainer all_apps_container = 3;</code>
       */
      public Builder setAllAppsContainer(com.android.launcher3.logger.LauncherAtom.AllAppsContainer value) {
        copyOnWrite();
        instance.setAllAppsContainer(value);
        return this;
      }
      /**
       * <code>optional .AllAppsContainer all_apps_container = 3;</code>
       */
      public Builder setAllAppsContainer(
          com.android.launcher3.logger.LauncherAtom.AllAppsContainer.Builder builderForValue) {
        copyOnWrite();
        instance.setAllAppsContainer(builderForValue);
        return this;
      }
      /**
       * <code>optional .AllAppsContainer all_apps_container = 3;</code>
       */
      public Builder mergeAllAppsContainer(com.android.launcher3.logger.LauncherAtom.AllAppsContainer value) {
        copyOnWrite();
        instance.mergeAllAppsContainer(value);
        return this;
      }
      /**
       * <code>optional .AllAppsContainer all_apps_container = 3;</code>
       */
      public Builder clearAllAppsContainer() {
        copyOnWrite();
        instance.clearAllAppsContainer();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SearchResultContainer)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.android.launcher3.logger.LauncherAtom.SearchResultContainer();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.android.launcher3.logger.LauncherAtom.SearchResultContainer other = (com.android.launcher3.logger.LauncherAtom.SearchResultContainer) arg1;
          queryLength_ = visitor.visitInt(
              hasQueryLength(), queryLength_,
              other.hasQueryLength(), other.queryLength_);
          switch (other.getParentContainerCase()) {
            case WORKSPACE: {
              parentContainer_ = visitor.visitOneofMessage(
                  parentContainerCase_ == 2,
                  parentContainer_,
                  other.parentContainer_);
              break;
            }
            case ALL_APPS_CONTAINER: {
              parentContainer_ = visitor.visitOneofMessage(
                  parentContainerCase_ == 3,
                  parentContainer_,
                  other.parentContainer_);
              break;
            }
            case PARENTCONTAINER_NOT_SET: {
              visitor.visitOneofNotSet(parentContainerCase_ != 0);
              break;
            }
          }
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            if (other.parentContainerCase_ != 0) {
              parentContainerCase_ = other.parentContainerCase_;
            }
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  queryLength_ = input.readInt32();
                  break;
                }
                case 18: {
                  com.android.launcher3.logger.LauncherAtom.WorkspaceContainer.Builder subBuilder = null;
                  if (parentContainerCase_ == 2) {
                    subBuilder = ((com.android.launcher3.logger.LauncherAtom.WorkspaceContainer) parentContainer_).toBuilder();
                  }
                  parentContainer_ =
                       input.readMessage(com.android.launcher3.logger.LauncherAtom.WorkspaceContainer.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.android.launcher3.logger.LauncherAtom.WorkspaceContainer) parentContainer_);
                    parentContainer_ = subBuilder.buildPartial();
                  }
                  parentContainerCase_ = 2;
                  break;
                }
                case 26: {
                  com.android.launcher3.logger.LauncherAtom.AllAppsContainer.Builder subBuilder = null;
                  if (parentContainerCase_ == 3) {
                    subBuilder = ((com.android.launcher3.logger.LauncherAtom.AllAppsContainer) parentContainer_).toBuilder();
                  }
                  parentContainer_ =
                       input.readMessage(com.android.launcher3.logger.LauncherAtom.AllAppsContainer.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.android.launcher3.logger.LauncherAtom.AllAppsContainer) parentContainer_);
                    parentContainer_ = subBuilder.buildPartial();
                  }
                  parentContainerCase_ = 3;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.android.launcher3.logger.LauncherAtom.SearchResultContainer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:SearchResultContainer)
    private static final com.android.launcher3.logger.LauncherAtom.SearchResultContainer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SearchResultContainer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.android.launcher3.logger.LauncherAtom.SearchResultContainer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SearchResultContainer> PARSER;

    public static com.google.protobuf.Parser<SearchResultContainer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ShortcutsContainerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ShortcutsContainer)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * <pre>
   * Container for package specific shortcuts to deep links and notifications.
   * Typically shown as popup window by longpressing on an icon.
   * </pre>
   *
   * Protobuf type {@code ShortcutsContainer}
   */
  public  static final class ShortcutsContainer extends
      com.google.protobuf.GeneratedMessageLite<
          ShortcutsContainer, ShortcutsContainer.Builder> implements
      // @@protoc_insertion_point(message_implements:ShortcutsContainer)
      ShortcutsContainerOrBuilder {
    private ShortcutsContainer() {
    }
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.android.launcher3.logger.LauncherAtom.ShortcutsContainer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.ShortcutsContainer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.ShortcutsContainer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.ShortcutsContainer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.ShortcutsContainer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.ShortcutsContainer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.ShortcutsContainer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.ShortcutsContainer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.ShortcutsContainer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.ShortcutsContainer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.launcher3.logger.LauncherAtom.ShortcutsContainer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Container for package specific shortcuts to deep links and notifications.
     * Typically shown as popup window by longpressing on an icon.
     * </pre>
     *
     * Protobuf type {@code ShortcutsContainer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.android.launcher3.logger.LauncherAtom.ShortcutsContainer, Builder> implements
        // @@protoc_insertion_point(builder_implements:ShortcutsContainer)
        com.android.launcher3.logger.LauncherAtom.ShortcutsContainerOrBuilder {
      // Construct using com.android.launcher3.logger.LauncherAtom.ShortcutsContainer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:ShortcutsContainer)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.android.launcher3.logger.LauncherAtom.ShortcutsContainer();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.android.launcher3.logger.LauncherAtom.ShortcutsContainer other = (com.android.launcher3.logger.LauncherAtom.ShortcutsContainer) arg1;
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.android.launcher3.logger.LauncherAtom.ShortcutsContainer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:ShortcutsContainer)
    private static final com.android.launcher3.logger.LauncherAtom.ShortcutsContainer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ShortcutsContainer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.android.launcher3.logger.LauncherAtom.ShortcutsContainer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ShortcutsContainer> PARSER;

    public static com.google.protobuf.Parser<ShortcutsContainer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SettingsContainerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SettingsContainer)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * <pre>
   * Container for generic system shortcuts for launcher specific settings.
   * Typically shown up as popup window by longpressing on empty space on workspace.
   * </pre>
   *
   * Protobuf type {@code SettingsContainer}
   */
  public  static final class SettingsContainer extends
      com.google.protobuf.GeneratedMessageLite<
          SettingsContainer, SettingsContainer.Builder> implements
      // @@protoc_insertion_point(message_implements:SettingsContainer)
      SettingsContainerOrBuilder {
    private SettingsContainer() {
    }
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.android.launcher3.logger.LauncherAtom.SettingsContainer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.SettingsContainer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.SettingsContainer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.SettingsContainer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.SettingsContainer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.SettingsContainer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.SettingsContainer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.SettingsContainer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.SettingsContainer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.SettingsContainer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.launcher3.logger.LauncherAtom.SettingsContainer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Container for generic system shortcuts for launcher specific settings.
     * Typically shown up as popup window by longpressing on empty space on workspace.
     * </pre>
     *
     * Protobuf type {@code SettingsContainer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.android.launcher3.logger.LauncherAtom.SettingsContainer, Builder> implements
        // @@protoc_insertion_point(builder_implements:SettingsContainer)
        com.android.launcher3.logger.LauncherAtom.SettingsContainerOrBuilder {
      // Construct using com.android.launcher3.logger.LauncherAtom.SettingsContainer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:SettingsContainer)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.android.launcher3.logger.LauncherAtom.SettingsContainer();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.android.launcher3.logger.LauncherAtom.SettingsContainer other = (com.android.launcher3.logger.LauncherAtom.SettingsContainer) arg1;
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.android.launcher3.logger.LauncherAtom.SettingsContainer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:SettingsContainer)
    private static final com.android.launcher3.logger.LauncherAtom.SettingsContainer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SettingsContainer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.android.launcher3.logger.LauncherAtom.SettingsContainer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SettingsContainer> PARSER;

    public static com.google.protobuf.Parser<SettingsContainer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TaskSwitcherContainerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TaskSwitcherContainer)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * <pre>
   * Container for tasks in the Overview UI.
   * Typically entered using either the overview gesture or overview button.
   * </pre>
   *
   * Protobuf type {@code TaskSwitcherContainer}
   */
  public  static final class TaskSwitcherContainer extends
      com.google.protobuf.GeneratedMessageLite<
          TaskSwitcherContainer, TaskSwitcherContainer.Builder> implements
      // @@protoc_insertion_point(message_implements:TaskSwitcherContainer)
      TaskSwitcherContainerOrBuilder {
    private TaskSwitcherContainer() {
    }
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Container for tasks in the Overview UI.
     * Typically entered using either the overview gesture or overview button.
     * </pre>
     *
     * Protobuf type {@code TaskSwitcherContainer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer, Builder> implements
        // @@protoc_insertion_point(builder_implements:TaskSwitcherContainer)
        com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainerOrBuilder {
      // Construct using com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:TaskSwitcherContainer)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer other = (com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer) arg1;
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TaskSwitcherContainer)
    private static final com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TaskSwitcherContainer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.android.launcher3.logger.LauncherAtom.TaskSwitcherContainer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TaskSwitcherContainer> PARSER;

    public static com.google.protobuf.Parser<TaskSwitcherContainer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TaskForegroundContainerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TaskForegroundContainer)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * <pre>
   * Container for tasks from another foreground app, when not on launcher screen.
   * Typically home gesture or overview gesture can be triggered from
   * this container.
   * </pre>
   *
   * Protobuf type {@code TaskForegroundContainer}
   */
  public  static final class TaskForegroundContainer extends
      com.google.protobuf.GeneratedMessageLite<
          TaskForegroundContainer, TaskForegroundContainer.Builder> implements
      // @@protoc_insertion_point(message_implements:TaskForegroundContainer)
      TaskForegroundContainerOrBuilder {
    private TaskForegroundContainer() {
    }
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Container for tasks from another foreground app, when not on launcher screen.
     * Typically home gesture or overview gesture can be triggered from
     * this container.
     * </pre>
     *
     * Protobuf type {@code TaskForegroundContainer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer, Builder> implements
        // @@protoc_insertion_point(builder_implements:TaskForegroundContainer)
        com.android.launcher3.logger.LauncherAtom.TaskForegroundContainerOrBuilder {
      // Construct using com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:TaskForegroundContainer)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer other = (com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer) arg1;
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TaskForegroundContainer)
    private static final com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TaskForegroundContainer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.android.launcher3.logger.LauncherAtom.TaskForegroundContainer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TaskForegroundContainer> PARSER;

    public static com.google.protobuf.Parser<TaskForegroundContainer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ApplicationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Application)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string package_name = 1;</code>
     */
    boolean hasPackageName();
    /**
     * <code>optional string package_name = 1;</code>
     */
    java.lang.String getPackageName();
    /**
     * <code>optional string package_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getPackageNameBytes();

    /**
     * <code>optional string component_name = 2;</code>
     */
    boolean hasComponentName();
    /**
     * <code>optional string component_name = 2;</code>
     */
    java.lang.String getComponentName();
    /**
     * <code>optional string component_name = 2;</code>
     */
    com.google.protobuf.ByteString
        getComponentNameBytes();
  }
  /**
   * <pre>
   * Main app icons
   * </pre>
   *
   * Protobuf type {@code Application}
   */
  public  static final class Application extends
      com.google.protobuf.GeneratedMessageLite<
          Application, Application.Builder> implements
      // @@protoc_insertion_point(message_implements:Application)
      ApplicationOrBuilder {
    private Application() {
      packageName_ = "";
      componentName_ = "";
    }
    private int bitField0_;
    public static final int PACKAGE_NAME_FIELD_NUMBER = 1;
    private java.lang.String packageName_;
    /**
     * <code>optional string package_name = 1;</code>
     */
    public boolean hasPackageName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string package_name = 1;</code>
     */
    public java.lang.String getPackageName() {
      return packageName_;
    }
    /**
     * <code>optional string package_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPackageNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(packageName_);
    }
    /**
     * <code>optional string package_name = 1;</code>
     */
    private void setPackageName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      packageName_ = value;
    }
    /**
     * <code>optional string package_name = 1;</code>
     */
    private void clearPackageName() {
      bitField0_ = (bitField0_ & ~0x00000001);
      packageName_ = getDefaultInstance().getPackageName();
    }
    /**
     * <code>optional string package_name = 1;</code>
     */
    private void setPackageNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      packageName_ = value.toStringUtf8();
    }

    public static final int COMPONENT_NAME_FIELD_NUMBER = 2;
    private java.lang.String componentName_;
    /**
     * <code>optional string component_name = 2;</code>
     */
    public boolean hasComponentName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string component_name = 2;</code>
     */
    public java.lang.String getComponentName() {
      return componentName_;
    }
    /**
     * <code>optional string component_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getComponentNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(componentName_);
    }
    /**
     * <code>optional string component_name = 2;</code>
     */
    private void setComponentName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      componentName_ = value;
    }
    /**
     * <code>optional string component_name = 2;</code>
     */
    private void clearComponentName() {
      bitField0_ = (bitField0_ & ~0x00000002);
      componentName_ = getDefaultInstance().getComponentName();
    }
    /**
     * <code>optional string component_name = 2;</code>
     */
    private void setComponentNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      componentName_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getPackageName());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getComponentName());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getPackageName());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getComponentName());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.android.launcher3.logger.LauncherAtom.Application parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.Application parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.Application parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.Application parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.Application parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.Application parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.Application parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.Application parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.Application parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.Application parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.launcher3.logger.LauncherAtom.Application prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Main app icons
     * </pre>
     *
     * Protobuf type {@code Application}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.android.launcher3.logger.LauncherAtom.Application, Builder> implements
        // @@protoc_insertion_point(builder_implements:Application)
        com.android.launcher3.logger.LauncherAtom.ApplicationOrBuilder {
      // Construct using com.android.launcher3.logger.LauncherAtom.Application.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string package_name = 1;</code>
       */
      public boolean hasPackageName() {
        return instance.hasPackageName();
      }
      /**
       * <code>optional string package_name = 1;</code>
       */
      public java.lang.String getPackageName() {
        return instance.getPackageName();
      }
      /**
       * <code>optional string package_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPackageNameBytes() {
        return instance.getPackageNameBytes();
      }
      /**
       * <code>optional string package_name = 1;</code>
       */
      public Builder setPackageName(
          java.lang.String value) {
        copyOnWrite();
        instance.setPackageName(value);
        return this;
      }
      /**
       * <code>optional string package_name = 1;</code>
       */
      public Builder clearPackageName() {
        copyOnWrite();
        instance.clearPackageName();
        return this;
      }
      /**
       * <code>optional string package_name = 1;</code>
       */
      public Builder setPackageNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPackageNameBytes(value);
        return this;
      }

      /**
       * <code>optional string component_name = 2;</code>
       */
      public boolean hasComponentName() {
        return instance.hasComponentName();
      }
      /**
       * <code>optional string component_name = 2;</code>
       */
      public java.lang.String getComponentName() {
        return instance.getComponentName();
      }
      /**
       * <code>optional string component_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getComponentNameBytes() {
        return instance.getComponentNameBytes();
      }
      /**
       * <code>optional string component_name = 2;</code>
       */
      public Builder setComponentName(
          java.lang.String value) {
        copyOnWrite();
        instance.setComponentName(value);
        return this;
      }
      /**
       * <code>optional string component_name = 2;</code>
       */
      public Builder clearComponentName() {
        copyOnWrite();
        instance.clearComponentName();
        return this;
      }
      /**
       * <code>optional string component_name = 2;</code>
       */
      public Builder setComponentNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setComponentNameBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Application)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.android.launcher3.logger.LauncherAtom.Application();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.android.launcher3.logger.LauncherAtom.Application other = (com.android.launcher3.logger.LauncherAtom.Application) arg1;
          packageName_ = visitor.visitString(
              hasPackageName(), packageName_,
              other.hasPackageName(), other.packageName_);
          componentName_ = visitor.visitString(
              hasComponentName(), componentName_,
              other.hasComponentName(), other.componentName_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  packageName_ = s;
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  componentName_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.android.launcher3.logger.LauncherAtom.Application.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:Application)
    private static final com.android.launcher3.logger.LauncherAtom.Application DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Application();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.android.launcher3.logger.LauncherAtom.Application getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Application> PARSER;

    public static com.google.protobuf.Parser<Application> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ShortcutOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Shortcut)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string shortcut_name = 1;</code>
     */
    boolean hasShortcutName();
    /**
     * <code>optional string shortcut_name = 1;</code>
     */
    java.lang.String getShortcutName();
    /**
     * <code>optional string shortcut_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getShortcutNameBytes();
  }
  /**
   * <pre>
   * Legacy shortcuts and shortcuts handled by ShortcutManager
   * </pre>
   *
   * Protobuf type {@code Shortcut}
   */
  public  static final class Shortcut extends
      com.google.protobuf.GeneratedMessageLite<
          Shortcut, Shortcut.Builder> implements
      // @@protoc_insertion_point(message_implements:Shortcut)
      ShortcutOrBuilder {
    private Shortcut() {
      shortcutName_ = "";
    }
    private int bitField0_;
    public static final int SHORTCUT_NAME_FIELD_NUMBER = 1;
    private java.lang.String shortcutName_;
    /**
     * <code>optional string shortcut_name = 1;</code>
     */
    public boolean hasShortcutName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string shortcut_name = 1;</code>
     */
    public java.lang.String getShortcutName() {
      return shortcutName_;
    }
    /**
     * <code>optional string shortcut_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getShortcutNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(shortcutName_);
    }
    /**
     * <code>optional string shortcut_name = 1;</code>
     */
    private void setShortcutName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      shortcutName_ = value;
    }
    /**
     * <code>optional string shortcut_name = 1;</code>
     */
    private void clearShortcutName() {
      bitField0_ = (bitField0_ & ~0x00000001);
      shortcutName_ = getDefaultInstance().getShortcutName();
    }
    /**
     * <code>optional string shortcut_name = 1;</code>
     */
    private void setShortcutNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      shortcutName_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getShortcutName());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getShortcutName());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.android.launcher3.logger.LauncherAtom.Shortcut parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.Shortcut parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.Shortcut parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.Shortcut parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.Shortcut parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.Shortcut parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.Shortcut parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.Shortcut parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.Shortcut parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.Shortcut parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.launcher3.logger.LauncherAtom.Shortcut prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Legacy shortcuts and shortcuts handled by ShortcutManager
     * </pre>
     *
     * Protobuf type {@code Shortcut}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.android.launcher3.logger.LauncherAtom.Shortcut, Builder> implements
        // @@protoc_insertion_point(builder_implements:Shortcut)
        com.android.launcher3.logger.LauncherAtom.ShortcutOrBuilder {
      // Construct using com.android.launcher3.logger.LauncherAtom.Shortcut.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string shortcut_name = 1;</code>
       */
      public boolean hasShortcutName() {
        return instance.hasShortcutName();
      }
      /**
       * <code>optional string shortcut_name = 1;</code>
       */
      public java.lang.String getShortcutName() {
        return instance.getShortcutName();
      }
      /**
       * <code>optional string shortcut_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getShortcutNameBytes() {
        return instance.getShortcutNameBytes();
      }
      /**
       * <code>optional string shortcut_name = 1;</code>
       */
      public Builder setShortcutName(
          java.lang.String value) {
        copyOnWrite();
        instance.setShortcutName(value);
        return this;
      }
      /**
       * <code>optional string shortcut_name = 1;</code>
       */
      public Builder clearShortcutName() {
        copyOnWrite();
        instance.clearShortcutName();
        return this;
      }
      /**
       * <code>optional string shortcut_name = 1;</code>
       */
      public Builder setShortcutNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setShortcutNameBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Shortcut)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.android.launcher3.logger.LauncherAtom.Shortcut();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.android.launcher3.logger.LauncherAtom.Shortcut other = (com.android.launcher3.logger.LauncherAtom.Shortcut) arg1;
          shortcutName_ = visitor.visitString(
              hasShortcutName(), shortcutName_,
              other.hasShortcutName(), other.shortcutName_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  shortcutName_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.android.launcher3.logger.LauncherAtom.Shortcut.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:Shortcut)
    private static final com.android.launcher3.logger.LauncherAtom.Shortcut DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Shortcut();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.android.launcher3.logger.LauncherAtom.Shortcut getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Shortcut> PARSER;

    public static com.google.protobuf.Parser<Shortcut> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface WidgetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Widget)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional int32 span_x = 1 [default = 1];</code>
     */
    boolean hasSpanX();
    /**
     * <code>optional int32 span_x = 1 [default = 1];</code>
     */
    int getSpanX();

    /**
     * <code>optional int32 span_y = 2 [default = 1];</code>
     */
    boolean hasSpanY();
    /**
     * <code>optional int32 span_y = 2 [default = 1];</code>
     */
    int getSpanY();

    /**
     * <code>optional int32 app_widget_id = 3;</code>
     */
    boolean hasAppWidgetId();
    /**
     * <code>optional int32 app_widget_id = 3;</code>
     */
    int getAppWidgetId();

    /**
     * <pre>
     * only populated during snapshot if from workspace
     * </pre>
     *
     * <code>optional string package_name = 4;</code>
     */
    boolean hasPackageName();
    /**
     * <pre>
     * only populated during snapshot if from workspace
     * </pre>
     *
     * <code>optional string package_name = 4;</code>
     */
    java.lang.String getPackageName();
    /**
     * <pre>
     * only populated during snapshot if from workspace
     * </pre>
     *
     * <code>optional string package_name = 4;</code>
     */
    com.google.protobuf.ByteString
        getPackageNameBytes();

    /**
     * <pre>
     * only populated during snapshot if from workspace
     * </pre>
     *
     * <code>optional string component_name = 5;</code>
     */
    boolean hasComponentName();
    /**
     * <pre>
     * only populated during snapshot if from workspace
     * </pre>
     *
     * <code>optional string component_name = 5;</code>
     */
    java.lang.String getComponentName();
    /**
     * <pre>
     * only populated during snapshot if from workspace
     * </pre>
     *
     * <code>optional string component_name = 5;</code>
     */
    com.google.protobuf.ByteString
        getComponentNameBytes();
  }
  /**
   * <pre>
   * AppWidgets handled by AppWidgetManager
   * </pre>
   *
   * Protobuf type {@code Widget}
   */
  public  static final class Widget extends
      com.google.protobuf.GeneratedMessageLite<
          Widget, Widget.Builder> implements
      // @@protoc_insertion_point(message_implements:Widget)
      WidgetOrBuilder {
    private Widget() {
      spanX_ = 1;
      spanY_ = 1;
      packageName_ = "";
      componentName_ = "";
    }
    private int bitField0_;
    public static final int SPAN_X_FIELD_NUMBER = 1;
    private int spanX_;
    /**
     * <code>optional int32 span_x = 1 [default = 1];</code>
     */
    public boolean hasSpanX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 span_x = 1 [default = 1];</code>
     */
    public int getSpanX() {
      return spanX_;
    }
    /**
     * <code>optional int32 span_x = 1 [default = 1];</code>
     */
    private void setSpanX(int value) {
      bitField0_ |= 0x00000001;
      spanX_ = value;
    }
    /**
     * <code>optional int32 span_x = 1 [default = 1];</code>
     */
    private void clearSpanX() {
      bitField0_ = (bitField0_ & ~0x00000001);
      spanX_ = 1;
    }

    public static final int SPAN_Y_FIELD_NUMBER = 2;
    private int spanY_;
    /**
     * <code>optional int32 span_y = 2 [default = 1];</code>
     */
    public boolean hasSpanY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 span_y = 2 [default = 1];</code>
     */
    public int getSpanY() {
      return spanY_;
    }
    /**
     * <code>optional int32 span_y = 2 [default = 1];</code>
     */
    private void setSpanY(int value) {
      bitField0_ |= 0x00000002;
      spanY_ = value;
    }
    /**
     * <code>optional int32 span_y = 2 [default = 1];</code>
     */
    private void clearSpanY() {
      bitField0_ = (bitField0_ & ~0x00000002);
      spanY_ = 1;
    }

    public static final int APP_WIDGET_ID_FIELD_NUMBER = 3;
    private int appWidgetId_;
    /**
     * <code>optional int32 app_widget_id = 3;</code>
     */
    public boolean hasAppWidgetId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 app_widget_id = 3;</code>
     */
    public int getAppWidgetId() {
      return appWidgetId_;
    }
    /**
     * <code>optional int32 app_widget_id = 3;</code>
     */
    private void setAppWidgetId(int value) {
      bitField0_ |= 0x00000004;
      appWidgetId_ = value;
    }
    /**
     * <code>optional int32 app_widget_id = 3;</code>
     */
    private void clearAppWidgetId() {
      bitField0_ = (bitField0_ & ~0x00000004);
      appWidgetId_ = 0;
    }

    public static final int PACKAGE_NAME_FIELD_NUMBER = 4;
    private java.lang.String packageName_;
    /**
     * <pre>
     * only populated during snapshot if from workspace
     * </pre>
     *
     * <code>optional string package_name = 4;</code>
     */
    public boolean hasPackageName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * only populated during snapshot if from workspace
     * </pre>
     *
     * <code>optional string package_name = 4;</code>
     */
    public java.lang.String getPackageName() {
      return packageName_;
    }
    /**
     * <pre>
     * only populated during snapshot if from workspace
     * </pre>
     *
     * <code>optional string package_name = 4;</code>
     */
    public com.google.protobuf.ByteString
        getPackageNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(packageName_);
    }
    /**
     * <pre>
     * only populated during snapshot if from workspace
     * </pre>
     *
     * <code>optional string package_name = 4;</code>
     */
    private void setPackageName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      packageName_ = value;
    }
    /**
     * <pre>
     * only populated during snapshot if from workspace
     * </pre>
     *
     * <code>optional string package_name = 4;</code>
     */
    private void clearPackageName() {
      bitField0_ = (bitField0_ & ~0x00000008);
      packageName_ = getDefaultInstance().getPackageName();
    }
    /**
     * <pre>
     * only populated during snapshot if from workspace
     * </pre>
     *
     * <code>optional string package_name = 4;</code>
     */
    private void setPackageNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      packageName_ = value.toStringUtf8();
    }

    public static final int COMPONENT_NAME_FIELD_NUMBER = 5;
    private java.lang.String componentName_;
    /**
     * <pre>
     * only populated during snapshot if from workspace
     * </pre>
     *
     * <code>optional string component_name = 5;</code>
     */
    public boolean hasComponentName() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * only populated during snapshot if from workspace
     * </pre>
     *
     * <code>optional string component_name = 5;</code>
     */
    public java.lang.String getComponentName() {
      return componentName_;
    }
    /**
     * <pre>
     * only populated during snapshot if from workspace
     * </pre>
     *
     * <code>optional string component_name = 5;</code>
     */
    public com.google.protobuf.ByteString
        getComponentNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(componentName_);
    }
    /**
     * <pre>
     * only populated during snapshot if from workspace
     * </pre>
     *
     * <code>optional string component_name = 5;</code>
     */
    private void setComponentName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
      componentName_ = value;
    }
    /**
     * <pre>
     * only populated during snapshot if from workspace
     * </pre>
     *
     * <code>optional string component_name = 5;</code>
     */
    private void clearComponentName() {
      bitField0_ = (bitField0_ & ~0x00000010);
      componentName_ = getDefaultInstance().getComponentName();
    }
    /**
     * <pre>
     * only populated during snapshot if from workspace
     * </pre>
     *
     * <code>optional string component_name = 5;</code>
     */
    private void setComponentNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
      componentName_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, spanX_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, spanY_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, appWidgetId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeString(4, getPackageName());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeString(5, getComponentName());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, spanX_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, spanY_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, appWidgetId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getPackageName());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getComponentName());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.android.launcher3.logger.LauncherAtom.Widget parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.Widget parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.Widget parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.Widget parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.Widget parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.Widget parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.Widget parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.Widget parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.Widget parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.Widget parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.launcher3.logger.LauncherAtom.Widget prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * AppWidgets handled by AppWidgetManager
     * </pre>
     *
     * Protobuf type {@code Widget}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.android.launcher3.logger.LauncherAtom.Widget, Builder> implements
        // @@protoc_insertion_point(builder_implements:Widget)
        com.android.launcher3.logger.LauncherAtom.WidgetOrBuilder {
      // Construct using com.android.launcher3.logger.LauncherAtom.Widget.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional int32 span_x = 1 [default = 1];</code>
       */
      public boolean hasSpanX() {
        return instance.hasSpanX();
      }
      /**
       * <code>optional int32 span_x = 1 [default = 1];</code>
       */
      public int getSpanX() {
        return instance.getSpanX();
      }
      /**
       * <code>optional int32 span_x = 1 [default = 1];</code>
       */
      public Builder setSpanX(int value) {
        copyOnWrite();
        instance.setSpanX(value);
        return this;
      }
      /**
       * <code>optional int32 span_x = 1 [default = 1];</code>
       */
      public Builder clearSpanX() {
        copyOnWrite();
        instance.clearSpanX();
        return this;
      }

      /**
       * <code>optional int32 span_y = 2 [default = 1];</code>
       */
      public boolean hasSpanY() {
        return instance.hasSpanY();
      }
      /**
       * <code>optional int32 span_y = 2 [default = 1];</code>
       */
      public int getSpanY() {
        return instance.getSpanY();
      }
      /**
       * <code>optional int32 span_y = 2 [default = 1];</code>
       */
      public Builder setSpanY(int value) {
        copyOnWrite();
        instance.setSpanY(value);
        return this;
      }
      /**
       * <code>optional int32 span_y = 2 [default = 1];</code>
       */
      public Builder clearSpanY() {
        copyOnWrite();
        instance.clearSpanY();
        return this;
      }

      /**
       * <code>optional int32 app_widget_id = 3;</code>
       */
      public boolean hasAppWidgetId() {
        return instance.hasAppWidgetId();
      }
      /**
       * <code>optional int32 app_widget_id = 3;</code>
       */
      public int getAppWidgetId() {
        return instance.getAppWidgetId();
      }
      /**
       * <code>optional int32 app_widget_id = 3;</code>
       */
      public Builder setAppWidgetId(int value) {
        copyOnWrite();
        instance.setAppWidgetId(value);
        return this;
      }
      /**
       * <code>optional int32 app_widget_id = 3;</code>
       */
      public Builder clearAppWidgetId() {
        copyOnWrite();
        instance.clearAppWidgetId();
        return this;
      }

      /**
       * <pre>
       * only populated during snapshot if from workspace
       * </pre>
       *
       * <code>optional string package_name = 4;</code>
       */
      public boolean hasPackageName() {
        return instance.hasPackageName();
      }
      /**
       * <pre>
       * only populated during snapshot if from workspace
       * </pre>
       *
       * <code>optional string package_name = 4;</code>
       */
      public java.lang.String getPackageName() {
        return instance.getPackageName();
      }
      /**
       * <pre>
       * only populated during snapshot if from workspace
       * </pre>
       *
       * <code>optional string package_name = 4;</code>
       */
      public com.google.protobuf.ByteString
          getPackageNameBytes() {
        return instance.getPackageNameBytes();
      }
      /**
       * <pre>
       * only populated during snapshot if from workspace
       * </pre>
       *
       * <code>optional string package_name = 4;</code>
       */
      public Builder setPackageName(
          java.lang.String value) {
        copyOnWrite();
        instance.setPackageName(value);
        return this;
      }
      /**
       * <pre>
       * only populated during snapshot if from workspace
       * </pre>
       *
       * <code>optional string package_name = 4;</code>
       */
      public Builder clearPackageName() {
        copyOnWrite();
        instance.clearPackageName();
        return this;
      }
      /**
       * <pre>
       * only populated during snapshot if from workspace
       * </pre>
       *
       * <code>optional string package_name = 4;</code>
       */
      public Builder setPackageNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPackageNameBytes(value);
        return this;
      }

      /**
       * <pre>
       * only populated during snapshot if from workspace
       * </pre>
       *
       * <code>optional string component_name = 5;</code>
       */
      public boolean hasComponentName() {
        return instance.hasComponentName();
      }
      /**
       * <pre>
       * only populated during snapshot if from workspace
       * </pre>
       *
       * <code>optional string component_name = 5;</code>
       */
      public java.lang.String getComponentName() {
        return instance.getComponentName();
      }
      /**
       * <pre>
       * only populated during snapshot if from workspace
       * </pre>
       *
       * <code>optional string component_name = 5;</code>
       */
      public com.google.protobuf.ByteString
          getComponentNameBytes() {
        return instance.getComponentNameBytes();
      }
      /**
       * <pre>
       * only populated during snapshot if from workspace
       * </pre>
       *
       * <code>optional string component_name = 5;</code>
       */
      public Builder setComponentName(
          java.lang.String value) {
        copyOnWrite();
        instance.setComponentName(value);
        return this;
      }
      /**
       * <pre>
       * only populated during snapshot if from workspace
       * </pre>
       *
       * <code>optional string component_name = 5;</code>
       */
      public Builder clearComponentName() {
        copyOnWrite();
        instance.clearComponentName();
        return this;
      }
      /**
       * <pre>
       * only populated during snapshot if from workspace
       * </pre>
       *
       * <code>optional string component_name = 5;</code>
       */
      public Builder setComponentNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setComponentNameBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Widget)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.android.launcher3.logger.LauncherAtom.Widget();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.android.launcher3.logger.LauncherAtom.Widget other = (com.android.launcher3.logger.LauncherAtom.Widget) arg1;
          spanX_ = visitor.visitInt(
              hasSpanX(), spanX_,
              other.hasSpanX(), other.spanX_);
          spanY_ = visitor.visitInt(
              hasSpanY(), spanY_,
              other.hasSpanY(), other.spanY_);
          appWidgetId_ = visitor.visitInt(
              hasAppWidgetId(), appWidgetId_,
              other.hasAppWidgetId(), other.appWidgetId_);
          packageName_ = visitor.visitString(
              hasPackageName(), packageName_,
              other.hasPackageName(), other.packageName_);
          componentName_ = visitor.visitString(
              hasComponentName(), componentName_,
              other.hasComponentName(), other.componentName_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  spanX_ = input.readInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  spanY_ = input.readInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  appWidgetId_ = input.readInt32();
                  break;
                }
                case 34: {
                  String s = input.readString();
                  bitField0_ |= 0x00000008;
                  packageName_ = s;
                  break;
                }
                case 42: {
                  String s = input.readString();
                  bitField0_ |= 0x00000010;
                  componentName_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.android.launcher3.logger.LauncherAtom.Widget.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:Widget)
    private static final com.android.launcher3.logger.LauncherAtom.Widget DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Widget();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.android.launcher3.logger.LauncherAtom.Widget getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Widget> PARSER;

    public static com.google.protobuf.Parser<Widget> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TaskOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Task)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string package_name = 1;</code>
     */
    boolean hasPackageName();
    /**
     * <code>optional string package_name = 1;</code>
     */
    java.lang.String getPackageName();
    /**
     * <code>optional string package_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getPackageNameBytes();

    /**
     * <code>optional string component_name = 2;</code>
     */
    boolean hasComponentName();
    /**
     * <code>optional string component_name = 2;</code>
     */
    java.lang.String getComponentName();
    /**
     * <code>optional string component_name = 2;</code>
     */
    com.google.protobuf.ByteString
        getComponentNameBytes();

    /**
     * <code>optional int32 index = 3;</code>
     */
    boolean hasIndex();
    /**
     * <code>optional int32 index = 3;</code>
     */
    int getIndex();
  }
  /**
   * <pre>
   * Tasks handled by PackageManager
   * </pre>
   *
   * Protobuf type {@code Task}
   */
  public  static final class Task extends
      com.google.protobuf.GeneratedMessageLite<
          Task, Task.Builder> implements
      // @@protoc_insertion_point(message_implements:Task)
      TaskOrBuilder {
    private Task() {
      packageName_ = "";
      componentName_ = "";
    }
    private int bitField0_;
    public static final int PACKAGE_NAME_FIELD_NUMBER = 1;
    private java.lang.String packageName_;
    /**
     * <code>optional string package_name = 1;</code>
     */
    public boolean hasPackageName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string package_name = 1;</code>
     */
    public java.lang.String getPackageName() {
      return packageName_;
    }
    /**
     * <code>optional string package_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPackageNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(packageName_);
    }
    /**
     * <code>optional string package_name = 1;</code>
     */
    private void setPackageName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      packageName_ = value;
    }
    /**
     * <code>optional string package_name = 1;</code>
     */
    private void clearPackageName() {
      bitField0_ = (bitField0_ & ~0x00000001);
      packageName_ = getDefaultInstance().getPackageName();
    }
    /**
     * <code>optional string package_name = 1;</code>
     */
    private void setPackageNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      packageName_ = value.toStringUtf8();
    }

    public static final int COMPONENT_NAME_FIELD_NUMBER = 2;
    private java.lang.String componentName_;
    /**
     * <code>optional string component_name = 2;</code>
     */
    public boolean hasComponentName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string component_name = 2;</code>
     */
    public java.lang.String getComponentName() {
      return componentName_;
    }
    /**
     * <code>optional string component_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getComponentNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(componentName_);
    }
    /**
     * <code>optional string component_name = 2;</code>
     */
    private void setComponentName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      componentName_ = value;
    }
    /**
     * <code>optional string component_name = 2;</code>
     */
    private void clearComponentName() {
      bitField0_ = (bitField0_ & ~0x00000002);
      componentName_ = getDefaultInstance().getComponentName();
    }
    /**
     * <code>optional string component_name = 2;</code>
     */
    private void setComponentNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      componentName_ = value.toStringUtf8();
    }

    public static final int INDEX_FIELD_NUMBER = 3;
    private int index_;
    /**
     * <code>optional int32 index = 3;</code>
     */
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 index = 3;</code>
     */
    public int getIndex() {
      return index_;
    }
    /**
     * <code>optional int32 index = 3;</code>
     */
    private void setIndex(int value) {
      bitField0_ |= 0x00000004;
      index_ = value;
    }
    /**
     * <code>optional int32 index = 3;</code>
     */
    private void clearIndex() {
      bitField0_ = (bitField0_ & ~0x00000004);
      index_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getPackageName());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getComponentName());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, index_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getPackageName());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getComponentName());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, index_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.android.launcher3.logger.LauncherAtom.Task parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.Task parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.Task parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.Task parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.Task parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.Task parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.Task parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.Task parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.Task parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.Task parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.launcher3.logger.LauncherAtom.Task prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Tasks handled by PackageManager
     * </pre>
     *
     * Protobuf type {@code Task}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.android.launcher3.logger.LauncherAtom.Task, Builder> implements
        // @@protoc_insertion_point(builder_implements:Task)
        com.android.launcher3.logger.LauncherAtom.TaskOrBuilder {
      // Construct using com.android.launcher3.logger.LauncherAtom.Task.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string package_name = 1;</code>
       */
      public boolean hasPackageName() {
        return instance.hasPackageName();
      }
      /**
       * <code>optional string package_name = 1;</code>
       */
      public java.lang.String getPackageName() {
        return instance.getPackageName();
      }
      /**
       * <code>optional string package_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPackageNameBytes() {
        return instance.getPackageNameBytes();
      }
      /**
       * <code>optional string package_name = 1;</code>
       */
      public Builder setPackageName(
          java.lang.String value) {
        copyOnWrite();
        instance.setPackageName(value);
        return this;
      }
      /**
       * <code>optional string package_name = 1;</code>
       */
      public Builder clearPackageName() {
        copyOnWrite();
        instance.clearPackageName();
        return this;
      }
      /**
       * <code>optional string package_name = 1;</code>
       */
      public Builder setPackageNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPackageNameBytes(value);
        return this;
      }

      /**
       * <code>optional string component_name = 2;</code>
       */
      public boolean hasComponentName() {
        return instance.hasComponentName();
      }
      /**
       * <code>optional string component_name = 2;</code>
       */
      public java.lang.String getComponentName() {
        return instance.getComponentName();
      }
      /**
       * <code>optional string component_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getComponentNameBytes() {
        return instance.getComponentNameBytes();
      }
      /**
       * <code>optional string component_name = 2;</code>
       */
      public Builder setComponentName(
          java.lang.String value) {
        copyOnWrite();
        instance.setComponentName(value);
        return this;
      }
      /**
       * <code>optional string component_name = 2;</code>
       */
      public Builder clearComponentName() {
        copyOnWrite();
        instance.clearComponentName();
        return this;
      }
      /**
       * <code>optional string component_name = 2;</code>
       */
      public Builder setComponentNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setComponentNameBytes(value);
        return this;
      }

      /**
       * <code>optional int32 index = 3;</code>
       */
      public boolean hasIndex() {
        return instance.hasIndex();
      }
      /**
       * <code>optional int32 index = 3;</code>
       */
      public int getIndex() {
        return instance.getIndex();
      }
      /**
       * <code>optional int32 index = 3;</code>
       */
      public Builder setIndex(int value) {
        copyOnWrite();
        instance.setIndex(value);
        return this;
      }
      /**
       * <code>optional int32 index = 3;</code>
       */
      public Builder clearIndex() {
        copyOnWrite();
        instance.clearIndex();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Task)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.android.launcher3.logger.LauncherAtom.Task();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.android.launcher3.logger.LauncherAtom.Task other = (com.android.launcher3.logger.LauncherAtom.Task) arg1;
          packageName_ = visitor.visitString(
              hasPackageName(), packageName_,
              other.hasPackageName(), other.packageName_);
          componentName_ = visitor.visitString(
              hasComponentName(), componentName_,
              other.hasComponentName(), other.componentName_);
          index_ = visitor.visitInt(
              hasIndex(), index_,
              other.hasIndex(), other.index_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  packageName_ = s;
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  componentName_ = s;
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  index_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.android.launcher3.logger.LauncherAtom.Task.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:Task)
    private static final com.android.launcher3.logger.LauncherAtom.Task DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Task();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.android.launcher3.logger.LauncherAtom.Task getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Task> PARSER;

    public static com.google.protobuf.Parser<Task> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface FolderIconOrBuilder extends
      // @@protoc_insertion_point(interface_extends:FolderIcon)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Number of items inside folder.
     * </pre>
     *
     * <code>optional int32 cardinality = 1;</code>
     */
    boolean hasCardinality();
    /**
     * <pre>
     * Number of items inside folder.
     * </pre>
     *
     * <code>optional int32 cardinality = 1;</code>
     */
    int getCardinality();

    /**
     * <pre>
     * State of the folder label before the event.
     * </pre>
     *
     * <code>optional .FromState from_label_state = 2;</code>
     */
    boolean hasFromLabelState();
    /**
     * <pre>
     * State of the folder label before the event.
     * </pre>
     *
     * <code>optional .FromState from_label_state = 2;</code>
     */
    com.android.launcher3.logger.LauncherAtom.FromState getFromLabelState();

    /**
     * <pre>
     * State of the folder label after the event.
     * </pre>
     *
     * <code>optional .ToState to_label_state = 3;</code>
     */
    boolean hasToLabelState();
    /**
     * <pre>
     * State of the folder label after the event.
     * </pre>
     *
     * <code>optional .ToState to_label_state = 3;</code>
     */
    com.android.launcher3.logger.LauncherAtom.ToState getToLabelState();

    /**
     * <pre>
     * Details about actual folder label.
     * Populated when folder label is not a PII.
     * </pre>
     *
     * <code>optional string label_info = 4;</code>
     */
    boolean hasLabelInfo();
    /**
     * <pre>
     * Details about actual folder label.
     * Populated when folder label is not a PII.
     * </pre>
     *
     * <code>optional string label_info = 4;</code>
     */
    java.lang.String getLabelInfo();
    /**
     * <pre>
     * Details about actual folder label.
     * Populated when folder label is not a PII.
     * </pre>
     *
     * <code>optional string label_info = 4;</code>
     */
    com.google.protobuf.ByteString
        getLabelInfoBytes();
  }
  /**
   * <pre>
   * Represents folder in a closed state.
   * </pre>
   *
   * Protobuf type {@code FolderIcon}
   */
  public  static final class FolderIcon extends
      com.google.protobuf.GeneratedMessageLite<
          FolderIcon, FolderIcon.Builder> implements
      // @@protoc_insertion_point(message_implements:FolderIcon)
      FolderIconOrBuilder {
    private FolderIcon() {
      labelInfo_ = "";
    }
    private int bitField0_;
    public static final int CARDINALITY_FIELD_NUMBER = 1;
    private int cardinality_;
    /**
     * <pre>
     * Number of items inside folder.
     * </pre>
     *
     * <code>optional int32 cardinality = 1;</code>
     */
    public boolean hasCardinality() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Number of items inside folder.
     * </pre>
     *
     * <code>optional int32 cardinality = 1;</code>
     */
    public int getCardinality() {
      return cardinality_;
    }
    /**
     * <pre>
     * Number of items inside folder.
     * </pre>
     *
     * <code>optional int32 cardinality = 1;</code>
     */
    private void setCardinality(int value) {
      bitField0_ |= 0x00000001;
      cardinality_ = value;
    }
    /**
     * <pre>
     * Number of items inside folder.
     * </pre>
     *
     * <code>optional int32 cardinality = 1;</code>
     */
    private void clearCardinality() {
      bitField0_ = (bitField0_ & ~0x00000001);
      cardinality_ = 0;
    }

    public static final int FROM_LABEL_STATE_FIELD_NUMBER = 2;
    private int fromLabelState_;
    /**
     * <pre>
     * State of the folder label before the event.
     * </pre>
     *
     * <code>optional .FromState from_label_state = 2;</code>
     */
    public boolean hasFromLabelState() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * State of the folder label before the event.
     * </pre>
     *
     * <code>optional .FromState from_label_state = 2;</code>
     */
    public com.android.launcher3.logger.LauncherAtom.FromState getFromLabelState() {
      com.android.launcher3.logger.LauncherAtom.FromState result = com.android.launcher3.logger.LauncherAtom.FromState.forNumber(fromLabelState_);
      return result == null ? com.android.launcher3.logger.LauncherAtom.FromState.FROM_STATE_UNSPECIFIED : result;
    }
    /**
     * <pre>
     * State of the folder label before the event.
     * </pre>
     *
     * <code>optional .FromState from_label_state = 2;</code>
     */
    private void setFromLabelState(com.android.launcher3.logger.LauncherAtom.FromState value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      fromLabelState_ = value.getNumber();
    }
    /**
     * <pre>
     * State of the folder label before the event.
     * </pre>
     *
     * <code>optional .FromState from_label_state = 2;</code>
     */
    private void clearFromLabelState() {
      bitField0_ = (bitField0_ & ~0x00000002);
      fromLabelState_ = 0;
    }

    public static final int TO_LABEL_STATE_FIELD_NUMBER = 3;
    private int toLabelState_;
    /**
     * <pre>
     * State of the folder label after the event.
     * </pre>
     *
     * <code>optional .ToState to_label_state = 3;</code>
     */
    public boolean hasToLabelState() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * State of the folder label after the event.
     * </pre>
     *
     * <code>optional .ToState to_label_state = 3;</code>
     */
    public com.android.launcher3.logger.LauncherAtom.ToState getToLabelState() {
      com.android.launcher3.logger.LauncherAtom.ToState result = com.android.launcher3.logger.LauncherAtom.ToState.forNumber(toLabelState_);
      return result == null ? com.android.launcher3.logger.LauncherAtom.ToState.TO_STATE_UNSPECIFIED : result;
    }
    /**
     * <pre>
     * State of the folder label after the event.
     * </pre>
     *
     * <code>optional .ToState to_label_state = 3;</code>
     */
    private void setToLabelState(com.android.launcher3.logger.LauncherAtom.ToState value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      toLabelState_ = value.getNumber();
    }
    /**
     * <pre>
     * State of the folder label after the event.
     * </pre>
     *
     * <code>optional .ToState to_label_state = 3;</code>
     */
    private void clearToLabelState() {
      bitField0_ = (bitField0_ & ~0x00000004);
      toLabelState_ = 0;
    }

    public static final int LABEL_INFO_FIELD_NUMBER = 4;
    private java.lang.String labelInfo_;
    /**
     * <pre>
     * Details about actual folder label.
     * Populated when folder label is not a PII.
     * </pre>
     *
     * <code>optional string label_info = 4;</code>
     */
    public boolean hasLabelInfo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Details about actual folder label.
     * Populated when folder label is not a PII.
     * </pre>
     *
     * <code>optional string label_info = 4;</code>
     */
    public java.lang.String getLabelInfo() {
      return labelInfo_;
    }
    /**
     * <pre>
     * Details about actual folder label.
     * Populated when folder label is not a PII.
     * </pre>
     *
     * <code>optional string label_info = 4;</code>
     */
    public com.google.protobuf.ByteString
        getLabelInfoBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(labelInfo_);
    }
    /**
     * <pre>
     * Details about actual folder label.
     * Populated when folder label is not a PII.
     * </pre>
     *
     * <code>optional string label_info = 4;</code>
     */
    private void setLabelInfo(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      labelInfo_ = value;
    }
    /**
     * <pre>
     * Details about actual folder label.
     * Populated when folder label is not a PII.
     * </pre>
     *
     * <code>optional string label_info = 4;</code>
     */
    private void clearLabelInfo() {
      bitField0_ = (bitField0_ & ~0x00000008);
      labelInfo_ = getDefaultInstance().getLabelInfo();
    }
    /**
     * <pre>
     * Details about actual folder label.
     * Populated when folder label is not a PII.
     * </pre>
     *
     * <code>optional string label_info = 4;</code>
     */
    private void setLabelInfoBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      labelInfo_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, cardinality_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, fromLabelState_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, toLabelState_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeString(4, getLabelInfo());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cardinality_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, fromLabelState_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, toLabelState_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getLabelInfo());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.android.launcher3.logger.LauncherAtom.FolderIcon parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.FolderIcon parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.FolderIcon parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.FolderIcon parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.FolderIcon parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.FolderIcon parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.FolderIcon parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.FolderIcon parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.FolderIcon parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.FolderIcon parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.launcher3.logger.LauncherAtom.FolderIcon prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Represents folder in a closed state.
     * </pre>
     *
     * Protobuf type {@code FolderIcon}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.android.launcher3.logger.LauncherAtom.FolderIcon, Builder> implements
        // @@protoc_insertion_point(builder_implements:FolderIcon)
        com.android.launcher3.logger.LauncherAtom.FolderIconOrBuilder {
      // Construct using com.android.launcher3.logger.LauncherAtom.FolderIcon.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Number of items inside folder.
       * </pre>
       *
       * <code>optional int32 cardinality = 1;</code>
       */
      public boolean hasCardinality() {
        return instance.hasCardinality();
      }
      /**
       * <pre>
       * Number of items inside folder.
       * </pre>
       *
       * <code>optional int32 cardinality = 1;</code>
       */
      public int getCardinality() {
        return instance.getCardinality();
      }
      /**
       * <pre>
       * Number of items inside folder.
       * </pre>
       *
       * <code>optional int32 cardinality = 1;</code>
       */
      public Builder setCardinality(int value) {
        copyOnWrite();
        instance.setCardinality(value);
        return this;
      }
      /**
       * <pre>
       * Number of items inside folder.
       * </pre>
       *
       * <code>optional int32 cardinality = 1;</code>
       */
      public Builder clearCardinality() {
        copyOnWrite();
        instance.clearCardinality();
        return this;
      }

      /**
       * <pre>
       * State of the folder label before the event.
       * </pre>
       *
       * <code>optional .FromState from_label_state = 2;</code>
       */
      public boolean hasFromLabelState() {
        return instance.hasFromLabelState();
      }
      /**
       * <pre>
       * State of the folder label before the event.
       * </pre>
       *
       * <code>optional .FromState from_label_state = 2;</code>
       */
      public com.android.launcher3.logger.LauncherAtom.FromState getFromLabelState() {
        return instance.getFromLabelState();
      }
      /**
       * <pre>
       * State of the folder label before the event.
       * </pre>
       *
       * <code>optional .FromState from_label_state = 2;</code>
       */
      public Builder setFromLabelState(com.android.launcher3.logger.LauncherAtom.FromState value) {
        copyOnWrite();
        instance.setFromLabelState(value);
        return this;
      }
      /**
       * <pre>
       * State of the folder label before the event.
       * </pre>
       *
       * <code>optional .FromState from_label_state = 2;</code>
       */
      public Builder clearFromLabelState() {
        copyOnWrite();
        instance.clearFromLabelState();
        return this;
      }

      /**
       * <pre>
       * State of the folder label after the event.
       * </pre>
       *
       * <code>optional .ToState to_label_state = 3;</code>
       */
      public boolean hasToLabelState() {
        return instance.hasToLabelState();
      }
      /**
       * <pre>
       * State of the folder label after the event.
       * </pre>
       *
       * <code>optional .ToState to_label_state = 3;</code>
       */
      public com.android.launcher3.logger.LauncherAtom.ToState getToLabelState() {
        return instance.getToLabelState();
      }
      /**
       * <pre>
       * State of the folder label after the event.
       * </pre>
       *
       * <code>optional .ToState to_label_state = 3;</code>
       */
      public Builder setToLabelState(com.android.launcher3.logger.LauncherAtom.ToState value) {
        copyOnWrite();
        instance.setToLabelState(value);
        return this;
      }
      /**
       * <pre>
       * State of the folder label after the event.
       * </pre>
       *
       * <code>optional .ToState to_label_state = 3;</code>
       */
      public Builder clearToLabelState() {
        copyOnWrite();
        instance.clearToLabelState();
        return this;
      }

      /**
       * <pre>
       * Details about actual folder label.
       * Populated when folder label is not a PII.
       * </pre>
       *
       * <code>optional string label_info = 4;</code>
       */
      public boolean hasLabelInfo() {
        return instance.hasLabelInfo();
      }
      /**
       * <pre>
       * Details about actual folder label.
       * Populated when folder label is not a PII.
       * </pre>
       *
       * <code>optional string label_info = 4;</code>
       */
      public java.lang.String getLabelInfo() {
        return instance.getLabelInfo();
      }
      /**
       * <pre>
       * Details about actual folder label.
       * Populated when folder label is not a PII.
       * </pre>
       *
       * <code>optional string label_info = 4;</code>
       */
      public com.google.protobuf.ByteString
          getLabelInfoBytes() {
        return instance.getLabelInfoBytes();
      }
      /**
       * <pre>
       * Details about actual folder label.
       * Populated when folder label is not a PII.
       * </pre>
       *
       * <code>optional string label_info = 4;</code>
       */
      public Builder setLabelInfo(
          java.lang.String value) {
        copyOnWrite();
        instance.setLabelInfo(value);
        return this;
      }
      /**
       * <pre>
       * Details about actual folder label.
       * Populated when folder label is not a PII.
       * </pre>
       *
       * <code>optional string label_info = 4;</code>
       */
      public Builder clearLabelInfo() {
        copyOnWrite();
        instance.clearLabelInfo();
        return this;
      }
      /**
       * <pre>
       * Details about actual folder label.
       * Populated when folder label is not a PII.
       * </pre>
       *
       * <code>optional string label_info = 4;</code>
       */
      public Builder setLabelInfoBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setLabelInfoBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FolderIcon)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.android.launcher3.logger.LauncherAtom.FolderIcon();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.android.launcher3.logger.LauncherAtom.FolderIcon other = (com.android.launcher3.logger.LauncherAtom.FolderIcon) arg1;
          cardinality_ = visitor.visitInt(
              hasCardinality(), cardinality_,
              other.hasCardinality(), other.cardinality_);
          fromLabelState_ = visitor.visitInt(hasFromLabelState(), fromLabelState_,
              other.hasFromLabelState(), other.fromLabelState_);
          toLabelState_ = visitor.visitInt(hasToLabelState(), toLabelState_,
              other.hasToLabelState(), other.toLabelState_);
          labelInfo_ = visitor.visitString(
              hasLabelInfo(), labelInfo_,
              other.hasLabelInfo(), other.labelInfo_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  cardinality_ = input.readInt32();
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();
                  com.android.launcher3.logger.LauncherAtom.FromState value = com.android.launcher3.logger.LauncherAtom.FromState.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(2, rawValue);
                  } else {
                    bitField0_ |= 0x00000002;
                    fromLabelState_ = rawValue;
                  }
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();
                  com.android.launcher3.logger.LauncherAtom.ToState value = com.android.launcher3.logger.LauncherAtom.ToState.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(3, rawValue);
                  } else {
                    bitField0_ |= 0x00000004;
                    toLabelState_ = rawValue;
                  }
                  break;
                }
                case 34: {
                  String s = input.readString();
                  bitField0_ |= 0x00000008;
                  labelInfo_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.android.launcher3.logger.LauncherAtom.FolderIcon.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:FolderIcon)
    private static final com.android.launcher3.logger.LauncherAtom.FolderIcon DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new FolderIcon();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.android.launcher3.logger.LauncherAtom.FolderIcon getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<FolderIcon> PARSER;

    public static com.google.protobuf.Parser<FolderIcon> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface WorkspaceContainerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:WorkspaceContainer)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * range [-1, l], 0 is the index of the main homescreen
     * </pre>
     *
     * <code>optional int32 page_index = 1 [default = -2];</code>
     */
    boolean hasPageIndex();
    /**
     * <pre>
     * range [-1, l], 0 is the index of the main homescreen
     * </pre>
     *
     * <code>optional int32 page_index = 1 [default = -2];</code>
     */
    int getPageIndex();

    /**
     * <pre>
     * [0, m], m varies based on the display density and resolution
     * </pre>
     *
     * <code>optional int32 grid_x = 2 [default = -1];</code>
     */
    boolean hasGridX();
    /**
     * <pre>
     * [0, m], m varies based on the display density and resolution
     * </pre>
     *
     * <code>optional int32 grid_x = 2 [default = -1];</code>
     */
    int getGridX();

    /**
     * <pre>
     * [0, n], n varies based on the display density and resolution
     * </pre>
     *
     * <code>optional int32 grid_y = 3 [default = -1];</code>
     */
    boolean hasGridY();
    /**
     * <pre>
     * [0, n], n varies based on the display density and resolution
     * </pre>
     *
     * <code>optional int32 grid_y = 3 [default = -1];</code>
     */
    int getGridY();
  }
  /**
   * Protobuf type {@code WorkspaceContainer}
   */
  public  static final class WorkspaceContainer extends
      com.google.protobuf.GeneratedMessageLite<
          WorkspaceContainer, WorkspaceContainer.Builder> implements
      // @@protoc_insertion_point(message_implements:WorkspaceContainer)
      WorkspaceContainerOrBuilder {
    private WorkspaceContainer() {
      pageIndex_ = -2;
      gridX_ = -1;
      gridY_ = -1;
    }
    private int bitField0_;
    public static final int PAGE_INDEX_FIELD_NUMBER = 1;
    private int pageIndex_;
    /**
     * <pre>
     * range [-1, l], 0 is the index of the main homescreen
     * </pre>
     *
     * <code>optional int32 page_index = 1 [default = -2];</code>
     */
    public boolean hasPageIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * range [-1, l], 0 is the index of the main homescreen
     * </pre>
     *
     * <code>optional int32 page_index = 1 [default = -2];</code>
     */
    public int getPageIndex() {
      return pageIndex_;
    }
    /**
     * <pre>
     * range [-1, l], 0 is the index of the main homescreen
     * </pre>
     *
     * <code>optional int32 page_index = 1 [default = -2];</code>
     */
    private void setPageIndex(int value) {
      bitField0_ |= 0x00000001;
      pageIndex_ = value;
    }
    /**
     * <pre>
     * range [-1, l], 0 is the index of the main homescreen
     * </pre>
     *
     * <code>optional int32 page_index = 1 [default = -2];</code>
     */
    private void clearPageIndex() {
      bitField0_ = (bitField0_ & ~0x00000001);
      pageIndex_ = -2;
    }

    public static final int GRID_X_FIELD_NUMBER = 2;
    private int gridX_;
    /**
     * <pre>
     * [0, m], m varies based on the display density and resolution
     * </pre>
     *
     * <code>optional int32 grid_x = 2 [default = -1];</code>
     */
    public boolean hasGridX() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * [0, m], m varies based on the display density and resolution
     * </pre>
     *
     * <code>optional int32 grid_x = 2 [default = -1];</code>
     */
    public int getGridX() {
      return gridX_;
    }
    /**
     * <pre>
     * [0, m], m varies based on the display density and resolution
     * </pre>
     *
     * <code>optional int32 grid_x = 2 [default = -1];</code>
     */
    private void setGridX(int value) {
      bitField0_ |= 0x00000002;
      gridX_ = value;
    }
    /**
     * <pre>
     * [0, m], m varies based on the display density and resolution
     * </pre>
     *
     * <code>optional int32 grid_x = 2 [default = -1];</code>
     */
    private void clearGridX() {
      bitField0_ = (bitField0_ & ~0x00000002);
      gridX_ = -1;
    }

    public static final int GRID_Y_FIELD_NUMBER = 3;
    private int gridY_;
    /**
     * <pre>
     * [0, n], n varies based on the display density and resolution
     * </pre>
     *
     * <code>optional int32 grid_y = 3 [default = -1];</code>
     */
    public boolean hasGridY() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * [0, n], n varies based on the display density and resolution
     * </pre>
     *
     * <code>optional int32 grid_y = 3 [default = -1];</code>
     */
    public int getGridY() {
      return gridY_;
    }
    /**
     * <pre>
     * [0, n], n varies based on the display density and resolution
     * </pre>
     *
     * <code>optional int32 grid_y = 3 [default = -1];</code>
     */
    private void setGridY(int value) {
      bitField0_ |= 0x00000004;
      gridY_ = value;
    }
    /**
     * <pre>
     * [0, n], n varies based on the display density and resolution
     * </pre>
     *
     * <code>optional int32 grid_y = 3 [default = -1];</code>
     */
    private void clearGridY() {
      bitField0_ = (bitField0_ & ~0x00000004);
      gridY_ = -1;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, pageIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, gridX_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, gridY_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, pageIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, gridX_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, gridY_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.android.launcher3.logger.LauncherAtom.WorkspaceContainer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.WorkspaceContainer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.WorkspaceContainer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.WorkspaceContainer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.WorkspaceContainer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.WorkspaceContainer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.WorkspaceContainer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.WorkspaceContainer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.WorkspaceContainer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.WorkspaceContainer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.launcher3.logger.LauncherAtom.WorkspaceContainer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code WorkspaceContainer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.android.launcher3.logger.LauncherAtom.WorkspaceContainer, Builder> implements
        // @@protoc_insertion_point(builder_implements:WorkspaceContainer)
        com.android.launcher3.logger.LauncherAtom.WorkspaceContainerOrBuilder {
      // Construct using com.android.launcher3.logger.LauncherAtom.WorkspaceContainer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * range [-1, l], 0 is the index of the main homescreen
       * </pre>
       *
       * <code>optional int32 page_index = 1 [default = -2];</code>
       */
      public boolean hasPageIndex() {
        return instance.hasPageIndex();
      }
      /**
       * <pre>
       * range [-1, l], 0 is the index of the main homescreen
       * </pre>
       *
       * <code>optional int32 page_index = 1 [default = -2];</code>
       */
      public int getPageIndex() {
        return instance.getPageIndex();
      }
      /**
       * <pre>
       * range [-1, l], 0 is the index of the main homescreen
       * </pre>
       *
       * <code>optional int32 page_index = 1 [default = -2];</code>
       */
      public Builder setPageIndex(int value) {
        copyOnWrite();
        instance.setPageIndex(value);
        return this;
      }
      /**
       * <pre>
       * range [-1, l], 0 is the index of the main homescreen
       * </pre>
       *
       * <code>optional int32 page_index = 1 [default = -2];</code>
       */
      public Builder clearPageIndex() {
        copyOnWrite();
        instance.clearPageIndex();
        return this;
      }

      /**
       * <pre>
       * [0, m], m varies based on the display density and resolution
       * </pre>
       *
       * <code>optional int32 grid_x = 2 [default = -1];</code>
       */
      public boolean hasGridX() {
        return instance.hasGridX();
      }
      /**
       * <pre>
       * [0, m], m varies based on the display density and resolution
       * </pre>
       *
       * <code>optional int32 grid_x = 2 [default = -1];</code>
       */
      public int getGridX() {
        return instance.getGridX();
      }
      /**
       * <pre>
       * [0, m], m varies based on the display density and resolution
       * </pre>
       *
       * <code>optional int32 grid_x = 2 [default = -1];</code>
       */
      public Builder setGridX(int value) {
        copyOnWrite();
        instance.setGridX(value);
        return this;
      }
      /**
       * <pre>
       * [0, m], m varies based on the display density and resolution
       * </pre>
       *
       * <code>optional int32 grid_x = 2 [default = -1];</code>
       */
      public Builder clearGridX() {
        copyOnWrite();
        instance.clearGridX();
        return this;
      }

      /**
       * <pre>
       * [0, n], n varies based on the display density and resolution
       * </pre>
       *
       * <code>optional int32 grid_y = 3 [default = -1];</code>
       */
      public boolean hasGridY() {
        return instance.hasGridY();
      }
      /**
       * <pre>
       * [0, n], n varies based on the display density and resolution
       * </pre>
       *
       * <code>optional int32 grid_y = 3 [default = -1];</code>
       */
      public int getGridY() {
        return instance.getGridY();
      }
      /**
       * <pre>
       * [0, n], n varies based on the display density and resolution
       * </pre>
       *
       * <code>optional int32 grid_y = 3 [default = -1];</code>
       */
      public Builder setGridY(int value) {
        copyOnWrite();
        instance.setGridY(value);
        return this;
      }
      /**
       * <pre>
       * [0, n], n varies based on the display density and resolution
       * </pre>
       *
       * <code>optional int32 grid_y = 3 [default = -1];</code>
       */
      public Builder clearGridY() {
        copyOnWrite();
        instance.clearGridY();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:WorkspaceContainer)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.android.launcher3.logger.LauncherAtom.WorkspaceContainer();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.android.launcher3.logger.LauncherAtom.WorkspaceContainer other = (com.android.launcher3.logger.LauncherAtom.WorkspaceContainer) arg1;
          pageIndex_ = visitor.visitInt(
              hasPageIndex(), pageIndex_,
              other.hasPageIndex(), other.pageIndex_);
          gridX_ = visitor.visitInt(
              hasGridX(), gridX_,
              other.hasGridX(), other.gridX_);
          gridY_ = visitor.visitInt(
              hasGridY(), gridY_,
              other.hasGridY(), other.gridY_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  pageIndex_ = input.readInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  gridX_ = input.readInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  gridY_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.android.launcher3.logger.LauncherAtom.WorkspaceContainer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:WorkspaceContainer)
    private static final com.android.launcher3.logger.LauncherAtom.WorkspaceContainer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new WorkspaceContainer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.android.launcher3.logger.LauncherAtom.WorkspaceContainer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<WorkspaceContainer> PARSER;

    public static com.google.protobuf.Parser<WorkspaceContainer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface HotseatContainerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:HotseatContainer)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional int32 index = 1;</code>
     */
    boolean hasIndex();
    /**
     * <code>optional int32 index = 1;</code>
     */
    int getIndex();
  }
  /**
   * Protobuf type {@code HotseatContainer}
   */
  public  static final class HotseatContainer extends
      com.google.protobuf.GeneratedMessageLite<
          HotseatContainer, HotseatContainer.Builder> implements
      // @@protoc_insertion_point(message_implements:HotseatContainer)
      HotseatContainerOrBuilder {
    private HotseatContainer() {
    }
    private int bitField0_;
    public static final int INDEX_FIELD_NUMBER = 1;
    private int index_;
    /**
     * <code>optional int32 index = 1;</code>
     */
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 index = 1;</code>
     */
    public int getIndex() {
      return index_;
    }
    /**
     * <code>optional int32 index = 1;</code>
     */
    private void setIndex(int value) {
      bitField0_ |= 0x00000001;
      index_ = value;
    }
    /**
     * <code>optional int32 index = 1;</code>
     */
    private void clearIndex() {
      bitField0_ = (bitField0_ & ~0x00000001);
      index_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, index_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, index_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.android.launcher3.logger.LauncherAtom.HotseatContainer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.HotseatContainer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.HotseatContainer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.HotseatContainer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.HotseatContainer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.HotseatContainer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.HotseatContainer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.HotseatContainer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.HotseatContainer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.HotseatContainer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.launcher3.logger.LauncherAtom.HotseatContainer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code HotseatContainer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.android.launcher3.logger.LauncherAtom.HotseatContainer, Builder> implements
        // @@protoc_insertion_point(builder_implements:HotseatContainer)
        com.android.launcher3.logger.LauncherAtom.HotseatContainerOrBuilder {
      // Construct using com.android.launcher3.logger.LauncherAtom.HotseatContainer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional int32 index = 1;</code>
       */
      public boolean hasIndex() {
        return instance.hasIndex();
      }
      /**
       * <code>optional int32 index = 1;</code>
       */
      public int getIndex() {
        return instance.getIndex();
      }
      /**
       * <code>optional int32 index = 1;</code>
       */
      public Builder setIndex(int value) {
        copyOnWrite();
        instance.setIndex(value);
        return this;
      }
      /**
       * <code>optional int32 index = 1;</code>
       */
      public Builder clearIndex() {
        copyOnWrite();
        instance.clearIndex();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:HotseatContainer)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.android.launcher3.logger.LauncherAtom.HotseatContainer();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.android.launcher3.logger.LauncherAtom.HotseatContainer other = (com.android.launcher3.logger.LauncherAtom.HotseatContainer) arg1;
          index_ = visitor.visitInt(
              hasIndex(), index_,
              other.hasIndex(), other.index_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  index_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.android.launcher3.logger.LauncherAtom.HotseatContainer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:HotseatContainer)
    private static final com.android.launcher3.logger.LauncherAtom.HotseatContainer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HotseatContainer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.android.launcher3.logger.LauncherAtom.HotseatContainer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<HotseatContainer> PARSER;

    public static com.google.protobuf.Parser<HotseatContainer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PredictedHotseatContainerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PredictedHotseatContainer)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional int32 index = 1;</code>
     */
    boolean hasIndex();
    /**
     * <code>optional int32 index = 1;</code>
     */
    int getIndex();

    /**
     * <pre>
     * No of hotseat positions filled with predicted items.
     * </pre>
     *
     * <code>optional int32 cardinality = 2;</code>
     */
    boolean hasCardinality();
    /**
     * <pre>
     * No of hotseat positions filled with predicted items.
     * </pre>
     *
     * <code>optional int32 cardinality = 2;</code>
     */
    int getCardinality();
  }
  /**
   * <pre>
   * Represents hotseat container with prediction feature enabled.
   * </pre>
   *
   * Protobuf type {@code PredictedHotseatContainer}
   */
  public  static final class PredictedHotseatContainer extends
      com.google.protobuf.GeneratedMessageLite<
          PredictedHotseatContainer, PredictedHotseatContainer.Builder> implements
      // @@protoc_insertion_point(message_implements:PredictedHotseatContainer)
      PredictedHotseatContainerOrBuilder {
    private PredictedHotseatContainer() {
    }
    private int bitField0_;
    public static final int INDEX_FIELD_NUMBER = 1;
    private int index_;
    /**
     * <code>optional int32 index = 1;</code>
     */
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 index = 1;</code>
     */
    public int getIndex() {
      return index_;
    }
    /**
     * <code>optional int32 index = 1;</code>
     */
    private void setIndex(int value) {
      bitField0_ |= 0x00000001;
      index_ = value;
    }
    /**
     * <code>optional int32 index = 1;</code>
     */
    private void clearIndex() {
      bitField0_ = (bitField0_ & ~0x00000001);
      index_ = 0;
    }

    public static final int CARDINALITY_FIELD_NUMBER = 2;
    private int cardinality_;
    /**
     * <pre>
     * No of hotseat positions filled with predicted items.
     * </pre>
     *
     * <code>optional int32 cardinality = 2;</code>
     */
    public boolean hasCardinality() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * No of hotseat positions filled with predicted items.
     * </pre>
     *
     * <code>optional int32 cardinality = 2;</code>
     */
    public int getCardinality() {
      return cardinality_;
    }
    /**
     * <pre>
     * No of hotseat positions filled with predicted items.
     * </pre>
     *
     * <code>optional int32 cardinality = 2;</code>
     */
    private void setCardinality(int value) {
      bitField0_ |= 0x00000002;
      cardinality_ = value;
    }
    /**
     * <pre>
     * No of hotseat positions filled with predicted items.
     * </pre>
     *
     * <code>optional int32 cardinality = 2;</code>
     */
    private void clearCardinality() {
      bitField0_ = (bitField0_ & ~0x00000002);
      cardinality_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, index_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, cardinality_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, index_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, cardinality_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Represents hotseat container with prediction feature enabled.
     * </pre>
     *
     * Protobuf type {@code PredictedHotseatContainer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer, Builder> implements
        // @@protoc_insertion_point(builder_implements:PredictedHotseatContainer)
        com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainerOrBuilder {
      // Construct using com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional int32 index = 1;</code>
       */
      public boolean hasIndex() {
        return instance.hasIndex();
      }
      /**
       * <code>optional int32 index = 1;</code>
       */
      public int getIndex() {
        return instance.getIndex();
      }
      /**
       * <code>optional int32 index = 1;</code>
       */
      public Builder setIndex(int value) {
        copyOnWrite();
        instance.setIndex(value);
        return this;
      }
      /**
       * <code>optional int32 index = 1;</code>
       */
      public Builder clearIndex() {
        copyOnWrite();
        instance.clearIndex();
        return this;
      }

      /**
       * <pre>
       * No of hotseat positions filled with predicted items.
       * </pre>
       *
       * <code>optional int32 cardinality = 2;</code>
       */
      public boolean hasCardinality() {
        return instance.hasCardinality();
      }
      /**
       * <pre>
       * No of hotseat positions filled with predicted items.
       * </pre>
       *
       * <code>optional int32 cardinality = 2;</code>
       */
      public int getCardinality() {
        return instance.getCardinality();
      }
      /**
       * <pre>
       * No of hotseat positions filled with predicted items.
       * </pre>
       *
       * <code>optional int32 cardinality = 2;</code>
       */
      public Builder setCardinality(int value) {
        copyOnWrite();
        instance.setCardinality(value);
        return this;
      }
      /**
       * <pre>
       * No of hotseat positions filled with predicted items.
       * </pre>
       *
       * <code>optional int32 cardinality = 2;</code>
       */
      public Builder clearCardinality() {
        copyOnWrite();
        instance.clearCardinality();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PredictedHotseatContainer)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer other = (com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer) arg1;
          index_ = visitor.visitInt(
              hasIndex(), index_,
              other.hasIndex(), other.index_);
          cardinality_ = visitor.visitInt(
              hasCardinality(), cardinality_,
              other.hasCardinality(), other.cardinality_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  index_ = input.readInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  cardinality_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:PredictedHotseatContainer)
    private static final com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PredictedHotseatContainer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.android.launcher3.logger.LauncherAtom.PredictedHotseatContainer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PredictedHotseatContainer> PARSER;

    public static com.google.protobuf.Parser<PredictedHotseatContainer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface FolderContainerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:FolderContainer)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional int32 page_index = 1 [default = -1];</code>
     */
    boolean hasPageIndex();
    /**
     * <code>optional int32 page_index = 1 [default = -1];</code>
     */
    int getPageIndex();

    /**
     * <code>optional int32 grid_x = 2 [default = -1];</code>
     */
    boolean hasGridX();
    /**
     * <code>optional int32 grid_x = 2 [default = -1];</code>
     */
    int getGridX();

    /**
     * <code>optional int32 grid_y = 3 [default = -1];</code>
     */
    boolean hasGridY();
    /**
     * <code>optional int32 grid_y = 3 [default = -1];</code>
     */
    int getGridY();

    /**
     * <code>optional .WorkspaceContainer workspace = 4;</code>
     */
    boolean hasWorkspace();
    /**
     * <code>optional .WorkspaceContainer workspace = 4;</code>
     */
    com.android.launcher3.logger.LauncherAtom.WorkspaceContainer getWorkspace();

    /**
     * <code>optional .HotseatContainer hotseat = 5;</code>
     */
    boolean hasHotseat();
    /**
     * <code>optional .HotseatContainer hotseat = 5;</code>
     */
    com.android.launcher3.logger.LauncherAtom.HotseatContainer getHotseat();

    public com.android.launcher3.logger.LauncherAtom.FolderContainer.ParentContainerCase getParentContainerCase();
  }
  /**
   * Protobuf type {@code FolderContainer}
   */
  public  static final class FolderContainer extends
      com.google.protobuf.GeneratedMessageLite<
          FolderContainer, FolderContainer.Builder> implements
      // @@protoc_insertion_point(message_implements:FolderContainer)
      FolderContainerOrBuilder {
    private FolderContainer() {
      pageIndex_ = -1;
      gridX_ = -1;
      gridY_ = -1;
    }
    private int bitField0_;
    private int parentContainerCase_ = 0;
    private java.lang.Object parentContainer_;
    public enum ParentContainerCase
        implements com.google.protobuf.Internal.EnumLite {
      WORKSPACE(4),
      HOTSEAT(5),
      PARENTCONTAINER_NOT_SET(0);
      private final int value;
      private ParentContainerCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ParentContainerCase valueOf(int value) {
        return forNumber(value);
      }

      public static ParentContainerCase forNumber(int value) {
        switch (value) {
          case 4: return WORKSPACE;
          case 5: return HOTSEAT;
          case 0: return PARENTCONTAINER_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ParentContainerCase
    getParentContainerCase() {
      return ParentContainerCase.forNumber(
          parentContainerCase_);
    }

    private void clearParentContainer() {
      parentContainerCase_ = 0;
      parentContainer_ = null;
    }

    public static final int PAGE_INDEX_FIELD_NUMBER = 1;
    private int pageIndex_;
    /**
     * <code>optional int32 page_index = 1 [default = -1];</code>
     */
    public boolean hasPageIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 page_index = 1 [default = -1];</code>
     */
    public int getPageIndex() {
      return pageIndex_;
    }
    /**
     * <code>optional int32 page_index = 1 [default = -1];</code>
     */
    private void setPageIndex(int value) {
      bitField0_ |= 0x00000001;
      pageIndex_ = value;
    }
    /**
     * <code>optional int32 page_index = 1 [default = -1];</code>
     */
    private void clearPageIndex() {
      bitField0_ = (bitField0_ & ~0x00000001);
      pageIndex_ = -1;
    }

    public static final int GRID_X_FIELD_NUMBER = 2;
    private int gridX_;
    /**
     * <code>optional int32 grid_x = 2 [default = -1];</code>
     */
    public boolean hasGridX() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 grid_x = 2 [default = -1];</code>
     */
    public int getGridX() {
      return gridX_;
    }
    /**
     * <code>optional int32 grid_x = 2 [default = -1];</code>
     */
    private void setGridX(int value) {
      bitField0_ |= 0x00000002;
      gridX_ = value;
    }
    /**
     * <code>optional int32 grid_x = 2 [default = -1];</code>
     */
    private void clearGridX() {
      bitField0_ = (bitField0_ & ~0x00000002);
      gridX_ = -1;
    }

    public static final int GRID_Y_FIELD_NUMBER = 3;
    private int gridY_;
    /**
     * <code>optional int32 grid_y = 3 [default = -1];</code>
     */
    public boolean hasGridY() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 grid_y = 3 [default = -1];</code>
     */
    public int getGridY() {
      return gridY_;
    }
    /**
     * <code>optional int32 grid_y = 3 [default = -1];</code>
     */
    private void setGridY(int value) {
      bitField0_ |= 0x00000004;
      gridY_ = value;
    }
    /**
     * <code>optional int32 grid_y = 3 [default = -1];</code>
     */
    private void clearGridY() {
      bitField0_ = (bitField0_ & ~0x00000004);
      gridY_ = -1;
    }

    public static final int WORKSPACE_FIELD_NUMBER = 4;
    /**
     * <code>optional .WorkspaceContainer workspace = 4;</code>
     */
    public boolean hasWorkspace() {
      return parentContainerCase_ == 4;
    }
    /**
     * <code>optional .WorkspaceContainer workspace = 4;</code>
     */
    public com.android.launcher3.logger.LauncherAtom.WorkspaceContainer getWorkspace() {
      if (parentContainerCase_ == 4) {
         return (com.android.launcher3.logger.LauncherAtom.WorkspaceContainer) parentContainer_;
      }
      return com.android.launcher3.logger.LauncherAtom.WorkspaceContainer.getDefaultInstance();
    }
    /**
     * <code>optional .WorkspaceContainer workspace = 4;</code>
     */
    private void setWorkspace(com.android.launcher3.logger.LauncherAtom.WorkspaceContainer value) {
      if (value == null) {
        throw new NullPointerException();
      }
      parentContainer_ = value;
      parentContainerCase_ = 4;
    }
    /**
     * <code>optional .WorkspaceContainer workspace = 4;</code>
     */
    private void setWorkspace(
        com.android.launcher3.logger.LauncherAtom.WorkspaceContainer.Builder builderForValue) {
      parentContainer_ = builderForValue.build();
      parentContainerCase_ = 4;
    }
    /**
     * <code>optional .WorkspaceContainer workspace = 4;</code>
     */
    private void mergeWorkspace(com.android.launcher3.logger.LauncherAtom.WorkspaceContainer value) {
      if (parentContainerCase_ == 4 &&
          parentContainer_ != com.android.launcher3.logger.LauncherAtom.WorkspaceContainer.getDefaultInstance()) {
        parentContainer_ = com.android.launcher3.logger.LauncherAtom.WorkspaceContainer.newBuilder((com.android.launcher3.logger.LauncherAtom.WorkspaceContainer) parentContainer_)
            .mergeFrom(value).buildPartial();
      } else {
        parentContainer_ = value;
      }
      parentContainerCase_ = 4;
    }
    /**
     * <code>optional .WorkspaceContainer workspace = 4;</code>
     */
    private void clearWorkspace() {
      if (parentContainerCase_ == 4) {
        parentContainerCase_ = 0;
        parentContainer_ = null;
      }
    }

    public static final int HOTSEAT_FIELD_NUMBER = 5;
    /**
     * <code>optional .HotseatContainer hotseat = 5;</code>
     */
    public boolean hasHotseat() {
      return parentContainerCase_ == 5;
    }
    /**
     * <code>optional .HotseatContainer hotseat = 5;</code>
     */
    public com.android.launcher3.logger.LauncherAtom.HotseatContainer getHotseat() {
      if (parentContainerCase_ == 5) {
         return (com.android.launcher3.logger.LauncherAtom.HotseatContainer) parentContainer_;
      }
      return com.android.launcher3.logger.LauncherAtom.HotseatContainer.getDefaultInstance();
    }
    /**
     * <code>optional .HotseatContainer hotseat = 5;</code>
     */
    private void setHotseat(com.android.launcher3.logger.LauncherAtom.HotseatContainer value) {
      if (value == null) {
        throw new NullPointerException();
      }
      parentContainer_ = value;
      parentContainerCase_ = 5;
    }
    /**
     * <code>optional .HotseatContainer hotseat = 5;</code>
     */
    private void setHotseat(
        com.android.launcher3.logger.LauncherAtom.HotseatContainer.Builder builderForValue) {
      parentContainer_ = builderForValue.build();
      parentContainerCase_ = 5;
    }
    /**
     * <code>optional .HotseatContainer hotseat = 5;</code>
     */
    private void mergeHotseat(com.android.launcher3.logger.LauncherAtom.HotseatContainer value) {
      if (parentContainerCase_ == 5 &&
          parentContainer_ != com.android.launcher3.logger.LauncherAtom.HotseatContainer.getDefaultInstance()) {
        parentContainer_ = com.android.launcher3.logger.LauncherAtom.HotseatContainer.newBuilder((com.android.launcher3.logger.LauncherAtom.HotseatContainer) parentContainer_)
            .mergeFrom(value).buildPartial();
      } else {
        parentContainer_ = value;
      }
      parentContainerCase_ = 5;
    }
    /**
     * <code>optional .HotseatContainer hotseat = 5;</code>
     */
    private void clearHotseat() {
      if (parentContainerCase_ == 5) {
        parentContainerCase_ = 0;
        parentContainer_ = null;
      }
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, pageIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, gridX_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, gridY_);
      }
      if (parentContainerCase_ == 4) {
        output.writeMessage(4, (com.android.launcher3.logger.LauncherAtom.WorkspaceContainer) parentContainer_);
      }
      if (parentContainerCase_ == 5) {
        output.writeMessage(5, (com.android.launcher3.logger.LauncherAtom.HotseatContainer) parentContainer_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, pageIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, gridX_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, gridY_);
      }
      if (parentContainerCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (com.android.launcher3.logger.LauncherAtom.WorkspaceContainer) parentContainer_);
      }
      if (parentContainerCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (com.android.launcher3.logger.LauncherAtom.HotseatContainer) parentContainer_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.android.launcher3.logger.LauncherAtom.FolderContainer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.FolderContainer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.FolderContainer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.launcher3.logger.LauncherAtom.FolderContainer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.FolderContainer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.FolderContainer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.FolderContainer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.FolderContainer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.launcher3.logger.LauncherAtom.FolderContainer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.launcher3.logger.LauncherAtom.FolderContainer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.launcher3.logger.LauncherAtom.FolderContainer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code FolderContainer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.android.launcher3.logger.LauncherAtom.FolderContainer, Builder> implements
        // @@protoc_insertion_point(builder_implements:FolderContainer)
        com.android.launcher3.logger.LauncherAtom.FolderContainerOrBuilder {
      // Construct using com.android.launcher3.logger.LauncherAtom.FolderContainer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      public ParentContainerCase
          getParentContainerCase() {
        return instance.getParentContainerCase();
      }

      public Builder clearParentContainer() {
        copyOnWrite();
        instance.clearParentContainer();
        return this;
      }


      /**
       * <code>optional int32 page_index = 1 [default = -1];</code>
       */
      public boolean hasPageIndex() {
        return instance.hasPageIndex();
      }
      /**
       * <code>optional int32 page_index = 1 [default = -1];</code>
       */
      public int getPageIndex() {
        return instance.getPageIndex();
      }
      /**
       * <code>optional int32 page_index = 1 [default = -1];</code>
       */
      public Builder setPageIndex(int value) {
        copyOnWrite();
        instance.setPageIndex(value);
        return this;
      }
      /**
       * <code>optional int32 page_index = 1 [default = -1];</code>
       */
      public Builder clearPageIndex() {
        copyOnWrite();
        instance.clearPageIndex();
        return this;
      }

      /**
       * <code>optional int32 grid_x = 2 [default = -1];</code>
       */
      public boolean hasGridX() {
        return instance.hasGridX();
      }
      /**
       * <code>optional int32 grid_x = 2 [default = -1];</code>
       */
      public int getGridX() {
        return instance.getGridX();
      }
      /**
       * <code>optional int32 grid_x = 2 [default = -1];</code>
       */
      public Builder setGridX(int value) {
        copyOnWrite();
        instance.setGridX(value);
        return this;
      }
      /**
       * <code>optional int32 grid_x = 2 [default = -1];</code>
       */
      public Builder clearGridX() {
        copyOnWrite();
        instance.clearGridX();
        return this;
      }

      /**
       * <code>optional int32 grid_y = 3 [default = -1];</code>
       */
      public boolean hasGridY() {
        return instance.hasGridY();
      }
      /**
       * <code>optional int32 grid_y = 3 [default = -1];</code>
       */
      public int getGridY() {
        return instance.getGridY();
      }
      /**
       * <code>optional int32 grid_y = 3 [default = -1];</code>
       */
      public Builder setGridY(int value) {
        copyOnWrite();
        instance.setGridY(value);
        return this;
      }
      /**
       * <code>optional int32 grid_y = 3 [default = -1];</code>
       */
      public Builder clearGridY() {
        copyOnWrite();
        instance.clearGridY();
        return this;
      }

      /**
       * <code>optional .WorkspaceContainer workspace = 4;</code>
       */
      public boolean hasWorkspace() {
        return instance.hasWorkspace();
      }
      /**
       * <code>optional .WorkspaceContainer workspace = 4;</code>
       */
      public com.android.launcher3.logger.LauncherAtom.WorkspaceContainer getWorkspace() {
        return instance.getWorkspace();
      }
      /**
       * <code>optional .WorkspaceContainer workspace = 4;</code>
       */
      public Builder setWorkspace(com.android.launcher3.logger.LauncherAtom.WorkspaceContainer value) {
        copyOnWrite();
        instance.setWorkspace(value);
        return this;
      }
      /**
       * <code>optional .WorkspaceContainer workspace = 4;</code>
       */
      public Builder setWorkspace(
          com.android.launcher3.logger.LauncherAtom.WorkspaceContainer.Builder builderForValue) {
        copyOnWrite();
        instance.setWorkspace(builderForValue);
        return this;
      }
      /**
       * <code>optional .WorkspaceContainer workspace = 4;</code>
       */
      public Builder mergeWorkspace(com.android.launcher3.logger.LauncherAtom.WorkspaceContainer value) {
        copyOnWrite();
        instance.mergeWorkspace(value);
        return this;
      }
      /**
       * <code>optional .WorkspaceContainer workspace = 4;</code>
       */
      public Builder clearWorkspace() {
        copyOnWrite();
        instance.clearWorkspace();
        return this;
      }

      /**
       * <code>optional .HotseatContainer hotseat = 5;</code>
       */
      public boolean hasHotseat() {
        return instance.hasHotseat();
      }
      /**
       * <code>optional .HotseatContainer hotseat = 5;</code>
       */
      public com.android.launcher3.logger.LauncherAtom.HotseatContainer getHotseat() {
        return instance.getHotseat();
      }
      /**
       * <code>optional .HotseatContainer hotseat = 5;</code>
       */
      public Builder setHotseat(com.android.launcher3.logger.LauncherAtom.HotseatContainer value) {
        copyOnWrite();
        instance.setHotseat(value);
        return this;
      }
      /**
       * <code>optional .HotseatContainer hotseat = 5;</code>
       */
      public Builder setHotseat(
          com.android.launcher3.logger.LauncherAtom.HotseatContainer.Builder builderForValue) {
        copyOnWrite();
        instance.setHotseat(builderForValue);
        return this;
      }
      /**
       * <code>optional .HotseatContainer hotseat = 5;</code>
       */
      public Builder mergeHotseat(com.android.launcher3.logger.LauncherAtom.HotseatContainer value) {
        copyOnWrite();
        instance.mergeHotseat(value);
        return this;
      }
      /**
       * <code>optional .HotseatContainer hotseat = 5;</code>
       */
      public Builder clearHotseat() {
        copyOnWrite();
        instance.clearHotseat();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FolderContainer)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.android.launcher3.logger.LauncherAtom.FolderContainer();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.android.launcher3.logger.LauncherAtom.FolderContainer other = (com.android.launcher3.logger.LauncherAtom.FolderContainer) arg1;
          pageIndex_ = visitor.visitInt(
              hasPageIndex(), pageIndex_,
              other.hasPageIndex(), other.pageIndex_);
          gridX_ = visitor.visitInt(
              hasGridX(), gridX_,
              other.hasGridX(), other.gridX_);
          gridY_ = visitor.visitInt(
              hasGridY(), gridY_,
              other.hasGridY(), other.gridY_);
          switch (other.getParentContainerCase()) {
            case WORKSPACE: {
              parentContainer_ = visitor.visitOneofMessage(
                  parentContainerCase_ == 4,
                  parentContainer_,
                  other.parentContainer_);
              break;
            }
            case HOTSEAT: {
              parentContainer_ = visitor.visitOneofMessage(
                  parentContainerCase_ == 5,
                  parentContainer_,
                  other.parentContainer_);
              break;
            }
            case PARENTCONTAINER_NOT_SET: {
              visitor.visitOneofNotSet(parentContainerCase_ != 0);
              break;
            }
          }
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            if (other.parentContainerCase_ != 0) {
              parentContainerCase_ = other.parentContainerCase_;
            }
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  pageIndex_ = input.readInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  gridX_ = input.readInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  gridY_ = input.readInt32();
                  break;
                }
                case 34: {
                  com.android.launcher3.logger.LauncherAtom.WorkspaceContainer.Builder subBuilder = null;
                  if (parentContainerCase_ == 4) {
                    subBuilder = ((com.android.launcher3.logger.LauncherAtom.WorkspaceContainer) parentContainer_).toBuilder();
                  }
                  parentContainer_ =
                       input.readMessage(com.android.launcher3.logger.LauncherAtom.WorkspaceContainer.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.android.launcher3.logger.LauncherAtom.WorkspaceContainer) parentContainer_);
                    parentContainer_ = subBuilder.buildPartial();
                  }
                  parentContainerCase_ = 4;
                  break;
                }
                case 42: {
                  com.android.launcher3.logger.LauncherAtom.HotseatContainer.Builder subBuilder = null;
                  if (parentContainerCase_ == 5) {
                    subBuilder = ((com.android.launcher3.logger.LauncherAtom.HotseatContainer) parentContainer_).toBuilder();
                  }
                  parentContainer_ =
                       input.readMessage(com.android.launcher3.logger.LauncherAtom.HotseatContainer.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.android.launcher3.logger.LauncherAtom.HotseatContainer) parentContainer_);
                    parentContainer_ = subBuilder.buildPartial();
                  }
                  parentContainerCase_ = 5;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.android.launcher3.logger.LauncherAtom.FolderContainer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:FolderContainer)
    private static final com.android.launcher3.logger.LauncherAtom.FolderContainer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new FolderContainer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.android.launcher3.logger.LauncherAtom.FolderContainer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<FolderContainer> PARSER;

    public static com.google.protobuf.Parser<FolderContainer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
